var searchIndex = new Map(JSON.parse('[["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","_sum_as_f64","add","","","","","","","","","","","","add_to","agg_list","","","","","","","","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","append","apply","","","","","","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","","","","apply_kernel_cast","","","","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","","apply_to_slice","","","","","","apply_values","","","","","","apply_views","arg_sort","","","","","","arg_sort_multiple","","","","","arg_unique","","","","","arithmetic","as_array","as_binary","","as_list","as_ref","as_ref_dtype","as_string","","binary_zip_and_apply_amortized","bitand","","","bitor","","","bitxor","","","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","","cast_and_apply_in_place","cast_unchecked","","","","","","","cast_with_options","","","","","","","","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","","","","","","","","","equal_missing","","","","","","","","","","explode_and_offsets","","extend","field_by_name","fields_as_series","fill_null_with_values","","","filter","","","","first","first_non_null","float","fmt","","","","","","","for_each","for_each_amortized","","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_columns","from_iter","","","","","","","","","","","","from_iter_options","","","","","from_iter_trusted_length","","","","","","","","","","","","from_iter_values","","","","","from_iterator_par","from_par_iter","","","","","","","","from_par_iter_with_dtype","from_series","from_slice","","","","","from_slice_options","","","","","from_trusted_len_iter_rev","","from_vec","from_vec_validity","full","","","","","","","","full_null","","","","","","","","","full_null_like","full_null_with_dtype","","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","","get_distinct_count","get_fast_explode_list","get_flags","get_inner","","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","","","","group_tuples","","","","","","","","group_tuples_perfect","gt","","","","","","","gt_eq","","","","","","","has_nulls","head","init","","init_rand","inner_dtype","","interior_mut_metadata","into","","into_column","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","","","","","","","","into_no_null_iter","into_series","","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","","","","","","lt_eq","","","","","","","max","","max_binary","max_reduce","","","","mean","","median","","","median_reduce","","","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_binary","min_max","min_reduce","","","","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","","","","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","","not_equal","","","","","","","","","","not_equal_missing","","","","","","","","","","null_count","num_falses","num_trues","object","offsets","","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","","","quantile_reduce","","","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","rechunk_and_trim_to_normalized_offsets","rechunk_validity","ref_field","reinterpret_signed","","","","","","","","","","","reinterpret_unsigned","","","","","","","","","","","rem","","","","remainder","rename","reverse","","","","","","","","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","","","scatter_single","","","","scatter_with","","","","serialize","","","","","","","set","","","","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","","","","","","","","","shift_and_fill","","","","","","","","shrink_to_fit","slice","","sort","","","","","","sort_with","","","","","","split_at","","std","std_reduce","","","struct_fields","sub","","","","subtract","sum","","sum_reduce","","","tail","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","","","","","","","","","","","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","","","","","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_option","","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_value","","","","append_values_iter","","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","builder","clone","","","","clone_into","","","","clone_to_uninit","","","","default","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","drop","","","","","","","","","","","fast_explode","","","","","field","","","","","finish","","","","","","","","","","fixed_size_list","from","","","","","","","","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","","","","","","","","","","","inner_array","","","","","into","","","","","","","","","","","list","new","","","","","","","","","","","new_with_values_type","shrink_to_fit","","","","to_owned","","","","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","init","into","serialize","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","into_iter","","","new","","next","","","next_back","","","par","size_hint","","","try_from","","","try_into","","","type_id","","","vzip","","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","deserialize","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","serialize","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","get_list_builder","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_list_builder","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","","","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","","","borrow_mut","","","cast","cast_unchecked","cast_with_options","clone","","","clone_into","","","clone_to_uninit","","","default","","deref","","","deref_mut","","","descending","","deserialize","","","drop","","","eq","","","equal","equal_missing","equivalent","","","","","","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","","","from","","","","","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","","","init","","","into","","","is_elementwise","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","","max","mean","median","min","min_max","multithreaded","","n_unique","new","","new_from_index","not_equal","not_equal_missing","nulls_last","","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","row_encode","scatter_single","scatter_with","search_sorted","serialize","","","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","","","try_from","","","try_into","","","type_id","","","unique","var","vzip","","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","serialize","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","EMPTY","EMPTY_REF","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","","add_to","","","","","","","","","","","","","","","","append","","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array_leaf_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","","","","","","as_ref_dtype","as_slice","as_str","as_time_iter","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","build_local","call_categorical_merge_operation","cast","","cast_leaf","cast_time_unit","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","contains_categoricals","contains_objects","contains_views","create_enum_dtype","days","default","","","","","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","div","divide","","","","","","","","","","","","","drain_iter_and_finish","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","","","","","","encode_hex","encode_hex_upper","enum_","eq","","","","","","","","","","","","","eq_missing","equal","","","equal_missing","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","field","find","finish","","","fmt","","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_cats_and_dtype_unchecked","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_iter","","","","","","","","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_static","from_str","from_string","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","","get","","","","get_any_value","","","","","","","get_any_value_unchecked","","","","","","","get_categories","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","","","get_optional","get_or_infer","get_or_infer_with","get_rev_map","get_shape","get_str","get_unchecked","","gt","","","gt_eq","","","hash","","","","","","","","","hash_impl","hour","hours","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","into_iter","into_scalar","into_series","","","","","","into_static","into_string","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_empty","is_enum","","is_float","","is_global","is_integer","","is_known","is_list","is_local","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_str","last","leaf_dtype","len","","lit","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","materialize_unknown","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","","","","","","","","","","","","","n_unique","name","","","nanosecond","nanoseconds","new","","","","","","","","","","","","","","","new_dimension","new_logical","newest","next","not_equal","","","not_equal_missing","","","null_count","oldest","parse_from_str_slice","","partial_cmp","","","","physical","","precision","register_value","remainder","","","","","","","","","","","","","round","","same_src","scale","second","seconds","serialize","","","","","","","","","","","","","","set_name","set_time_unit","","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","str_value","strftime","","","strict_cast","sub","subtract","","","","","","","","","","","","","time_unit","","time_zone","to_arrow","","","","to_arrow_field","to_ascii","to_enum","to_fixed_size_list","to_global","to_local","to_logical_type","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","to_string","","","","","","","","tot_eq","truncate","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","with_validity_typed","write_char","write_fmt","write_str","zero_sum","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_error_source","as_ref","borrow","","","borrow_mut","","","constants","context","context_trace","deref","","","","deref_mut","","","drop","","","feature_gated","fmt","","","","","from","","","","","","","","","","","get_warning_function","init","","","into","","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","","try_from","","","try_into","","","try_to_compact_string","","type_id","","","vzip","","","wrap_msg","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","align_chunks","align_chunks_par","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clear_columns","clone","","","clone_into","","","clone_to_uninit","","","column","","column_extend_unchecked","columns","default","","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","lazy","len","materialized_column_iter","max_horizontal","mean_horizontal","min_horizontal","n_chunks","","new","new_no_checks","new_no_checks_height_from_first","new_no_length_checks","new_with_broadcast","new_with_broadcast_len","new_with_broadcast_no_namecheck","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","serialize","","set_column_names","set_height","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_var","append","apply_unary_elementwise","arg_sort","array","as_materialized_series","","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","bitxor","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","date","datetime","decimal","default","deref","","deref_mut","","deserialize","div","","","","divide","drop","","drop_nulls","dtype","","duration","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_data_ptr","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","init","","into","","into_column","","","into_frame","into_materialized_series","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","max_reduce","min_reduce","mul","","","","name","","new","","new_empty","","new_from_index","new_scalar","not_equal","not_equal_missing","null_count","phys_iter","product","rechunk","rem","","","","rename","","reshape_array","reshape_list","resize","reverse","sample_frac","sample_n","scalar","serialize","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","split_at","str","strict_cast","","struct_","sub","","","","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_apply_unary_elementwise","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_str","try_struct","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","serialize","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Date","Datetime","Duration","Float32","","Float64","","Int16","","Int32","","Int64","","Int8","","Null","","Row","String","","Struct","Time","UInt16","","UInt32","","UInt64","","UInt8","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","Any","","","","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","","","","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","","","","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","","","","","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","","Bounds","BoundsIter","Brotli","BrotliLevel","Bytes","","C","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","Cache","Cast","CastTimeUnit","CatIter","Categorical","","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalOwned","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","","ColumnBinaryUdf","ColumnNotFound","Columns","","ColumnsUdf","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","","DataType","","Date","","","","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","","","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeOwned","DatetimeType","Day","Decimal","","","","Decimal256","DecimalChunked","DecimalType","Dense","Deserialized","","DfTake","Dictionary","Diff","Dimension","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","","","","","","DurationArgs","DurationChunked","DurationMethods","DurationType","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","","EnumOwned","Eq","EqValidity","Equiprobable","","Err","EscapeRegex","Exclude","Excluded","ExclusiveOr","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetadata","FileMetadataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","","Find","First","","","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","","Float16","Float32","","","","Float32Chunked","Float32Type","Float64","","","","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","","GtEq","","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","","Head","HexEncode","Higher","","Hour","IDX_DTYPE","IEJoin","IEJoinOptions","INTEGER_RE","IO","IR","IS_ARROW","Idx","","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","","InProcessQuery","IndexColumn","IndexOrder","IndexToUsize","InequalityOperator","Infer","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","","Int128Chunked","Int128Type","Int16","","","","Int16Chunked","Int16Type","Int32","","","","Int32Chunked","Int32Type","Int64","","","","Int64Chunked","Int64Type","Int8","","","","Int8Chunked","Int8Type","InterSect","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoColumn","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","","IsIn","IsInfinite","IsLastDistinct","","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","","Join","","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","","","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","LazySerde","Left","","","","","","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","","","List","","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","","LowerBound","Lowercase","Lt","","LtEq","","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","","","","MaxBound","MaxHorizontal","Mean","","","MeanHorizontal","Median","","Microsecond","","Microseconds","Midpoint","","Millennium","Millisecond","","Milliseconds","Min","","","","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","","Nanoseconds","Native","Nearest","","","","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","","","","","Not","NotEq","NotEqValidity","Nth","Null","","","","","","","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","OpaqueColumnUdf","Operator","OptFlags","Or","Ordinal","OrdinalDay","OtherScalar","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetAsyncReader","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","Prefiltered","PrefixFields","PrimitiveChunkedBuilder","PythonScan","Quantile","","","QuantileAggSeries","QuantileInterpolOptions","QuantileMethod","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","","Random","","Range","","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","ReshapeDimension","RevMapping","Reverse","","Right","","","","","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingFnParams","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Root","Round","","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","","","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaExt","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","","Select","Selector","","Semi","SerReader","SerWriter","SerializeOptions","Series","","","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","","","","","SlicedArray","SlicedGroups","Snappy","Some","Sort","","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Specified","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","","Str","StrCat","String","","","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","","","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","Sub","SubPlan","SuffixFields","Sum","","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","","","","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","","","","UInt16Chunked","UInt16Type","UInt32","","","","UInt32Chunked","UInt32Type","UInt64","","","","UInt64Chunked","UInt64Type","UInt8","","","","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","","UnionArgs","Unique","UniqueKeepStrategy","Unknown","","UnknownKind","UnpivotArgsDSL","UnpivotArgsIR","UpperBound","Uppercase","UserDefinedFunction","Utf8","","Utf8View","ValueCounts","ValueIterT","ValueT","Var","","","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_finish_anti_semi_join","_full_join_from_series","_internal","_join_suffix_name","_rename_fields_impl","_semi_anti_join_from_series","_split_at_unchecked","_sum_as_f64","","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","","add","","","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","","","all_horizontal","allocator","allow_missing_columns","allow_parallel","","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","and_reduce","anonymous_scan","anti_join","any","any_horizontal","append","append_null","","append_opt_series","append_option","append_series","append_value","apply","","","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","","","","arg_min","","","","arg_sort","","","arg_sort_by","arg_sort_multiple","arg_unique","","","arg_where","args","","arity","arr","arr_from_iter","","","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","","","array","arrow_schema","as_any","","","","as_any_mut","","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_error_source","as_fd","as_list","as_ptr","as_raw_fd","as_ref","","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","","","","","","batched_borrowed","binary","","binary_expr","bitand","","","bitand_assign","bitor","","bitor_assign","bits","","bitxor","","","bitxor_assign","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","boxed","boxed_metadata","buffer","builder","byte_source","cache","","","","call","","","","call_categorical_merge_operation","call_udf","","call_unchecked","cancel","cast","","","","","","cast_all","cast_unchecked","cast_with_options","","","cat","","cause","cbrt","ceil","","center","century","check_bound","checked_div","","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","","clip_max","","clip_min","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_inner","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_span","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","closed_window","","","cloud","cloud_options","","","","","cmp","","coalesce","","","","coalesce_columns","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","collect_schema","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","","complement","compression","","","compute_schema","concat","","concat_expr","concat_impl","","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","","","","","contains_chunked","","contains_literal","convert_inner_type","convert_to_unsigned_index","copy","copy_if_not_exists","count","","","count_matches","count_matches_many","count_ones","count_rows","","count_rows_from_slice","count_zeros","create_enum_dtype","create_left_df_chunked","create_sorting_map","created_by","cross_join","","cross_join_dfs","cum_count","","cum_fold_exprs","cum_max","","cum_min","","cum_prod","","cum_reduce_exprs","cum_sum","","cumulative_eval","current_span","data","data_page_size","datatypes","date_format","date_ranges","datetime","","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","","","","days","","","days_only","ddof","","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","default_arrays","default_join_ids","delete","delete_stream","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","descending","","","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","df","","diagonal","diff","","","difference","display","distinct_count","","div","","divide","dot","downcast","downcast_raw","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_no_validate","drop_nulls","","","drop_span","dst_offset","dt","","dtype","","","","","","","dtype_col","dtype_cols","dtype_overwrite","duration","empty","","enabled","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_dtype","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","enter","eol_char","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equal","equal_missing","equivalentescape_regex","escape_regex_str","eval","event","event_enabled","every","exact","exclude","exclude_dtype","execute","exit","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","","","explode_and_offsets","expr","extend","extend_constant","extract","","extract_all","extract_all_many","extract_groups","fast_explode","fetch","","fetch_blocking","field","","field_by_index","field_by_name","field_by_names","fields","fields_to_cast","fill_nan","","fill_null","","","fill_null_with_strategy","fill_null_with_values","filter","","","","find","find_chunked","find_literal","finish","","","","","","","","","","","","","","","","","","","","","finish_no_glob","","","finish_with_scan_ops","finishes_this_batch","first","","","","","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","","floor_div","floor_div_series","flush","","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fmt_group_by_column","fmt_str","fn_params","","fold_exprs","force_parallel","","format","format_str","forward_fill","fromfrom_arrow_schema","from_bits","from_bits_retain","","from_bits_truncate","from_data_default","from_data_unchecked_default","","from_iter","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","","from_type","from_uri","","from_vec","","from_zeroable_vec","full","","","","full_join","","full_null","","","fun","function_expr","function_with_options","gather","","gather_every","ge","get","","","","","","get_any_value","","get_any_value_unchecked","","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","","","get_fields","get_fields_lens","get_glob_start_idx","get_metadata","","","get_mut","get_mut_unchecked","get_object","get_object_chunked_unchecked","get_opts","get_overlapping_bounds_iter","get_parse_options","get_range","get_ranges","get_reader_bytes","get_schema","get_unchecked","","","glob","","","group_by","group_by_dynamic","","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","","","gt_eq","","has_header","has_nulls","hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hash_join_inner","hash_join_outer","hash_join_semi_anti","head","","","","hex_decode","hex_encode","hive_options","","hor_str_concat","hour","","","","hours","","how","","idx","ignore_errors","impl_duration","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","","include_boundaries","include_file_paths","","include_header","","increment_strong_count","increment_strong_count_in","index","","index_cols","index_column","","indexes_to_usizes","infer_file_schema","infer_schema_len","","infer_schema_length","","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner","inner_array","inner_join","","inner_mut","input_fields","insert","int_range","int_ranges","interpolate","","","interpolate_by","","","intersection","intersects","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","","into_data","into_inner","","into_iter","","","","","into_list_name_space","","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","","","into_vec","","is_all","is_arithmetic","is_asof","is_between","","is_cloud_url","is_comparison","is_constant_duration","is_empty","","","is_finished","is_finite","is_first_distinct","","","is_full","is_full_days","is_ie","is_in","","is_infinite","is_last_distinct","","","is_leap_year","","","is_nan","","is_not_nan","is_not_null","","","is_null","","","","","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_scalar","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","","","iter","","","","iter_fields","iter_names","iter_names_and_dtypes","join","","","","join_asof_by","join_builder","join_literal","join_many","join_nulls","","join_where","json_encode","keep","key_value_metadata","","label","last","","","","","","lazy","","le","leading_ones","leading_zeros","left_by","left_join","","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","","","","","limit","","line_terminator","list","","list_with_delimiter","list_with_offset","lit","","","","","","logical_and","logical_or","logical_plan","","low_memory","","","","","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","","","lt_eq","","maintain_order","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","","materialize_empty_df","materialize_projection","materialize_unknown_dtypes","max","","","","","","max_level_hint","max_reduce","","max_row_group_height","max_value","","mean","","","","","","median","","","","","","","median_reduce","","memory_mapped","merge_dtypes","metadata","","method","","microsecond","microseconds","","millennium","milliseconds","","min","","","","","","min_max","min_periods","","","min_reduce","","min_value","","minute","","","","minutes","","missing_is_null","mode","","month","","","","months","months_only","mul","","","multiply","multithreaded","","n_chunks","n_rows","","","","","","","","n_threads","","n_unique","","","","","name","","","","","","nan_max","nan_min","nan_propagating_aggregate","nanosecond","","","nanoseconds","","","ne","needs_checks","neg","","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_cyclic","new_cyclic_in","new_empty","new_from_index","","new_from_str","new_in","new_int_range","new_multi","new_null","new_paths","","new_single","new_span","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_with_sources","","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","","next_batch","next_batches","","","nodes","nodes_owned","not","","","not_equal","not_equal_missing","nth","null","","","","null_count","","","","","null_values","nulls_last","","num_rows","","","offset","","","offsets","on","","","operator1","operator2","optimize","options","or","or_reduce","ordinal","","ordinal_day","ordinal_year","otherwise","","output_schema","over","over_with_options","overwrite_schema","parallel","","","parse","parse_from_str_slice","","","parse_options","parsed_int","partial_cmp","","path","period","","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","put","put_multipart","put_multipart_opts","put_opts","python_udf","quantile","","","","quantile_reduce","","quarter","","","queue","quote_char","","quote_style","raise_if_empty","rank","","read","read_buf","read_exact","read_parallel","","read_to_end","read_to_string","read_varint","read_vectored","rechunk","","","","","","","","rechunk_validity","record","record_follows_from","reduce_exprs","register_callsite","reinterpret_signed","reinterpret_unsigned","rem","","remainder","remove","remove_bom","rename","","","rename_fields","rename_if_not_exists","repeat","repeat_by","","replace","","","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","","replace_time_zone","reshape","resolve_homedir","return_type","reverse","","","","","","right_by","right_on","rolling","","","rolling_map","","","rolling_map_float","rolling_max","","rolling_max_by","","rolling_mean","","rolling_mean_by","","rolling_median","rolling_median_by","rolling_min","","rolling_min_by","","rolling_quantile","","rolling_quantile_by","","rolling_std","","rolling_std_by","","rolling_sum","","rolling_sum_by","","rolling_var","","rolling_var_by","","round","","","round_ms","round_ns","round_sig_figs","","round_us","row_encode","row_group_size","row_groups","row_index","","","","","","","rows_left","rows_right","same_type","","sample_frac","sample_n","scan","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","scatter","scatter_single","scatter_with","schema","","","","","","","","","","","","schema_descr","schema_inference","schema_only","schema_overwrite","schema_with_arenas","search_sorted","second","","","","seconds","","seek","select","select_seq","semi_join","separator","","serialize","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serialize_options","series","set","","set_cached_arena","set_low_memory","set_metadata","set_parallel","set_rechunk","","","","","","set_sorted_flag","set_validity","shift","","","","","","shift_and_fill","","","should_coalesce","shrink_dtype","shrink_to_fit","","shuffle","sink_csv","sink_ipc","sink_json","sink_parquet","size_bytes","skip_rows","","","skip_rows_after_header","slice","","","","","","","slice_typed","","slice_typed_unchecked","","slice_unchecked","","sliced","sliced_unchecked","sort","","","","","","sort_by","sort_by_exprs","sort_with","","source","sources","","","spawn_local_obj","spawn_obj","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","status","status_local","std","","","","","","std_reduce","","store","str","str_escape_regex","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","strftime","strict","strict_cast","strings","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","strong_count","struct_","sub","","","","sub_assign","subtract","suffix","","","","suffix_fields","sum","","","","","","sum_reduce","","super_type","swap_operands","symmetric_difference","sync_update","tail","","","","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","","take_validity","ternary_expr","then","","time_format","time_ranges","time_unit","","time_zone","timestamp","to_alp","","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","","to_field","to_integer","to_list","to_lowercase","","to_opt","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","","","","","to_supertype","to_supertypes","to_titlecase","to_uppercase","","to_writer","","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","trailing_ones","trailing_zeros","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","","truncate_ns","","truncate_ragged_lines","truncate_us","","try_arr_from_iter","","","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","","","try_close","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_from_thrift","try_get_field","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","","","","","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","","","try_set_sorted_flag","try_to_compact_string","","","","","","","","","","","","","try_unwrap","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_name","udf","union","unique","","","","","","unique_generic","unique_stable","","","","unique_stable_generic","unnest","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","","","","utf8","validate","validation","validity","","value","","value_counts","","value_name","","value_unchecked","values","values_iter","","var","","","","","","var_reduce","","variable_name","","vec_hash","vec_hash_combine","version","view","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weak_count","week","","","weekday","","","weeks","","weeks_only","weights","when","","","window_size","","","with","with_ambiguous","with_arrow_schema_projection","","with_batch_size","","","with_cache","with_capacity","","with_chunk_size","","with_cloud_options","","with_cluster_with_columns","with_coalesce","with_collapse_joins","with_column","with_columns","","","","","","with_columns_seq","with_comment_prefix","","with_compat_level","","with_compression","","","","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","","with_dtype","with_dtype_overwrite","","with_encoding","","with_eol_char","","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","","with_hive_partition_columns","","","with_hms","","with_hour","with_hours","with_ignore_errors","","","","","with_include_file_path","","","with_include_file_paths","","with_infer_schema_length","","","with_json_format","","with_line_terminator","with_low_memory","","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","","with_month","with_n_rows","","","","","","","","","with_n_threads","","with_nanoseconds","with_null_value","with_null_values","","with_optimizations","with_parse_options","with_path","","with_paths","with_predicate","","","","with_predicate_pushdown","with_projection","","","","","","","","with_projection_pushdown","with_quote_char","","","with_quote_style","with_raise_if_empty","","with_rechunk","","","","","with_row_estimate","with_row_group_size","with_row_index","","","","","","","","","","","","","with_row_limit","with_same_dtype","with_schema","","","","","with_schema_modify","with_schema_overwrite","","","","with_second","with_seconds","with_separator","","","with_simplify_expr","with_skip_rows","","with_skip_rows_after_header","","with_slice","","with_slice_pushdown","with_sources","","","with_statistics","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","","with_try_parse_dates","","with_type_coercion","with_validity","","with_validity_typed","","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_all","write_df_to_file","","write_partitioned_dataset","write_varint","write_vectored","xor","xor_reduce","year","","","","zip","zip_with","expr","input","","method","propagate_nans","","quantile","closed","ignore_nulls","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","include_nulls","groups","rolling","dtype","high","low","error","","msg","","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","","days","fn_params","hour","","hours","is_leap_year","","iso_year","","microseconds","milliseconds","min_periods","minute","","minutes","month","","nanosecond","","nanoseconds","ordinal","","parse_from_str_slice","","","quarter","","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","","seconds","string","week","","weekday","window_size","year","","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","","","pattern","to_owned","try_from","try_from_with_unit","","","try_into","type_id","vzip","AccessKeyId","AmazonS3ConfigKey","Aws","Azure","Bucket","Checksum","Client","CloudLocation","CloudOptions","CloudType","CloudWriter","ConditionalPut","ContainerCredentialsRelativeUri","CopyIfNotExists","DefaultRegion","DisableTagging","Encryption","Endpoint","File","Gcp","Hf","Http","ImdsV1Fallback","MetadataEndpoint","ObjectStorePath","PolarsObjectStore","Region","S3Express","SecretAccessKey","SkipSignature","Token","UnsignedPayload","VirtualHostedStyleRequest","__clone_box","","","as_ref","borrow","","","","","","borrow_mut","","","","","","bucket","build_aws","build_http","build_object_store","clone","","","clone_into","","","clone_to_uninit","","","credential_provider","default","","deref","","","","","","deref_mut","","","","","","deserialize","","download","drop","","","","","","","eq","","","","equivalent","","","","","","execute","expansion","file_cache_ttl","flush","","fmt","","","","from","","","","","","from_str","","from_untyped_config","from_url","get","get_range","get_ranges","glob","hash","","head","init","","","","","","into","","","","","","max_retries","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","serialize","","sync_update","to_owned","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","with_aws","with_credential_provider","with_max_retries","write","write_all","write_varint","Aws","AwsCredential","CredentialProviderFunction","Function","IntoCredentialProvider","None","ObjectStoreCredential","PlCredentialProvider","Python","__clone_box","","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","deref","","","","deref_mut","","","","deserialize","drop","","","","eq","","","equivalent","","","","","","","","","fmt","","","from","","","","","","from_func","from_python_func","from_python_func_object","hash","","init","","","","into","","","","into_aws_provider","","","key_id","secret_key","serialize","to_owned","","token","try_from","","","","try_into","","","","type_id","","","","vzip","","","","AccessKeyId","AmazonS3ConfigKey","Aws","Azure","Bucket","Checksum","Client","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","CopyIfNotExists","DefaultRegion","DisableTagging","Encryption","Endpoint","File","Gcp","Hf","Http","ImdsV1Fallback","MetadataEndpoint","Region","S3Express","SecretAccessKey","SkipSignature","Token","UnsignedPayload","VirtualHostedStyleRequest","file_cache_ttl","max_retries","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_dtype","dtype","","enum_","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","EnumChunkedBuilder","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","EscapeRegex","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CALL_COLUMNS_UDF_PYTHON","CALL_DF_UDF_PYTHON","PYTHON3_VERSION","PYTHON_SERDE_MAGIC_BYTE_MARK","PythonFunction","PythonGetOutput","PythonUdfExpression","__clone_box","borrow","","","borrow_mut","","","call_udf","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","drop","","","eq","equivalent","","","fmt","from","","","","get_field","init","","","into","","","new","","serialize","to_owned","try_deserialize_bytes","try_from","","","try_into","","","try_serialize","","try_serialize_to_bytes","type_id","","","vzip","","","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","escape_regex","escape_regex_str","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_escape_regex","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","","Ascending","BitRepr","ChunkCompareEq","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","and_reduce","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","","as_series","","as_single_ptr","","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","","","","borrow_mut","","","","boxed_metadata","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","date","datetime","decimal","default","deref","","","","","deref_mut","","","","deserialize","","div","","","","drop","","","","drop_nulls","dtype","duration","eq","","equal","","","","equal_missing","","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","first","fmt","","","fmt_list","from","","","","","","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_column","into_frame","into_iter","into_series","","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","is_sorted_flag","iter","iter_chunks","last","len","","limit","list","list_offsets_and_validities_recursive","list_rechunk_and_trim_to_normalized_offsets","lit","lt","","","lt_eq","","","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","","","","n_chunks","","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","","not_equal_missing","","","","null","null_count","ops","or_reduce","phys_iter","product","quantile_reduce","rechunk","rechunk_validity","rem","","","rename","","reshape_array","reshape_list","reverse","","rolling_map","sample_frac","sample_n","select_chunk","serialize","","set_sorted_flag","shift","shrink_to_fit","","shuffle","size_hint","slice","","sort","sort_with","split_at","","std","std_reduce","str","str_value","strict_cast","struct_","sub","","","","sum","sum_reduce","","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_logical_repr_unchecked","to_owned","","to_physical_repr","to_string","try_add_owned","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_struct","try_sub_owned","try_time","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","","","","with_name","wrapping_trunc_div_scalar","xor_reduce","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Add","Div","FloorDiv","LhsNumOps","Mul","NumOpsDispatch","NumOpsDispatchInner","NumericListOp","Output","Rem","Sub","__clone_box","_struct_arithmetic","add","add_to","","borrow","borrow_mut","checked","clone","clone_into","clone_to_uninit","deref","deref_mut","div","divide","","drop","execute","fmt","from","init","into","mul","multiply","","rem","remainder","","sub","subtract","","to_owned","try_from","try_into","type_id","vzip","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","checked_div_num","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","init","into","serialize","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[867,"polars::chunked_array::arithmetic"],[895,"polars::chunked_array::builder"],[1156,"polars::chunked_array::builder::list"],[1173,"polars::chunked_array::cast"],[1204,"polars::chunked_array::collect"],[1218,"polars::chunked_array::float"],[1220,"polars::chunked_array::from_iterator_par"],[1224,"polars::chunked_array::iterator"],[1279,"polars::chunked_array::iterator::par"],[1281,"polars::chunked_array::metadata"],[1567,"polars::chunked_array::object"],[1644,"polars::chunked_array::object::builder"],[1668,"polars::chunked_array::object::registry"],[1697,"polars::chunked_array::ops"],[1913,"polars::chunked_array::ops::arity"],[1949,"polars::chunked_array::ops::float_sorted_arg_max"],[1951,"polars::chunked_array::ops::gather"],[1954,"polars::chunked_array::ops::row_encode"],[1963,"polars::chunked_array::ops::search_sorted"],[1995,"polars::chunked_array::ops::sort"],[2002,"polars::chunked_array::ops::sort::arg_bottom_k"],[2003,"polars::chunked_array::ops::sort::options"],[2016,"polars::chunked_array::temporal"],[2024,"polars::chunked_array::temporal::conversion"],[2027,"polars::datatypes"],[3584,"polars::datatypes::categorical"],[3601,"polars::datatypes::categorical::revmap"],[3607,"polars::datatypes::categorical::string_cache"],[3626,"polars::datatypes::enum_"],[3644,"polars::docs"],[3646,"polars::error"],[3740,"polars::error::PolarsError"],[3744,"polars::error::constants"],[3747,"polars::frame"],[4033,"polars::frame::column"],[4280,"polars::frame::explode"],[4311,"polars::frame::group_by"],[4549,"polars::frame::group_by::GroupByMethod"],[4550,"polars::frame::group_by::GroupsProxy"],[4552,"polars::frame::group_by::aggregations"],[4565,"polars::frame::group_by::expr"],[4568,"polars::frame::row"],[4678,"polars::functions"],[4680,"polars::prelude"],[10354,"polars::prelude::AggExpr"],[10361,"polars::prelude::BooleanFunction"],[10364,"polars::prelude::DslPlan"],[10416,"polars::prelude::Expr"],[10451,"polars::prelude::FunctionExpr"],[10473,"polars::prelude::GroupByMethod"],[10474,"polars::prelude::GroupsProxy"],[10476,"polars::prelude::LiteralValue"],[10479,"polars::prelude::PolarsError"],[10483,"polars::prelude::StringFunction"],[10497,"polars::prelude::TemporalFunction"],[10499,"polars::prelude::_internal"],[10521,"polars::prelude::aggregations"],[10534,"polars::prelude::arity"],[10570,"polars::prelude::array"],[10589,"polars::prelude::binary"],[10606,"polars::prelude::buffer"],[10680,"polars::prelude::buffer::Buffer"],[10683,"polars::prelude::byte_source"],[10764,"polars::prelude::cat"],[10765,"polars::prelude::chunkedarray"],[10831,"polars::prelude::chunkedarray::string"],[10870,"polars::prelude::chunkedarray::string::infer"],[10901,"polars::prelude::cloud"],[11082,"polars::prelude::cloud::credential_provider"],[11179,"polars::prelude::cloud::options"],[11210,"polars::prelude::compression"],[11228,"polars::prelude::datatypes"],[11509,"polars::prelude::datatypes::categorical"],[11526,"polars::prelude::datatypes::categorical::revmap"],[11532,"polars::prelude::datatypes::categorical::string_cache"],[11536,"polars::prelude::datatypes::enum_"],[11537,"polars::prelude::datetime"],[11540,"polars::prelude::default_arrays"],[11546,"polars::prelude::dt"],[11598,"polars::prelude::expr"],[11601,"polars::prelude::fixed_size_list"],[11621,"polars::prelude::float_sorted_arg_max"],[11623,"polars::prelude::function_expr"],[11798,"polars::prelude::function_expr::BooleanFunction"],[11801,"polars::prelude::function_expr::FunctionExpr"],[11823,"polars::prelude::function_expr::StringFunction"],[11837,"polars::prelude::function_expr::TemporalFunction"],[11839,"polars::prelude::function_expr::cat"],[11841,"polars::prelude::function_expr::pow"],[11845,"polars::prelude::function_expr::rolling"],[11878,"polars::prelude::function_expr::rolling_by"],[11911,"polars::prelude::gather"],[11914,"polars::prelude::interpolate"],[11918,"polars::prelude::interpolate_by"],[11919,"polars::prelude::mode"],[11920,"polars::prelude::nan_propagating_aggregate"],[11925,"polars::prelude::null"],[11956,"polars::prelude::python_udf"],[12021,"polars::prelude::row_encode"],[12030,"polars::prelude::schema_inference"],[12057,"polars::prelude::search_sorted"],[12063,"polars::prelude::series"],[12085,"polars::prelude::sort"],[12092,"polars::prelude::sort::arg_bottom_k"],[12093,"polars::prelude::sort::options"],[12106,"polars::prelude::strings"],[12163,"polars::prelude::udf"],[12169,"polars::prelude::utf8"],[12173,"polars::series"],[12647,"polars::series::amortized_iter"],[12671,"polars::series::arithmetic"],[12718,"polars::series::arithmetic::checked"],[12724,"polars::series::ops"],[12753,"dyn_clone::sealed"],[12754,"polars_core::datatypes"],[12755,"polars_core::chunked_array"],[12756,"polars_error"],[12757,"core::result"],[12758,"polars_core::series"],[12759,"core::ops::function"],[12760,"num_traits"],[12761,"num_traits::cast"],[12762,"polars_core::series::arithmetic::borrowed"],[12763,"polars_core::frame::group_by::proxy"],[12764,"polars_core::chunked_array::object"],[12765,"core::option"],[12766,"polars_arrow::array"],[12767,"alloc::boxed"],[12768,"core::iter::traits::iterator"],[12769,"polars_core::chunked_array::list::iterator"],[12770,"polars_utils::pl_str"],[12771,"alloc::borrow"],[12772,"core::marker"],[12773,"polars_core::series::amortized_iter"],[12774,"alloc::string"],[12775,"polars_core::datatypes::dtype"],[12776,"polars_arrow::array::binview::view"],[12777,"polars_core::chunked_array::ops::sort::options"],[12778,"polars_core::frame::column"],[12779,"polars_core::chunked_array::metadata::md_trait"],[12780,"polars_core::chunked_array::cast"],[12781,"polars_core::series::arithmetic::borrowed::checked"],[12782,"core::slice::iter"],[12783,"core::iter::adapters::map"],[12784,"alloc::vec"],[12785,"compact_str"],[12786,"polars_core::chunked_array::metadata"],[12787,"core::iter::traits::double_ended"],[12788,"polars_arrow::offset"],[12789,"core::fmt"],[12790,"core::iter::traits::collect"],[12791,"polars_arrow::bitmap::immutable"],[12792,"core::convert"],[12793,"polars_core::chunked_array::from_iterator"],[12794,"core::borrow"],[12795,"rayon::iter"],[12796,"polars_arrow::pushable"],[12797,"core::iter::traits::exact_size"],[12798,"core::clone"],[12799,"polars_arrow::trusted_len"],[12800,"polars_core::datatypes::any_value"],[12801,"polars_arrow::array::binary"],[12802,"std::sync::rwlock"],[12803,"polars_core::chunked_array::logical"],[12804,"polars_core::datatypes::time_unit"],[12805,"polars_core::series::series_trait"],[12806,"polars_core::chunked_array::iterator"],[12807,"polars_core::scalar"],[12808,"polars_core::chunked_array::metadata::guard"],[12809,"polars_core::chunked_array::metadata::interior_mutable"],[12810,"alloc::sync"],[12811,"core::ops::range"],[12812,"polars_core::datatypes::field"],[12813,"polars_arrow::legacy::kernels::rolling::no_nulls"],[12814,"polars_core::chunked_array::ops::rolling_window"],[12815,"polars_ops::chunked_array::scatter"],[12816,"serde::ser"],[12817,"polars_utils::index"],[12818,"ahash::random_state"],[12819,"polars_utils::hashing"],[12820,"ndarray::data_repr"],[12821,"ndarray::dimension::dim"],[12822,"ndarray"],[12823,"either"],[12824,"core::any"],[12825,"polars_core::frame"],[12826,"polars_core::chunked_array::arithmetic::numeric"],[12827,"polars_core::chunked_array::builder::list::anonymous"],[12828,"polars_core::chunked_array::builder::list::boolean"],[12829,"polars_core::chunked_array::builder::list::primitive"],[12830,"polars_core::chunked_array::builder::list"],[12831,"polars_core::chunked_array::builder"],[12832,"polars_core::chunked_array::builder::list::binary"],[12833,"polars_core::chunked_array::builder::list::null"],[12834,"polars_core::chunked_array::builder::string"],[12835,"polars_arrow::array::binview"],[12836,"polars_core::chunked_array::builder::boolean"],[12837,"polars_core::chunked_array::builder::null"],[12838,"polars_core::chunked_array::builder::primitive"],[12839,"polars_core::series::implementations::null"],[12840,"serde::de"],[12841,"core::hash"],[12842,"polars_core::chunked_array::collect"],[12843,"polars_core::chunked_array::float"],[12844,"polars_core::chunked_array::from_iterator_par"],[12845,"polars_arrow::array::boolean"],[12846,"polars_arrow::array::fixed_size_list"],[12847,"polars_core::chunked_array::metadata::env"],[12848,"polars_core::chunked_array::metadata::collect"],[12849,"bitflags::iter"],[12850,"std::fs"],[12851,"std::sync::mutex"],[12852,"polars_arrow::datatypes"],[12853,"polars_arrow::bitmap::utils::iterator"],[12854,"polars_arrow::bitmap::utils::zip_validity"],[12855,"polars_core::chunked_array::object::builder"],[12856,"polars_core::chunked_array::object::registry"],[12857,"polars_core::chunked_array::ops"],[12858,"polars_arrow::legacy::array::slice"],[12859,"polars_core::chunked_array::ops::arity"],[12860,"polars_arrow::array::static_array"],[12861,"core::error"],[12862,"polars_arrow::array::primitive"],[12863,"polars_row::row"],[12864,"polars_core::chunked_array::ops::search_sorted"],[12865,"polars_core::utils"],[12866,"chrono::naive::datetime"],[12867,"chrono_tz::timezones"],[12868,"chrono::naive::time"],[12869,"polars_core::chunked_array::logical::categorical"],[12870,"polars_core::chunked_array::logical::categorical::builder"],[12871,"polars_arrow::array::static_array_collect"],[12872,"std::path"],[12873,"std::ffi::os_str"],[12874,"bytemuck::zeroable"],[12875,"polars_core::chunked_array::logical::categorical::revmap"],[12876,"polars_core::chunked_array::logical::categorical::merge"],[12877,"polars_arrow::datatypes::reshape"],[12878,"core::cmp"],[12879,"polars_core::datatypes::_serde"],[12880,"polars_arrow::datatypes::physical_type"],[12881,"polars_arrow::types"],[12882,"chrono::time_delta"],[12883,"chrono::naive::date"],[12884,"polars_core::datatypes::into_scalar"],[12885,"polars_plan::dsl::expr"],[12886,"polars_core::chunked_array::logical::categorical::string_cache"],[12887,"polars_core::chunked_array::logical::enum_"],[12888,"polars_error::warning"],[12889,"polars_parquet::parquet::error"],[12890,"alloc::collections"],[12891,"std::io::error"],[12892,"regex::error"],[12893,"object_store"],[12894,"simdutf8::basic"],[12895,"planus::errors"],[12896,"polars_schema::schema"],[12897,"hashbrown::set"],[12898,"polars_core::frame::row"],[12899,"polars_core::frame::group_by"],[12900,"polars_time::group_by::dynamic"],[12901,"polars_lazy::frame"],[12902,"polars_core::series::from"],[12903,"polars_core::chunked_array::ndarray"],[12904,"polars_arrow::array::struct_"],[12905,"polars_arrow::record_batch"],[12906,"polars_time::windows::duration"],[12907,"polars_core::frame::column::scalar"],[12908,"polars_core::frame::explode"],[12909,"polars_utils::idx_vec"],[12910,"rayon::iter::plumbing"],[12911,"polars_plan::plans::aexpr"],[12912,"polars_core::frame::group_by::into_groups"],[12913,"core::iter::adapters::copied"],[12914,"core::iter::adapters::zip"],[12915,"polars_arrow::legacy::kernels::rolling"],[12916,"polars_utils::float"],[12917,"polars_arrow::types::native"],[12918,"polars_core::frame::group_by::aggregations::agg_list"],[12919,"polars_core::frame::group_by::aggregations"],[12920,"polars_core::frame::group_by::expr"],[12921,"polars_core::frame::row::av_buffer"],[12922,"polars_utils::arena"],[12923,"polars_plan::plans::ir"],[12924,"polars_ops::frame::join::hash_join"],[12925,"polars_ops::frame::join::args"],[12926,"polars_plan::dsl::struct_"],[12927,"polars_ops::chunked_array::gather::chunked"],[12928,"polars_ops::frame"],[12929,"polars_io::csv::read::reader"],[12930,"polars_io::predicates"],[12931,"polars_io::mmap"],[12932,"polars_plan::dsl::selector"],[12933,"polars_plan::frame::opt_state"],[12934,"core::alloc"],[12935,"polars_plan::plans::anonymous_scan"],[12936,"polars_lazy::scan::anonymous_scan"],[12937,"polars_plan::dsl::expr_dyn_fn"],[12938,"polars_plan::plans::visitor"],[12939,"polars_plan::dsl::function_expr"],[12940,"polars_ops::series::ops::arg_min_max"],[12941,"polars_plan::dsl::array"],[12942,"polars_plan::dsl::list"],[12943,"polars_plan::dsl::function_expr::schema"],[12944,"polars_io::ipc::ipc_stream"],[12945,"std::io"],[12946,"polars_ops::chunked_array::binary"],[12947,"polars_time::chunkedarray::string"],[12948,"std::os::fd::owned"],[12949,"polars_ops::chunked_array::list"],[12950,"std::os::fd::raw"],[12951,"polars_ops::series::ops"],[12952,"polars_ops::chunked_array::strings"],[12953,"core::mem::maybe_uninit"],[12954,"polars_ops::chunked_array::strings::namespace"],[12955,"polars_io::csv::read::read_impl::batched"],[12956,"polars_io::csv::write::writer"],[12957,"polars_io::ipc::write"],[12958,"polars_io::parquet::read::reader"],[12959,"polars_io::parquet::read::read_impl"],[12960,"polars_io::parquet::write::writer"],[12961,"polars_io::parquet::write::batched_writer"],[12962,"polars_plan::dsl::binary"],[12963,"hyper::service::service"],[12964,"http::request"],[12965,"polars_plan::dsl::udf"],[12966,"polars_lazy::frame::exitable"],[12967,"hashbrown::map"],[12968,"polars_plan::dsl::cat"],[12969,"polars_ops::series::ops::round"],[12970,"polars_time::series"],[12971,"polars_lazy::scan::csv"],[12972,"polars_lazy::scan::ipc"],[12973,"polars_lazy::scan::ndjson"],[12974,"polars_lazy::scan::parquet"],[12975,"polars_time::chunkedarray::rolling_window"],[12976,"polars_time::windows::bounds"],[12977,"polars_time::windows::group_by"],[12978,"polars_time::windows::window"],[12979,"polars_ops::frame::join::asof"],[12980,"polars_ops::frame::join::iejoin"],[12981,"polars_ops::series::ops::interpolation::interpolate"],[12982,"polars_ops::series::ops::is_between"],[12983,"polars_ops::series::ops::rank"],[12984,"polars_io::csv::read::options"],[12985,"polars_plan::dsl::arity"],[12986,"polars_io::csv::write::options"],[12987,"polars_io::ipc::ipc_file"],[12988,"polars_io::ipc::ipc_reader_async"],[12989,"polars_io::json"],[12990,"polars_io::parquet::read::options"],[12991,"polars_io::parquet::write::options"],[12992,"polars_parquet::arrow::write"],[12993,"polars_plan::dsl::function_expr::boolean"],[12994,"polars_plan::dsl::function_expr::cat"],[12995,"polars_plan::dsl::function_expr::datetime"],[12996,"polars_parquet::parquet::metadata::file_metadata"],[12997,"polars_plan::dsl::function_expr::pow"],[12998,"polars_plan::dsl::function_expr::strings"],[12999,"polars_plan::dsl::function_expr::struct_"],[13000,"polars_plan::dsl::functions::temporal"],[13001,"polars_plan::dsl::options"],[13002,"polars_plan::plans::lit"],[13003,"polars_plan::plans::options"],[13004,"polars_plan::plans"],[13005,"polars_arrow::legacy::kernels::time"],[13006,"tracing_core::span"],[13007,"tracing_core::subscriber"],[13008,"polars_lazy::scan::file_list_reader"],[13009,"polars_io::cloud::options"],[13010,"polars_parquet::parquet::metadata::column_order"],[13011,"polars_ops::chunked_array::binary::namespace"],[13012,"object_store::path"],[13013,"core::future::future"],[13014,"core::pin"],[13015,"polars_io::ndjson::core"],[13016,"polars_arrow::io::ipc::read::file"],[13017,"polars_parquet::parquet::metadata::row_metadata"],[13018,"polars_ops::frame::join::cross_join"],[13019,"polars_lazy::dsl::eval"],[13020,"polars_time::chunkedarray::date"],[13021,"polars_time::chunkedarray::datetime"],[13022,"polars_time::chunkedarray::duration"],[13023,"core::default"],[13024,"core::ffi::c_str"],[13025,"futures_core::stream"],[13026,"polars_parquet::parquet::metadata::column_chunk_metadata"],[13027,"polars_core::series::ops"],[13028,"polars_plan::dsl::dt"],[13029,"tracing_core::metadata"],[13030,"polars_ops::series::ops::various"],[13031,"polars_arrow::scalar"],[13032,"polars_lazy::dsl::list"],[13033,"tracing_core::event"],[13034,"crossterm::command"],[13035,"polars_io::shared"],[13036,"polars_plan::plans::apply"],[13037,"polars_parquet::arrow::read::statistics"],[13038,"polars_plan::dsl::function_expr::array"],[13039,"polars_plan::dsl::function_expr::list"],[13040,"polars_plan::dsl::function_expr::range"],[13041,"polars_plan::dsl::function_expr::binary"],[13042,"alloc::ffi::c_str"],[13043,"polars_arrow::array::struct_::mutable"],[13044,"polars_arrow::array::growable::structure"],[13045,"polars_core::schema"],[13046,"polars_arrow::legacy::array::default_arrays"],[13047,"polars_arrow::buffer::immutable"],[13048,"polars_arrow::array::list"],[13049,"polars_core::named_from"],[13050,"polars_ops::frame::join"],[13051,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[13052,"polars_time::chunkedarray::time"],[13053,"core::num::nonzero"],[13054,"polars_arrow::array::struct_::iterator"],[13055,"polars_ops::frame::join::asof::groups"],[13056,"polars_ops::chunked_array::list::namespace"],[13057,"polars_plan::dsl::name"],[13058,"polars_parquet_format::parquet_format"],[13059,"polars_core::utils::supertype"],[13060,"polars_plan::dsl::python_udf"],[13061,"polars_io::options"],[13062,"polars_core::chunked_array::ops::aggregate"],[13063,"polars_core::chunked_array::ops::aggregate::quantile"],[13064,"polars_arrow::legacy::index"],[13065,"polars_plan::plans::ir::scan_sources"],[13066,"polars_ops::chunked_array::strings::split"],[13067,"object_store::payload"],[13068,"core::io::borrowed_buf"],[13069,"polars_parquet_format::thrift::varint::decode"],[13070,"polars_time::chunkedarray::rolling_window::dispatch"],[13071,"polars_time::round"],[13072,"polars_parquet::parquet::metadata::schema_descriptor"],[13073,"futures_task::future_obj"],[13074,"futures_task::spawn"],[13075,"polars_core::chunked_array::ops::aggregate::var"],[13076,"polars_plan::dsl::string"],[13077,"polars_ops::series::ops::to_dummies"],[13078,"polars_time::truncate"],[13079,"polars_io::csv::read::schema_inference"],[13080,"polars_time::upsample"],[13081,"polars_core::hashing::vector_hasher"],[13082,"alloc::collections::btree::map"],[13083,"polars_utils::mmap::private"],[13084,"polars_parquet::arrow::read::deserialize::utils::filter"],[13085,"polars_ops::chunked_array::array::namespace"],[13086,"polars_ops::chunked_array::array"],[13087,"polars_io::csv::read::buffer"],[13088,"polars_io::utils::byte_source"],[13089,"polars_time::chunkedarray::string::patterns"],[13090,"polars_time::chunkedarray::string::infer"],[13091,"object_store::aws::builder"],[13092,"polars_io::cloud::glob"],[13093,"polars_io::cloud::polars_object_store"],[13094,"tokio::io::async_write"],[13095,"polars_io::cloud::adaptors"],[13096,"url"],[13097,"bytes::bytes"],[13098,"polars_io::cloud::credential_provider"],[13099,"object_store::aws::credential"],[13100,"polars_utils::python_function"],[13101,"pyo3::types::any"],[13102,"pyo3::instance"],[13103,"object_store::client"],[13104,"polars_io::utils::compression"],[13105,"polars_arrow::legacy::array::fixed_size_list"],[13106,"polars_plan::dsl::function_expr::rolling"],[13107,"polars_plan::dsl::function_expr::rolling_by"],[13108,"polars_arrow::legacy::array::null"],[13109,"polars_arrow::bitmap::mutable"],[13110,"polars_arrow::array::utf8"],[13111,"polars_core::series::iterator"],[13112,"alloc::rc"],[13113,"polars_core::series::arithmetic::list_borrowed"],[13114,"polars_core"],[13115,"polars_core::chunked_array::struct_"],[13116,"polars_core::chunked_array::iterator::par"],[13117,"polars_core::chunked_array::object::extension"],[13118,"polars_core::chunked_array::ops::float_sorted_arg_max"],[13119,"polars_core::chunked_array::ops::gather"],[13120,"polars_core::chunked_array::ops::row_encode"],[13121,"polars_core::chunked_array::ops::sort"],[13122,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[13123,"polars_core::chunked_array::temporal"],[13124,"polars_core::chunked_array::temporal::conversion"],[13125,"polars_core::chunked_array::temporal::time"],[13126,"polars_core::chunked_array::logical::date"],[13127,"polars_core::chunked_array::logical::datetime"],[13128,"polars_core::chunked_array::logical::decimal"],[13129,"polars_core::chunked_array::logical::duration"],[13130,"polars_core::datatypes::aliases"],[13131,"polars_utils::aliases"],[13132,"polars_core::chunked_array::logical::time"],[13133,"polars_error::constants"],[13134,"polars_core::functions"],[13135,"polars_core::frame::horizontal"],[13136,"polars_arrow::datatypes::schema"],[13137,"polars_io::utils::other"],[13138,"polars_io::parquet::metadata"],[13139,"polars_arrow::legacy::prelude"],[13140,"polars_arrow::legacy::array"],[13141,"polars_io::path_utils"],[13142,"polars_ops::series::ops::rolling"],[13143,"polars_parquet::parquet::write"],[13144,"polars_io::utils"],[13145,"polars_ops::frame::join::general"],[13146,"polars_io::parquet::read"],[13147,"polars_ops::series::ops::abs"],[13148,"polars_plan::dsl::functions::selectors"],[13149,"polars_plan::dsl::functions::horizontal"],[13150,"polars_plan::dsl::functions::arity"],[13151,"polars_plan::dsl"],[13152,"polars_plan::dsl::functions::range"],[13153,"polars_plan::dsl::functions::index"],[13154,"polars_ops::chunked_array"],[13155,"polars_plan::dsl::functions::coerce"],[13156,"polars_plan::dsl::functions::syntactic_sugar"],[13157,"polars_time::base_utc_offset"],[13158,"polars_io::csv::read"],[13159,"polars_time"],[13160,"polars_ops::series::ops::clip"],[13161,"polars_io"],[13162,"polars_ops::series::ops::horizontal"],[13163,"polars_lazy::dsl::functions"],[13164,"polars_plan::dsl::functions::concat"],[13165,"polars_ops::series::ops::index"],[13166,"polars_ops::series::ops::bitwise"],[13167,"polars_io::csv::read::parser"],[13168,"polars_ops::series::ops::cum_agg"],[13169,"polars_ops::series::ops::diff"],[13170,"polars_time::dst_offset"],[13171,"polars_ops::chunked_array::strings::escape_regex"],[13172,"polars_ops::series::ops::floor_divide"],[13173,"polars_ops::chunked_array::strings::concat"],[13174,"polars_ops::series::ops::duration"],[13175,"polars_ops::chunked_array::datetime::replace_time_zone"],[13176,"polars_time::date_range"],[13177,"polars_ops::series::ops::interpolation"],[13178,"polars_ops::series::ops::interpolation::interpolate_by"],[13179,"polars_ops::series::ops::is_first_distinct"],[13180,"polars_ops::series::ops::is_in"],[13181,"polars_ops::series::ops::is_last_distinct"],[13182,"polars_io::parquet::read::utils"],[13183,"polars_ops::series::ops::negate"],[13184,"polars_ops::series::ops::not"],[13185,"polars_ops::series::ops::int_range"],[13186,"polars_plan::dsl::functions::repeat"],[13187,"polars_ops::chunked_array::repeat_by"],[13188,"polars_ops::series::ops::replace"],[13189,"polars_ops::chunked_array::strings::strip"],[13190,"polars_io::partition"],[13191,"polars_io::parquet::read::predicates"],[13192,"polars_io::parquet::read::mmap"],[13193,"polars_time::chunkedarray"],[13194,"polars_io::cloud::object_store_setup"],[13195,"polars_io::cloud"],[13196,"polars_ops::chunked_array::mode"],[13197,"polars_ops::chunked_array::nan_propagating_aggregate"],[13198,"polars_utils::python_function::serde_wrap"],[13199,"polars_arrow::legacy::array::utf8"]],"i":"````````````````````Mf000`l000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00000000000000000001010``000000000000000000000000000`0`000000010100000001000000000000000000000000000000000000`0000000000001000000000000000000000000000000000000000`000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000000000000000000000000000000`0000000000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00`000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000000000010010010000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000`ABl00000000000000000000000000````````````````AD`ADdADfADhABn0AC`ACbACd0ACfACh54ACjACl5ACn5<;:98845<3487216055213<;9218721605<;:98721605<;:95<;:9<;:9<;:9878721605<;:98721605<;:98721605<;:9216542165438704<<;:9`8721605<;:9ADl000`9832716=<;:327659832716=<;:`9832716=<;:64<;:=<;:9832716=<;:9832716=<;:9832716=<;:9832716=<;:````````5556555`5`G`00000000000000000000000000000``AEbAEd1000101000`AEf``AEhAEj````AEnAFbAFd21021021021021021021021021210210`210210210210210``AGbKhH`0Jn`3Ml22````````42110Mn4AFf43434343434344334343215604321560431150431504315043AFh545426543326715432671544541Fn7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653655657757777775776565653372656543782654378265334378265653437826513````AGf00000K`1111`111111110011111111111111111111``111111101111111110Cf2222222222`AHb0000000000000000000000````AHd00AHf00000001```00`0`10000AIf````````````````````````````0AHl``AIhAJf33333EDd4``0``4FbFj6AHh6AHn077AI`0AIb`54:54:AId0065;65;65;6565;65;6565;65;65;99666555AIj0`AIlAIn`98>9988>`AJ`AJb`AJd0>><;AIf=<0=<00AJhAJjAJf0FbFjAHh0AJl1132?32AJnAIh054?2AK`0AKbAKd`AKf0`98=0AKhAKjAKl0`AI`0AKn<AL`ALbALdFbFjAIf210210210AIb7321323232232232`ALf`AM`ALlALh``````````````````````````````````````````````AMf00`0`0000000000000000000`000000`````>>````87878787>>```````````B@d`JjEnDn```````21AGh`2``3`0320```32````3`````3200``32`3`3200``0`320``Dd04341```11`51431``431```AOj`3EDfEDh````B@l``9``875``875``875``875``5`666555B@`986``4``6B@nLd1010Al<;9`<;`<``:3:```````````BAl``35`>=<`=`=<:=`=<::````:0`=<:``=<:``=<:``=<:``:<:`::ALj0<0:L`6:AN`B@bJjB@dEnB@fOj;NdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hB@jB@lAGhB@nAN`Jj01L`1C`LhNdNfFdNlOfO`KlLbEjEhBjBdAnAhANbAN`110ANd0ANf0EnJjL`0Dd0003OjANlALj3433:BBn5EDjDjjC`LhCdBAdB@`AOjAN`B@bJjB@dEnB@fOjLdNdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hAhB@jB@lAGhB@nDdANbBBnL`EDjDjjC`LhCdBAdB@`AOjAN`B@bJjB@dEnB@fOjLdNdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hAhB@jB@lAGhB@nEnAOj`AOnJj3L`0200000AN``LhNdNfFdNlOfO`KlLbEjEhDd=B@`AOj>B@bJjB@dEnB@fOjLdNdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hB@jB@lAGhB@nDdL`B@`AOjAN`B@bJjB@dEnB@fOjLdNdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hB@jB@lAGhB@nDdL`B@`AOjAN`B@bJjB@dEnB@fOjLdNdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hB@jB@lAGhB@nDd4OjBAb00026En00`L`4BAdB@`AOjJjB@d6;99ANbBBn77EDjDjjC`LhCd<;:AN`B@b;:EnB@fOjLdNdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hAhB@jB@lAGhB@nDdANbBBnL`0EDjDjjC`LhCdBAdB@`AOjAN`B@bJjB@dEnB@fOjLdNdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hAhB@jB@lAGhB@nDdB@`JjB@dEnOjLd;:987L`C`LhNdNfFdNlOfO`KlLbEjEhAhANbDd1BBnL`EDjDjjC`LhCdBAdB@`AOjAN`B@bJjB@dEnB@fOjLdNdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hAhB@jB@lAGhB@nAOnL`0000AN`JjOj0Dd0`0B@`3B@dEn0B@f5Ld>=<;7888888555777333222111666000>>>===<<<;;;9AOjAOlANbBAd9983B@b<<8776;55B@jB@l0AGhB@n>>>>>6BBnL`00EDjDjjC`LhCd=B@`AOjAN`?Jj00000B@dEn0000B@fOj00Ld0NdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hAhB@jB@lAGh00B@nEnAN`0L`01Dd00000001111110002ALj00030AOj9833333AOn544444051DnjC`LhCdNdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hAhAOjB@l0AN`EnJjBBjALj444444Dd3B@d5OjLd9AGhB@n8L`09:6ANbBBn2EDjDjjC`LhCdBAdB@`AOjAN`B@bJjB@dEnB@fOjLdNdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hAhB@jB@lAGhB@nEn2DdANbBBnL`EDjDjjC`LhCdBAdB@`AOjAN`B@bJjB@dEnB@fOjLdNdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hAhB@jB@lAGhB@nL`AN`BBnBBl333332JjDdEn00200055020AOj311101319313131911131111319ALj702173777777``2B@d38`BAd::9:::C`LhNdNfFdNlOfO`KlLbEjEhAhAN`0Oj0L`0EDfEDhANb33333333BAd5B@jB@l06B@fBBn:::::::188DdJjLd6;=;8C`LhNdNfFdNlOfO`KlLbEjEhAhL`0AOj111Dd2B@`AN`JjB@dEnOjLd:B@jB@lAGhB@n5====BBn::9>>>9>C`LhNdNfFdNlOfO`KlLbEjEhAhL`00AN`EnOjLd203AGh440Dd6B@`AOj7B@bJjB@d9B@f98NdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hB@jB@lAGhB@nEn2L`Dd111Jj3Ld7133ANd0ANf0BAb00045ANbBBn8EDjDjjC`LhCdBAdB@`AOjAN`B@bJjB@dEnB@fOjLdNdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hAhB@j0B@lAGhB@nDdANbBBnL`EDjDjjC`LhCdBAdB@`AOjAN`B@bJjB@dEnB@fOjLdNdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hAhB@jB@lAGhB@nJjEnDd21Ld61ANbBBnL`EDjDjjC`LhCdBAdB@`AOjAN`B@bJjB@dEnB@fOjLdNdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hAhB@jB@lAGhB@n1AN`0ALj10En1DdANbBBnL`EDjDjjC`LhCdBAdB@`AOj?B@bJjB@dEnB@fOjLdNdNfFdNlOfO`KlLbEjEhKnLnBjBdFfAnLjLfLlB@hAhB@jB@lAGhB@nEDfEDhALjDd00Jj`````AOj`B@`10``AOl`````2121``BCj0000`00`0000000`0`BCl0000000000000000``BD`n000EDl`112101```111111121BCn302302`223002302302`3002230022222222`302302`0``````02302302023023022EDnEE`10```BEh`0BEf11``0``01AB`00000000000000000BFlBFn34210342222342342342`222421034210342421034222222222242224442`2222223422103422222222222222222`22224222222222222210342210342102222222222222222222222210222222222222222`2222222222224222222221022222222222222222342222221034222221034221034222222222210342222222``Fh`0BHb11111111111111111111011101111111111101010101011101010111110101111111011011111111111111101011101111111111011111110101BEd1222122222222112222222222121212222222222222122212221222222222122222222122221221222222222222122222212222222212222222122122222`BHf00000000000000000000000000000`BHl0``0``````BIdCb`2`22222222210`222BHh1BEn40`1023BInBI`BHn453762104537453745374537345621004537621045373162104453745444555`643445377`621044455377445335BIh4673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648EEbEEd0``````````BJfBJh0`BJj0BJlBJn``1011110101010101010`10011010101010BEl211210210210210210`02102102100000022110`2102102121021```210210210210210``BNbBLlBC``BOn1CIjCFl01`CGj`CBb5```CE`4AMfB@dBEh7```;;`CKfJjEnDn``?``````````7```?```CHhCF``CEfAIfBNbCJdCIn``CKj:9AGh``BC`5`;``<``152<;1`````CDfCEn``CI``EEfCHjBGjBMb000CL`8;`=JjEn``````1`CJbBNb?````````````````````````````````````0``0CDn`=`n>CHh`CIn``24CJd0031BOnBHl2CE````````888884`````<CDhCDj`DFl7CKj?>AGh0``1`9JjEn``;`1`;31022``CF`EEfCHj`5BNb`CL`CBb22`CHlBC`n`CIn=;:<`````BMbDDhCJd>=>77EEhA@`EDl38`BLl9CKd```=>AGh66688````;CJf0`````BNb``0=CL`9BOnBHlBEh66`CKjB@d81JjEn:``310:``8CBbBGjCEfAIf<CDj```CE`AHlBC```0BNbCJb`CIl`AOj``CL``BHl``````CKdCEh?0?CI``44DnEDfEDhCJd0EEhA@`CIn`CE```n=DFlBIdCb`````BOnBHl`BC````B@l``8`CKjB@d``1JjEnAGh``4210``4210``4210``BLlBNb0`2```````>``````````CIj0`000`0CIn1Dn222001AIhAJfCKdCL``````CDn``DMhCJf``1```2BC`CHb`>`>``>BOnBHlBEhDDh``````EEjCDfCDhCE`CEnAMf`;CJd0B@``CElEEhA@`JjEnAGh````BNb````````BC``AOj`CBb0`CFh984<CEh202CI`0CEb08CL`CF`BOnAIfBHl1<210<20CInB@nLdEEhA@`443287656BNb?50?CDj6CFjCJfCBbBMb`=;CHlCFl``==<;:AlCEfCEl<;CGj;`0`n``1CDfEDdCEnCHhBEhCIj>>BC``CKjDDhJjEnAGhCLfBNb``````43`4`EDlAIfCEb0```CBbCF`CIn<ABlnBLjCKb``Dn`BMb0````````B@`2```````9```````````BAl`>`CHhCJf`CL`BOnBHlBJ````>`8DDhCLfCF`BNb0CKj1```BC``:22CJd33CIn4``14EEjCDfCDhCE`CEnAMfCKb`;;```````BLl8<<``CHhBMb0n01CDj`FhABlCL``````44```?B@n1`BC`=````CKj5``````BNb8000CFj53BIdCJd7Cb``CI`EDd8:8```B@l444`CJb`5``BOnBHlB@d<<JjEn`n``>```2`;;;;;;`21AGh``?1``3`BLlBC`CJf98BNbCDjBMbCJd`3``5`2CInCKj<;99``1```922`2511111111ABlBAlCBb`473?><``3?><``3?><``3?><````CI`CL`>`:`En?```;8`CFhAGh0=ALj0BOnBHlBJ```CDj>>`BC``01``CJfCIn=0CHbAIfDn:?`CBnBG`BM`BMjCCjCClCCnCD`CDbBF`BGdCDdBH`CDfCDhCDjCDlABbA@jBKjCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCBbCI`BMnCIbCIdCIfCIhCIjCIlCInCJ`CJbN`CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLf`BG`BKh00``BKl1>AHhBKnBL`000BLb6BLd`BC`BLj1BLlBH`0BLn1BM`5`5`5BMb`N`CD`BMfCK`BMh00CJh<BKnBG`0>`>ACfACh1010AHl<BC``0AHn011`22`BGlBNdBNfBNh52105AI`6;`0AIb7<`BNjCK``9ANd880ANf099`BNlBMhBKnBO`=1=MjBObBOd000N`0BOj11BOn2ANlC@`9ALjC@b`766`BC`C@f0`CGfBLdC@jCA`CAdCAhCAj5`8`BLlBMbBKn1101112101CCbBNfAMhBMfCBnBG`CAnBM`BMjCCjC@hCClCCnCD`DIdBLdDEfBNjCDbBF`C@jBGdCDdBH`BNhDGbCDfCDhDAlCDjBKlCDlCN`BNlDAnCObCA`ABbA@jDMhDB`DBbDIfCMnCAfBKjCAdCDnCAhCE`CEbCAjCEdCEfCEhCEjCElDGjCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCOlCBbCI`BMnCIbCIdCIfCIhCIjCIlCInCJ`CJbN`0CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjDDhA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfCCbBNfAMhBMfCBnBG`CAnBM`BMjCCjC@hCClCCnCD`DIdBLdDEfBNjCDbBF`C@jBGdCDdBH`BNhDGbCDfCDhDAlCDjBKlCDlCN`BNlDAnCObCA`ABbA@jDMhDB`DBbDIfCMnCAfBKjCAdCDnCAhCE`CEbCAjCEdCEfCEhCEjCElDGjCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCOlCBbCI`BMnCIbCIdCIfCIhCIjCIlCInCJ`CJbN`CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjDDhA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfBG`<BKn`ACd`2CClCD`CJnCBdN`0CBj`BO`CBl2CBn`:;AIdBC`AOn>2201`171CCd2A@bCCfBGlCChBKn10CFd`11`8`8`8:BG`BM`BMjCCjCClCCnCD`CDbBF`BGdCDdBH`CDfCDhCDjCDlABbA@jBKjCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCBbCI`BMnCIbCIdCIfCIhCIjCIlCInCJ`CJbN`CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfBKnCBnBG`BM`BMjCCjCClCCnCD`CDbBF`BGdCDdBH`CDfCDhCDjCDlABbA@jBKjCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCBbCI`BMnCIbCIdCIfCIhCIjCIlCInCJ`CJbN`CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfN`CBnBG`BM`BMjCCjCClCCnCD`CDbBF`BGdCDdBH`CDfCDhCDjCDlABbA@jBKjCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCBbCI`BMnCIbCIdCIfCIhCIjCIlCInCJ`CJbN`CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfCDbBF`BGd`CLlCCjCCnCClCD`BH`N``BMfCDnBKj``BG``BAb000AEbAEd100033`CJ`0CFdBLbCFf<;BMb`CH`CHnCL``C@f`CLlCCj````BNfCMd4BNh9155``N`0BG`CMnBC`99``CN````BKh`CJ`5CNf0`4``4`4`4``4CNh84CHn`CGh```0`````CNlCNnCCfCJhCO`BH`CJj1CJlCLbCFfN`0BG`BMjCClCD`BF`BGdCDjCObBKjCDnCEbCEdCEfCEhCEjCEnCFbCFdCFfCFhCGfCGhCGjBC`CGnCH`CHbCHdCHhCHnCI`BMn00CIdN`000CJhCJjCJnCK`CKbCKdCKhBMbA@bBGjCKlCKnCL`BB`A@```??CCbBNfAMh0BMfCBnBG`CAnBM`BMjCCjC@hCClCCnCD`DIdBLdDEfBNjCDbBF`C@jBGdCDdBH`BNhDGbCDfCDhDAlCDjBKlCDlCN`BNlDAnCObCA`ABbA@jDMhDB`DBbDIfCMnCAfBKjCAdCDnCAhCE`CEbCAjCEdCEfCEhCEjCElDGjCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCOlCBbCI`BMn0CIbCIdCIfCIhCIjCIlCInCJ`CJbN`0CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjDDhA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfCCbBNfAMh0BMfCBnBG`CAnBM`BMjCCjC@hCClCCnCD`DIdBLdDEfBNjCDbBF`C@jBGdCDdBH`BNhDGbCDfCDhDAlCDjBKlCDlCN`BNlDAnCObCA`ABbA@jDMhDB`DBbDIfCMnCAfBKjCAdCDnCAhCE`CEbCAjCEdCEfCEhCEjCElDGjCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCOlCBbCI`BMnCIbCIdCIfCIhCIjCIlCInCJ`CJbN`CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjDDhA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfCFbFbFj:BG`000;N``CDbBF`BGdBH`CDfCDhCDjBKjCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlBOnCGfCGhCGjBC`CGlCH`CHbCHdCHfCHhCHjCHlCHnCBbCI`BMn0000CIbCIdCIfCIhCIjCIlCInCJbN`CJdCJfBNbCJlCJnCK`CKbCKdCKfCKhBLlCKjA@bBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfBEn`9`BNhBC`BMb;COlCIdBLj4BLn5N`000CCbBNfAMhBMfCBn0BG`0CAnBM`BMjCCjC@hCClCCnCD`DIdBLdDEfBNjCDbBF`C@jBGdCDdBH`BNhDGbCDfCDhDAlCDjBKlCDlCN`BNlDAnCObCA`ABbA@jDMhDB`DBbDIfCMnCAfBKjCAdCDnCAhCE`CEbCAjCEdCEfCEhCEjCElDGjCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCOlCBbCI`BMnCIbCIdCIfCIhCIjCIlCInCJ`CJbN`0CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjDDhA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfBC`BG`01BKnN```3AOn2BGl<;Oj<``CFd`CIdBMb666CFfCMd0```D@j92CDbBF`BGdBH`CDfCDhCDjABbBKjCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlBOnCGfCGhCGjBC`0CGlCH`CHbCHdCHfCHhCHjCHlCHnCOlCBbCI`BMn0CIbCIdCIfCIhCIjCIlCInCJbN`00CJdCJfBNbCJlCJnCK`CKbCKdCKfCKhBLlCKjA@bBGl0BGjCKlCKnMjBB`A@`BJ`CLbCLdCLfBC`AIh0BF`00BGd00BH`00CDf00CDh00CDj00ABb00BKj00CDn00CE`00CEb00CEd00CEf00CEh00CEj00CEl00CEn00CFd00CFf00CFh00CFj00CFl00CGf00CGh00CGj00BC`00CH`00CHb00CHd00CHf00CHh00CHl00CHn00CBb00CI`00CIb00CId00CIf00CIh00CIj00CIl00CIn00CJb00N`00CJd00CJf00CJl00CJn00CK`00CKb00CKd00CKf00CKh00BLl00BGj00CKl00CKn00BB`00A@`00CLf00``DA`N`0BF`?BC`022```BG`0AIj20`BMb3C@fA@j111ACfCBn601BKnBKl00BGlCFd:;`:;;AIlAIn5<=999AChDAhDAjAOlBMfCLlCCjCCnBLdC@jDAlBNlDAnCA`DB`DBbCMnCAdCAhACfCAj?>=:CAf`BG`BNhBC`BKn`1CGh0`BMnCCd44`N`0BO`CBlCBdCDbBF`BGdCDdBH`0CDfCDhCDjABbA@jBMhBKjDBdCDnCE`0CEb0CEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCGfCGhCGjBC`0CGlCH`CHbCHdCHfCHhCHjCHlCHnCOlCBb0CI`BMnCIbCIdCIfCIhCIj0CIl0CIn0CJ`CJb0N`00CJd0CJf0BNb0CJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMb0000CKjA@bBGlBGjCKlCKnMjBB`A@`BJ`CLbCLdCLf`8CDb<`BMfCK`CJn`BC`CCbBNfAMh6CBnBG`00CAnBM`BMjCCjC@hCClCCnCD`DIdBLdDEfBNjCDbBF`C@jBGdCDdBH`BNhDGbCDfCDhDAlCDjBKlCDlCN`BNlDAnCObCA`ABb0A@jDMhDB`DBbDIfCMnCAfBKj0CAdCDnCAhCE`CEbCAjCEdCEfCEhCEjCElDGjCEnCF`CFbCFdCFfCFhCFj0CFlCFnCG`CGbCGdBOnCGfCGhCGjBC`0000000000000CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCOl0CBb0CI`BMn0000000000CIbCIdCIfCIhCIjCIlCInCJ`CJbN`00000000000000000CJdCJfBNb0000CJhCJjCJlCJnCK`CKb0CKdCKfCKhBLl0000CBjBMbCKj0DDhA@bBGl00BGjCKlCKnCL`Mj0000000000BB`A@`BJ`CLbCLdCLfDClBMb000DCnDDbDDdAMh0N`5EEl00ADl13310732CKnCMn4422DDh66BMnCN`CAhDDjALj0`AJ`1CIdBG`DDlAJb5BGlCBj`BC``00N`BKnBNfBNh<43AJdAOn10CCb<CKjDnCDl00COdBMlDCl?BNj`CAdCAh>??>>?6CFdN`0`DBdBBjALjBKnCLlCCjCD`BG`DEj11``BIhAJfBC`<10=8BF`BGdBH`CDfCDhCDjBKjCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlBOnCGfCGhCGjBC`CGlCH`CHbCHdCHfCHhCHlCHnCBbCI`CIbCIdCIfCIhCIjCIlCInCJbN`CJdCJfBNbCJlCJnCK`CKbCKdCKfCKhBLlCKjBGjCKlCKnBB`A@`CLfDEn00BM`BNhBC`N`C@f0CClCD``DF`CNnCCfCJhCO`CJjBMfBKjABbCFd```>`C@jCGfBF`>=21N`0CKhBHf`3BGd``DBbCMnBMj:CCbBNfAMhBMfCBnBG`CAnBM`8CCjC@hCClCCnCD`DIdBLdDEfBNjCDbBF`C@jBGdCDdBH`BNhDGbCDfCDhDAlCDjBKlCDlCN`BNlDAnCObCA`ABbA@jDMhDB`DBbDIfCMnCAfBKjCAdCDnCAhCE`CEbCAjCEdCEfCEhCEjCElDGjCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCOlCBbCI`BMnCIbCIdCIfCIhCIjCIlCInCJ`CJbN`CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjDDhA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfABbACfBG`DDlA@jCBjBMb````BC```011CCbBNfAMhBMfCBn:CAnBM`BMjCCjC@hCClCCnCD`DIdBLdDEfBNjCDbBF`C@jBGdCDdBH`BNhDGbCDfCDhDAlCDjBKlCDlCN`BNlDAnCObCA`ABbA@jDMhDB`DBbDIfCMnCAfBKjCAdCDnCAhCE`CEbCAjCEdCEfCEhCEjCElDGjCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCOlCBbCI`BMnCIbCIdCIfCIhCIjCIlCInCJ`CJbN`CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjDDhA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfBEdN`8=AMh1DIdDEfBC`BMbBGlDFdBNh88CFdBBlBGb;MjBGh;8CBbCE``;`1BH`CId<BKnCAf?`AJhBC`456`00`AJj1CNlCNnCCf4=4`74`7A@j5>ABbBB``N`CKjBGbD@j35CEb4BH`;:9?ALjBMbBGlDCl2DFlBNfBG`BNhDDlDFn3DG`0BMfBKj1BKlDGbCJ`0BF``:9ALjBC`BKnDGf>N```CEdBG`?<ABl00`5BNh7BGl37CGh9666`DGhBH`DGjCKjMj>>9BM`CCnCMnCD`CFdCHfBC`DG`00000000000000000000AJf2N`13CGfCH`CHdCHnFbFj``6BG`DGb;`;BNj0BMn0=020=`==`1?=1111CHjCKj``DCl`BNf7BNhAHhBC`N`DHfBKnCJ`COlCId`BG`9874`:09AJl85DHh6DAl`CN`BB`CFbCLdCJhCO`CJjCCf21`BNf<BNhAHhBC`1CDbCJlA@bDHfBKnCOlCIdDF`CNn=CJhCO`CJjCFf`=CNl5CCf5BH`0BLj1BC`BLnFbFjBKnCLlCCjCCnBMjCClCD`DIfCFdC@j1BNfBNhAIbBC`==09CBjOjBB`33`DF`CNnCCfCO`BH`CJjN`CEb3;``3DHj<<BNjEDfDAhDAjEDhDHlAMhBMfCCjCCnBLd:C@jBH`DAlCDlBNlDAnCObCA`DB`DBbCMnCAfBKjCAdCAjBMnN`CJhCJjBLlCBjBGlMjBB`772AJnBKnCFj:`05CCjCCn2<<<<<10<<<<DIdDEfBMhCAnC@hCAfBC`0`0BMbAIh0``ABbA@jCGh?BG`6COlCIdCFfFbFjCAdCAhCJ`BF`BGdCDlAIjBMfCKhBHfCEj0BG`CBjBC`BKnCNlCNnCCf0CG`CGdDIf77`CD`CHfCKnBH`9DF`9CFd22N`1BF`BGdBC`33````0:DGb0`CLdDHf3BG`8BGl888888``1AJl6DHhBKnCNlCNnCCf>CFfCGh0CFdDJ`?N`00CAdCAh2222CLl;CCjCCnCClCD`9CKnBKn99`9AK`0BLjBC`BLnBMb`5BG`?BKlN```5`C@f60BNj11``7`7`CBjAKb<BNf7BNh;CEdBMfDEj;>AKd?BKnBC`DJl10101011101010101010101010101DJnCCd3CDl0140`CHnCJ`CLlCCjCCnBMjCClCD`CFdCK`0DG`BMnBC`0BMhBG`00000DK`AKf0DAlBNl5CAfCAdCAhCJ`BMjCD`DIfCFdCHf5`BMb2>`DF`CNnCCfCJhCO`CJjN`BG`00CFfCGhCDbBF`BGdBH`CDfCDhCDjBKjCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlBOnCGfCGhCGjBC`CGlCH`CHbCHdCHfCHhCHjCHlCHnCBbCI`BMn0000CIbCIdCIfCIhCIjCIlCInCJbN`CJdCJfBNbCJlCJnCK`CKbCKdCKfCKhBLlCKjA@bBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfCGf`AKfBMbBG`CAd0CAjDAlBNlDBb4CAhDAhBC`BGlAKhBKnBNf<BNh5AKj>6BKj7ACh58BG`000CMdBMjCFdCKl1:48=<<6AKl=0=====`AI`;6:??60<N`CLlCCjCCn33C@fBKnBGl022`2`2BC`BF`>>CHn99BNfBG`BNhAKn68DLb9A@j8;;`;;;;;CEdCCfCJn;``>`>`>`>`>N`<BLj=BLlBMb0BLnBMfDGbBKj01`BNfBG`BNhAHhBC`DHfBKnBMnCBb=N`8BM`86AL`5DLf066ALb7BGl`CFnCGbCGh`CJhCJj1CCfBG`CL`1CKjBNhDCl;ALd5DLjBLbBC`C@fBNf1DGbABbCBn=BM`BMjCCjCClCCnCD`CDbBF`BGdCDdBH`CDfCDhCDjCDlABbA@jBKjCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCBbCI`BMnCIbCIdCIfCIhCIjCIlCInCJ`CJbN`CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfBC`BNjCCfBH`CE`CEb5CBbCIjCIlCInCJbN`CJdCJfBNbDClCKnC@f0DGbCH`CHnBMbCEd0BG`BGl000``ABl00DLlBH`0CDl10CFf21ANd660ANf077N`BAb000AEbAEd1000CCbBNfAMhBMfCBnBG`CAnBM`BMjCCjC@hCClCCnCD`DIdBLdDEfBNjCDbBF`C@jBGdCDdBH`BNhDGbCDfCDhDAlCDjBKlCDlCN`BNlDAnCObCA`ABbA@jDMhDB`DBbDIfCMnCAfBKjCAdCDnCAhCE`CEbCAjCEdCEfCEhCEjCElDGjCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCOlCBbCI`BMnCIbCIdCIfCIhCIjCIlCInCJ`CJbN`0CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjDDhA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfCJ`DClCCbBNfAMhBMfCBnBG`CAnBM`BMjCCjC@hCClCCnCD`DIdBLdDEfBNjCDbBF`C@jBGdCDdBH`BNhDGbCDfCDhDAlCDjBKlCDlCN`BNlDAnCObCA`ABbA@jDMhDB`DBbDIfCMnCAfBKjCAdCDnCAhCE`CEbCAjCEdCEfCEhCEjCElDGjCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCOlCBbCI`BMnCIbCIdCIfCIhCIjCIlCInCJ`CJbN`CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjDDhA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfCFdBNj0BC`1DHjCIbCIfCIhN`BGl11111CFf22BO`CBdBMl`BH`CE`CEb=CBbCIjCIlCInCJb=CJdCJfBNbN`CCbBNfAMhBMfCBnBG`CAnBM`BMjCCjC@hCClCCnCD`DIdBLdDEfBNjCDbBF`C@jBGdCDdBH`BNhDGbCDfCDhDAlCDjBKlCDlCN`BNlDAnCObCA`ABbA@jDMhDB`DBbDIfCMnCAfBKjCAdCDnCAhCE`CEbCAjCEdCEfCEhCEjCElDGjCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCOlCBbCI`BMnCIbCIdCIfCIhCIjCIlCInCJ`CJbN`CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjDDhA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfCf`BMbAIbBNfBG`BNhBC`BKn3432133N`0?CFd3DMd0CAdCAhCD`CHf`BMfBKjBGl0ALjMjD@j>CKhBHf4545BNfBG`BNhAKnBC`BKnDLb187DMf0CJ`N`CCb:AMhBMfCBn<CAnBM`BMjCCjC@hCClCCnCD`DIdBLdDEfBNjCDbBF`C@jBGdCDdBH`BNhDGbCDfCDhDAlCDjBKlCDlCN`BNlDAnCObCA`ABbA@jDMhDB`DBbDIfCMnCAfBKjCAdCDnCAhCE`CEbCAjCEdCEfCEhCEjCElDGjCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdBOnCGfCGhCGjBC`CGlCGnCH`CHbCHdCHfCHhCHjCHlCHnCOlCBbCI`BMnCIbCIdCIfCIhCIjCIlCInCJ`CJbN`CJdCJfBNbCJhCJjCJlCJnCK`CKbCKdCKfCKhBLlCBjBMbCKjDDhA@bBGlBGjCKlCKnCL`MjBB`A@`BJ`CLbCLdCLfN`CNlCNnCCf10CDjBH`CJj1A@b`CG`CGdCDbCJl4BMfCJhCAdCAhCCnC@jDBbCCjEDfEDhCMnCFd47BG`BKj111DAlBNl=4DIf49CFfDAnCA`1COb1CAj90C@j0CJhCJjCCj8BNj1?19196BKl55322CFd>CAdCAh76765CCnDBbCMn5DAl5493936DB`3=:7BB`=<<=<;CFf>CLl==774BNl6;6;?C@j?3BG`=8=38<;CGn183:9=<>01CCj3630?50<:?2CAj6311==:5;?>CFd33BNj3?>=13?>=1CJhCJj58;75353CAdCAh9<7CCn7BKj<559?9?;BGl0ALj167=ABl00000000000000000N`0CH`CHn`22BC`BKnCNlCNnCCfCJh`ALfEEnEF`EFb2102EFdEFfEFhEFj0EFlEFnEG`EGbEGdEGfEGhEGj55EGlEGnEH`14;3EHb:EHd49EHfEHh0>EHjEFj240;4EHl;13:624733?=EFn0EG`>EHnEI`EIb0EIdEIf4EIhEIjEIlEIn3EJ`528EJb1EJd11098432323570;5EJfEJhEJj0EJlEJnEK`EKbEKd01EKf1EKhEKjEKlEKnEL`ELb697EEbEEd0ELd00EDnEE`10ELfELhELj21ELlELnEM`EMb03421EMd0DN`00`00`000`0000`0`0000``````````BJfBJh0`AM`ALlALh``````````````````````````````````DNf000000000000000DNh`CB`000000000000000DNj`0`00`0000000000000`00EMfEMhEMj32103210321032103321032103`210332103210321032103EMl00`DNn``0`DNl0`0DObDO`321032222310321032103221033332DOd21402140214214321433321432143214342143````````BOd0000CDbCNlCNnCO`3DF`213232114021320213230232DJl0000000000000132`433543`DOh0000``07777DOf8111111111111111`11111111`E@```DOj000000000`0000DOl11111211111E@b`E@n0111````1111111000011``11111111CLnE@f3E@l4E@d342150342033`532532532`03150342150342532115034250345553331031150321503425430222`53215034215034231021``010531532150342150342150342150342333111EMn``EAf`1``00EAh2EAj21302121212130213021230210210002221110213000212222130213021EBf321133214132413241324132:`99:::``:::::::9999:::::::::88EBj`00000000000`0000B@d`JjEnDn```````21AGh`2``3`0320```32````3`````3200``32`3`3200``0`320``3230```00`40320``320```AOj`2EDfEDh````B@l``8``764``764``764``764``4`555444B@`875``4``5B@nLd1010Al;:8`;:`;``939```````````BAl``35`=<;`<`<;9<`<;99````90`<;9``<;9``<;9``<;9``9;9`99ALj0;0ANd0ANf0ANl3`AOn0`BAb000`1Oj`AOl7777733DnBBj9BBl::```4EDfEDh;;::7777<<<10<`````AOj`B@`10``7`````1010````````````DCnDDbDDd`D@f00000000000000000000000000000000000000000000000000`BJj0`EBl000000000000000000``BNbCIj00011111CJdCIn33`03`CJb4144142221244444111114441224222CJf055355`51CIl443665555553555531446646633363631365636`13666166466364666366366664444246`4444446`1646`334446333333333664633133````EFdEFfEFhEJfEJhEJj0EJlEJnEK`EKbEKd01EKf1EKhEKjEKlEKnEL`ELb697ELfELhELj21ELlELnEM`EMb03421EMd0`CIlCJb0`0EBn000`0000000000000000000000000000EC`000`0000000000000000000000000000````CEl0`````````ECb00000000000000000000000000000```````EB`DH`ECf2102122221021022102222221022010210210222102102102102102``````````DMb000000000`0000``000000000AMf00`````EChCCf000000000000000000`````AKl0````FbFj10101022```C@bC@f0000000``000000000`0000000`0`000`00000`0`0`0`0`00000`CBj0000``EN`ENbMb``0``AIhBHd2````02AbBKn111111`011100`110010011101110001ECn3520352112222122121122521525222222035220352522222035211252422242222255522222212115222035222222222222222222222222222222222222222222222222222222222222221222111122222215222222`203520352220BGb32333322033332232333333333332232232333323223333333333333333333333333333333333333333333333333333332315333533332`2332223332333262333633223312332232233333333323323322233333363333333333333331463333333333146333333333333333146333332322214633323``Ef000000000000000000000EDb00`0```BLj111`0BLnBn33`3333321033333321021021033333``CChGb10D@b0`00000000000000000000000000","f":"``````{{}b}`````````{{}d}````````{{fh}b}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{c}}}}}AjAl}{{{l{An}}{l{An}}}}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}}{{{l{Bj}}{l{Bj}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}}{{{l{Bd}}{l{Bd}}}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{Bj}}}}{f{Bl}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{C`}}}}{f{Cb}}}Ab}{{{f{{l{j}}}}{f{Cb}}}Ab}{{{f{{l{c}}}}{f{Cb}}}AbAl}{{{f{{l{An}}}}{f{Cb}}}Ab}{{{f{{l{Bj}}}}{f{Cb}}}Ab}{{{f{{l{Bd}}}}{f{Cb}}}Ab}{{{f{{l{{Cd{c}}}}}}{f{Cb}}}AbCf}{{{f{{l{Ah}}}}{f{Cb}}}Ab}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{Ch{d}}}}{{{f{{l{C`}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{C`}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}54{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}{{Dn{}{{Dh{Dj}}{Dl{Dj}}}}}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Eb{{Ch{{f{{Bh{Bf}}}}}}}{{Ad{{Ch{{E`{{Bh{Bf}}}}}}}}}}Ed}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Eb{{Ch{Ab}}}{{Ad{{Ch{Ab}}}}}}Ed}}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{Eb{{Ch{{f{Bl}}}}}{{Ad{{Ch{{E`{Bl}}}}}}}}Ed}}{{{f{{l{An}}}}c}{{l{An}}}{{Eb{{Ch{d}}}{{Ad{{Ch{d}}}}}}Ed}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Eb{Ch}{{Ad{Ch}}}}Ed}}{{{f{{l{{Cd{c}}}}}}e}{{l{{Cd{c}}}}}Cf{{Eb{{Ch{{f{c}}}}}{{Ad{{Ch{c}}}}}}Ed}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{Ef}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Ch{Ef}}}{{Ad{{Ch{c}}}}}}Ed}Dn}{{{f{{l{C`}}}}e}{{l{g}}}{}{{Af{{Ch{Ef}}}{{Ad{{Ch{c}}}}}}Ed}Dn}{{{f{{l{C`}}}}c}{{l{C`}}}{{Af{Ef}{{Ad{Ab}}}}}}{{{f{{l{Eh}}}}c}Ab{{Eb{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ej}}}}c}Ab{{Eb{{f{Ab}}}{{Ad{Ab}}}}}}{{{l{c}}e}{{l{c}}}Al{{Eb{}{{Ad{}}}}Ed}}{{{f{{l{c}}}}e}{{l{Bj}}}Dn{{Af{{f{DfEl}}}}}}{{{f{{l{Bd}}}}{f{Eb}}}{{l{Bd}}}}{{{f{{l{c}}}}{f{Eb}}}{{l{c}}}Al}{{{f{{l{Bj}}}}{f{Eb}}}{{l{Bj}}}}{{{f{{l{An}}}}{f{Eb}}}{{l{An}}}}{{{f{{l{An}}}}{f{Eb}}}{{l{c}}}Dn}{{{f{{l{c}}}}{f{Eb}}}{{l{e}}}AlDn}{{{f{{l{Bd}}}}{f{Eb}}}{{l{c}}}Dn}{{{f{{l{Bj}}}}{f{Eb}}}{{l{c}}}Dn}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Af{{f{{Bh{Bf}}}}}{{Ad{{f{{Bh{Bf}}}}}}}}}}{{{f{Df{l{c}}}}e}bAl{{Eb{}{{Ad{}}}}Ed}}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{Af{{f{Bl}}}{{Ad{{f{Bl}}}}}}}}{{{f{{l{c}}}}Eng}{{l{i}}}Dn{}{{Af{}{{Ad{e}}}}}Dn}{{{f{{l{Ah}}}}{f{Eb}}}{{A`{{l{Ah}}n}}}}{{{f{{l{C`}}}}{f{Eb}}}{{A`{{l{C`}}n}}}}{{{f{{l{Bd}}}}e{f{Df{Bh{c}}}}}b{}{{Eb{{Ch{{f{{Bh{Bf}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{c}}}}g{f{Df{Bh{e}}}}}bAl{}{{Eb{Ch{f{e}}}{{Ad{e}}}}}}{{{f{{l{{Cd{c}}}}}}g{f{Df{Bh{e}}}}}bCf{}{{Eb{{Ch{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{Ah}}}}e{f{Df{Bh{c}}}}}b{}{{Eb{{Ch{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{An}}}}e{f{Df{Bh{c}}}}}b{}{{Eb{{Ch{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bj}}}}e{f{Df{Bh{c}}}}}b{}{{Eb{{Ch{{f{Bl}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{An}}}}c}{{l{An}}}{{Eb{d}{{Ad{d}}}}Ed}}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{Eb{{f{Bl}}}{{Ad{{E`{Bl}}}}}}Ed}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Eb{}{{Ad{}}}}Ed}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Eb{{f{{Bh{Bf}}}}}{{Ad{{E`{{Bh{Bf}}}}}}}}Ed}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Eb{Ab}{{Ad{Ab}}}}Ed}}{{{f{{l{{Cd{c}}}}}}e}{{l{{Cd{c}}}}}Cf{{Eb{{f{c}}}{{Ad{c}}}}Ed}}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{Af{F`{f{Bl}}}{{Ad{F`}}}}Ed}}{{{f{{l{Bd}}}}Fb}{{l{Fd}}}}{{{f{{l{An}}}}Fb}{{l{Fd}}}}{{{f{{l{c}}}}Fb}{{l{Fd}}}Al}{{{f{{l{Bj}}}}Fb}{{l{Fd}}}}{{{f{{l{j}}}}Fb}{{l{Fd}}}}{{{f{{l{Ff}}}}Fb}{{l{Fd}}}}{{{f{{l{An}}}}{f{{Bh{Fh}}}}{f{Fj}}}{{A`{{l{Fd}}n}}}}{{{f{{l{Bd}}}}{f{{Bh{Fh}}}}{f{Fj}}}{{A`{{l{Fd}}n}}}}{{{f{{l{c}}}}{f{{Bh{Fh}}}}{f{Fj}}}{{A`{{l{Fd}}n}}}Al}{{{f{{l{Ff}}}}{f{{Bh{Fh}}}}{f{Fj}}}{{A`{{l{Fd}}n}}}}{{{f{{l{Bj}}}}{f{{Bh{Fh}}}}{f{Fj}}}{{A`{{l{Fd}}n}}}}{{{f{{l{Bj}}}}}{{A`{{l{Fd}}n}}}}{{{f{{l{An}}}}}{{A`{{l{Fd}}n}}}}{{{f{{l{Bd}}}}}{{A`{{l{Fd}}n}}}}{{{f{{l{{Cd{c}}}}}}}{{A`{{l{Fd}}n}}}Cf}{{{f{{l{c}}}}}{{A`{{l{Fd}}n}}}Al}`{{{f{{l{C`}}}}}{{f{{l{C`}}}}}}{{{f{{l{Bd}}}}}{{f{{l{Bd}}}}}}{{{f{{l{Bj}}}}}{{l{Bd}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dn}{{{f{{l{c}}}}}{{f{En}}}Dn}{{{f{{l{Bj}}}}}{{f{{l{Bj}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DnDn{{Af{{Ch{Ef}}ChCh}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fl}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{l{An}}{l{An}}}}210210{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{{l{c}}}}}{{Cn{Fn}}}Dn}``{{{f{{l{j}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Al{{Eb{}{{Ad{}}}}Ed}Al}{{{f{{l{C`}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{En}}}{{A`{Abn}}}Al}{{{f{{l{Ah}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Bj}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Ff}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{l{c}}}}{f{En}}G`}{{A`{Abn}}}Al}{{{f{{l{j}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{l{Ff}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{l{An}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{l{Bj}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{l{C`}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Gb}{{{f{{l{c}}}}e}{{A`{Abn}}}GbBb}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{Gd}}}}}}}Dn}{{{f{{l{c}}}}}{{Gj{{Gf{{Cn{Cl}}}}{Gh{{f{{Cn{Cl}}}}}{{Ad{Gd}}}}}}}Dn}{{{f{{l{c}}}}}{{f{{Gl{{Cn{Cl}}}}}}}Dn}{{{f{Df{l{c}}}}}{{f{Df{Gl{{Cn{Cl}}}}}}}Dn}{{{f{{l{c}}}}}{{l{c}}}Dn}0{{f{f{Dfc}}}b{}}{fb}`{{{f{Df{l{c}}}}}b{DnAl}}`{fGn}{{{f{{l{c}}}}}{{A`{{f{Bh}}n}}}Al}{{{f{Df{l{c}}}}{f{{l{c}}}}H`}bDn}{{{f{Df{l{c}}}}{f{{l{e}}}}H`}bDnDn}{{{f{{l{c}}}}}{{`{Hb}}}Al}{{}{{l{c}}}Dn}{Gd{{f{c}}}{}}0{Gd{{f{Dfc}}}{}}0{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}}bDn}{Gdb}0{{{f{{l{c}}}}}{{l{c}}}Dn}{{{f{{l{c}}}}}{{f{En}}}Dn}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{An}}}}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBb}{{{f{{l{Bj}}}}{f{Bl}}}{{l{An}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}0692741358{{{f{{l{Ah}}}}}{{A`{{Hh{Ab{Hf{Hd}}}}n}}}}{{{f{{l{C`}}}}}{{A`{{Hh{Ab{Hf{Hd}}}}n}}}}{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}Al}{{{f{{l{j}}}}{f{Bl}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{Gl{Ab}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{An}}}}d}{{A`{{l{An}}n}}}}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{Bj}}}}{f{{l{An}}}}}{{A`{{l{Bj}}n}}}}{{{f{{l{{Cd{c}}}}}}{f{{l{An}}}}}{{A`{{l{{Cd{c}}}}n}}}Cf}{{{f{{l{c}}}}{f{{l{An}}}}}{{A`{{l{c}}n}}}{{Dn{}{{Hj{Dj}}{Dl{Dj}}}}}}{{{f{{l{Bd}}}}{f{{l{An}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{c}}}}}ChDn}{{{f{{l{c}}}}}{{Ch{Gd}}}Dn}`{{{f{{l{Ah}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{{Cd{c}}}}}}{f{DfHl}}}{{A`{bHn}}}Cf}{{{f{{l{c}}}}{f{DfHl}}}{{A`{bHn}}}Al}{{{f{{l{Bj}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{Bd}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{An}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{C`}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{c}}}}e}bDn{{Af{Ch}}}}{{{f{{l{C`}}}}c}b{{Af{{Ch{Ef}}}}}}{{{f{{l{Ah}}}}c}b{{Af{{Ch{Ef}}}}}}{cc{}}{c{{l{e}}}Cl{{Dn{}{{I`{c}}}}}}1{{Ddc}{{l{e}}}Ib{{Dn{}{{I`{}}}}Dn}}{{{f{{l{c}}}}e}{{l{c}}}{{Dn{}{{I`{}}}}Dn}Ib}{{Dd{Gl{{Cn{Cl}}}}}{{l{c}}}Dn}{{Dd{Gl{{Cn{Cl}}}}En}{{l{c}}}Dn}{{DdGd{f{{Bh{Fh}}}}}{{A`{{l{j}}n}}}}{c{{l{An}}}{{Ib{}{{Cj{{Ch{d}}}}}}}}{c{{l{e}}}{{Ib{}{{Cj{{Hh{Gl{Ch{Id}}}}}}}}}Al}{c{{l{e}}}{{Ib{}{{Cj{Ch}}}}}Al}{e{{l{{Cd{c}}}}}Cf{{Ib{}{{Cj{{Ch{c}}}}}}}}{c{{l{Ah}}}{{Ib{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}{c{{l{An}}}{{Ib{}{{Cj{d}}}}}}{e{{l{Bj}}}{{If{Bl}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bj}}}{{Ih{Bl}}}{{Ib{}{{Cj{c}}}}}}{c{{l{Ah}}}{{Ib{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{Ah}}}{{Ij{Ab}}}{{Ib{}{{Cj{c}}}}}}{e{{l{Bd}}}{{Ih{{Bh{Bf}}}}}{{Ib{}{{Cj{c}}}}}}{e{{l{Bd}}}{{If{{Bh{Bf}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{Bj}}}{{If{Bl}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{Ch}}}}}Al}{{Ddc}{{l{An}}}{{D`{}{{Cj{{Ch{d}}}}}}}}{{Dde}{{l{{Cd{c}}}}}Cf{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{Bd}}}{{If{{Bh{Bf}}}}}{{D`{}{{Cj{{Ch{c}}}}}}}};5:7{e{{l{Ff}}}{{If{{Bh{Bf}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}:{e{{l{Ff}}}{{Ih{{Bh{Bf}}}}}{{Ib{}{{Cj{c}}}}}}{c{{l{An}}}{{Ib{}{{Cj{{Ch{d}}}}}}}};{c{{l{e}}}{{Ib{}{{Cj{Ch}}}}}Al}{e{{l{{Cd{c}}}}}Cf{{Ib{}{{Cj{{Ch{c}}}}}}}};{{Dde}{{l{Bj}}}{{If{Bl}}}{{D`{}{{Cj{c}}}}}}{{Dde}{{l{Bd}}}{{If{{Bh{Bf}}}}}{{D`{}{{Cj{c}}}}}}{{Ddc}{{l{An}}}{{D`{}{{Cj{d}}}}}}{{Dde}{{l{{Cd{c}}}}}Cf{{D`{}{{Cj{c}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{}}}}}Al}`{c{{l{An}}}{{Il{}{{Cj{{Ch{d}}}}}}}}{e{{l{Bd}}}{{If{{Bh{Bf}}}}InJ`}{{Il{}{{Cj{{Ch{c}}}}}}}}{c{{l{Ah}}}{{Il{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{Bd}}}{{Ih{{Bh{Bf}}}}InJ`Jb}{{Il{}{{Cj{c}}}}}}{e{{l{Bj}}}{{Ih{Bl}}InJ`Jb}{{Il{}{{Cj{c}}}}}}{e{{l{Bj}}}{{If{Bl}}InJ`}{{Il{}{{Cj{{Ch{c}}}}}}}}{c{{l{e}}}{{Il{}{{Cj{Ch}}}}}Al}{c{{l{An}}}{{Il{}{{Cj{d}}}}}}{{cDdEn}{{l{Ah}}}{{Il{}{{Cj{{Ch{Ab}}}}}}}}{{DdGdc}{{A`{{l{j}}n}}}{{Jd{}{{Cj{{f{Ab}}}}}}Jf}}{{Dd{f{Bh}}}{{l{c}}}Al}{{Dd{f{{Bh{d}}}}}{{l{An}}}}{{Dd{f{{Bh{c}}}}}{{l{Bj}}}{{If{Bl}}}}{{Dd{f{{Bh{c}}}}}{{l{{Cd{c}}}}}Cf}{{Dd{f{{Bh{c}}}}}{{l{Bd}}}{{If{{Bh{Bf}}}}}}{{Dd{f{{Bh{{Ch{d}}}}}}}{{l{An}}}}{{Dd{f{{Bh{Ch}}}}}{{l{c}}}Al}{{Dd{f{{Bh{{Ch{c}}}}}}}{{l{Bj}}}{{If{Bl}}}}{{Dd{f{{Bh{{Ch{c}}}}}}}{{l{Bd}}}{{If{{Bh{Bf}}}}}}{{Dd{f{{Bh{{Ch{c}}}}}}}{{l{{Cd{c}}}}}Cf}{c{{l{An}}}{{Jh{}{{Cj{{Ch{d}}}}}}}}{c{{l{e}}}{{Jh{}{{Cj{Ch}}}}}Al}{{DdGl}{{l{c}}}Al}{{DdGl{Ch{Id}}}{{l{c}}}Al}{{Dd{f{Bl}}Gd}{{l{Bj}}}}{{Dd{f{Ab}}Gd}{{l{C`}}}}{{Dd{f{Ab}}Gd}{{l{Ah}}}}{{Dd{f{{Bh{Bf}}}}Gd}{{l{Ff}}}}{{Dd{f{{Bh{Bf}}}}Gd}{{l{Bd}}}}{{DdcGd}{{l{{Cd{c}}}}}Cf}{{DdGd}{{l{c}}}Al}{{DddGd}{{l{An}}}}{{DdGd}{{l{Ah}}}}{{DdGd}{{l{{Cd{c}}}}}Cf}3{{DdGd}{{l{j}}}}{{DdGd}{{l{C`}}}}{{DdGd}{{l{Ff}}}}{{DdGd}{{l{Bd}}}}{{DdGd}{{l{Bj}}}}{{DdGd}{{l{An}}}}{{{f{{l{c}}}}Gd}{{l{c}}}Dn}{{DdGd{f{En}}}{{l{Ah}}}}{{DdGd{f{En}}Gd}{{l{C`}}}}{{{f{{l{c}}}}Gd}ChDn}{{{f{{l{Bj}}}}Gd}{{A`{Jjn}}}}{{{f{{l{{Cd{c}}}}}}Gd}{{A`{Jjn}}}Cf}{{{f{{l{c}}}}Gd}{{A`{Jjn}}}Al}{{{f{{l{C`}}}}Gd}{{A`{Jjn}}}}{{{f{{l{An}}}}Gd}{{A`{Jjn}}}}{{{f{{l{Ah}}}}Gd}{{A`{Jjn}}}}{{{f{{l{Ff}}}}Gd}{{A`{Jjn}}}}{{{f{{l{j}}}}Gd}{{A`{Jjn}}}}{{{f{{l{Bd}}}}Gd}{{A`{Jjn}}}}{{{f{{l{Ff}}}}Gd}Jj}{{{f{{l{j}}}}Gd}Jj}{{{f{{l{c}}}}Gd}JjAl}{{{f{{l{Bd}}}}Gd}Jj}{{{f{{l{Ah}}}}Gd}Jj}{{{f{{l{Bj}}}}Gd}Jj}{{{f{{l{C`}}}}Gd}Jj}{{{f{{l{An}}}}Gd}Jj}{{{f{{l{{Cd{c}}}}}}Gd}JjCf}{{{f{{l{Ah}}}}Gd}{{Ch{Ab}}}}{{{f{{l{C`}}}}Gd}{{Ch{Ab}}}}{{{f{{l{c}}}}}{{Ch{Jl}}}Dn}{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}}JnDn}{{{f{{l{Ah}}}}}Ab}{{{f{{l{C`}}}}}Ab}{{{f{{l{c}}}}}ChDn}0{{{f{{l{{Cd{c}}}}}}Gd}{{Ch{{f{K`}}}}}Cf}0{{{f{{l{j}}}}Fb}{{A`{{l{Ff}}n}}}}{{{f{{l{j}}}}Fb}{{A`{{Kb{Hd}}n}}}}{{{f{{l{c}}}}Gd}ChDn}{{{f{{l{Ff}}}}}Gd}{{{f{{l{Bj}}}}}Gd}{{{f{{l{C`}}}}}Gd}{{{f{{l{Ah}}}}}Gd}{{{f{{l{c}}}}dd}{{A`{Cbn}}}Al}{{{f{{l{An}}}}dd}{{A`{Cbn}}}}{{{f{{l{Ah}}}}dd}{{A`{Cbn}}}}{{{f{{l{{Cd{c}}}}}}dd}{{A`{Cbn}}}Cf}{{{f{{l{Bj}}}}dd}{{A`{Cbn}}}}{{{f{{l{C`}}}}dd}{{A`{Cbn}}}}{{{f{{l{Ff}}}}dd}{{A`{Cbn}}}}{{{f{{l{Bd}}}}dd}{{A`{Cbn}}}}{{{f{{l{c}}}}GddGd}CbFl}{{{f{{l{Bj}}}}{f{Bl}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBb}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}3504126{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}{Ch{Gd}}}{{l{c}}}Dn}{{}Gd}0{{GdKd{Ch{Kf}}}{{l{c}}}Al}{{{f{{l{Ah}}}}}{{f{En}}}}{{{f{{l{C`}}}}}{{f{En}}}}{{{f{{l{c}}}}}{{Kj{{Kh{c}}}}}Dn}{{}c{}}0{{}Fh}{{{l{Kl}}}{{L`{KnKl}}}}{{{l{Lb}}Ld{Ch{Dd}}}{{L`{LfLb}}}}{{{l{Lh}}{Ch{Gd}}Gd}{{A`{{L`{LjLh}}n}}}}{{{l{Lh}}{Ch{Gd}}Gd}{{L`{LjLh}}}}{{{l{Lb}}Ld}{{L`{LlLb}}}}{{{f{{l{c}}}}}{}Al}{{{f{{l{Ff}}}}}}{{{f{{l{Ah}}}}}}{{{f{{l{Bd}}}}}}{{{f{{l{Bj}}}}}}{{{f{{l{C`}}}}}}{{{f{{l{{Cd{c}}}}}}}{}Cf}{{{f{{l{An}}}}}}{{{f{{l{c}}}}}{{`{InJ`JdHbJh}}}Al}{{{l{Lh}}}Ab}{{{l{c}}}AbDn}{{{l{Lb}}}{{L`{LnLb}}}}{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}}{{l{An}}}M`}000{{{f{{l{c}}}}}{{l{An}}}Dn}02{{{f{{l{c}}}}}MbDn}{{{f{{l{c}}}}}{{`{Md}}}Dn}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{{l{c}}}}}}}}}Dn}{{{f{{l{c}}}}}{{Gj{{Gf{{Cn{Cl}}}}{Gh{{f{{Cn{Cl}}}}}{{Ad{{Ch{{f{Id}}}}}}}}}}}Dn}`{{fc}Gn{{If{Bl}}}}{{{f{{l{c}}}}}ChDn}{{{f{{l{c}}}}}{{Ch{Gd}}}Dn}{{{f{{l{c}}}}}{{Mf{c}}}Dn}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}01{{{f{{l{c}}}}}GdDn}0{{{f{{l{c}}}}e}{{l{c}}}Al{B`Mh}}00{{{f{{l{c}}}}Gd}{{l{c}}}Dn}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}{{{f{{l{Bj}}}}{f{Bl}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBb}0523461{{{f{{l{c}}}}}ChAl}{{{f{{l{An}}}}}{{Ch{d}}}}{{{f{{l{Bd}}}}}{{Ch{{f{{Bh{Bf}}}}}}}}{{{f{{l{An}}}}}Mj}{{{f{{l{Bj}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bd}}}}}Mj}{{{f{{l{An}}}}}{{Ch{Aj}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Al}{{{f{{l{Eh}}}}}{{Ch{Aj}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Fl}{{{f{{l{Ej}}}}}{{Ch{Kd}}}}{{{f{{l{Eh}}}}}Mj}{{{f{{l{c}}}}}MjFl}{{{f{{l{Ej}}}}}Mj}{{{f{Df{l{c}}}}{Kh{c}}}bDn}`{{{f{{l{c}}}}}{{Ml{c}}}Dn}{{{f{{l{c}}}}}{{f{{N`{{Mn{c}}}}}}}Dn}{{{f{{l{c}}}}}{{Ch{{Nb{Fn}}}}}Dn}{{{f{Df{l{c}}}}}{{f{Df{N`{{Mn{c}}}}}}}Dn}{{{f{{l{c}}}}}{{N`{{Mn{c}}}}}Dn}{{{f{{l{c}}}}}ChAl}{{{f{{l{An}}}}}{{Ch{d}}}}{{{f{{l{Bd}}}}}{{Ch{{f{{Bh{Bf}}}}}}}}{{{f{{l{c}}}}}{{Ch{Hh}}}Al}{{{f{{l{An}}}}}Mj}{{{f{{l{Bd}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bj}}}}}Mj}{{Dd{f{Bh}}}{{l{c}}}Al}{{Dd{f{{Bh{Bf}}}}GdGd}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{l{c}}e}{}Al{B`Bb}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}}GdDn}{{{f{{l{c}}}}}{{A`{Gdn}}}Al}{{{f{{l{Bd}}}}}{{A`{Gdn}}}}{{{f{{l{Bj}}}}}{{A`{Gdn}}}}{{{f{{l{c}}}}}{{f{Dd}}}Dn}{{Ddc}{{l{Eh}}}{{If{{Bh{Aj}}}}}}{{Ddc}{{l{Bj}}}{{If{{Bh{{E`{Bl}}}}}}}}{{Ddc}{{l{Ej}}}{{If{{Bh{{Ch{Kd}}}}}}}}{{Ddc}{{l{Eh}}}{{If{{Bh{{Ch{Aj}}}}}}}}{{Ddc}{{l{Bj}}}{{If{{Bh{El}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bh{{Gl{Bf}}}}}}}}{{Ddc}{{l{An}}}{{If{{Bh{d}}}}}}{{Ddc}{{l{Bj}}}{{If{{Bh{{Ch{El}}}}}}}}{{Ddc}{{l{Nd}}}{{If{{Bh{Bf}}}}}}{{Ddc}{{l{Nf}}}{{If{{Bh{Nh}}}}}}{{Ddc}{{l{Fd}}}{{If{{Bh{Jl}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bh{{Ch{{Gl{Bf}}}}}}}}}}{{Ddc}{{l{An}}}{{If{{Bh{{Ch{d}}}}}}}}{{Dd{f{{Bh{c}}}}}{{l{{Cd{c}}}}}Cf}{{Dd{Nj{Hd}}}{{l{Lb}}}}{{Ddc}{{l{Lb}}}{{If{{Bh{{Ch{Hd}}}}}}}}{{Ddc}{{l{Nd}}}{{If{{Bh{{Ch{Bf}}}}}}}}{{Ddc}{{l{Nf}}}{{If{{Bh{{Ch{Nh}}}}}}}}{{Ddc}{{l{Nl}}}{{If{{Bh{Kf}}}}}}{{Ddc}{{l{Kl}}}{{If{{Bh{Nn}}}}}}{{Ddc}{{l{Ej}}}{{If{{Bh{Kd}}}}}}{{Ddc}{{l{O`}}}{{If{{Bh{Ob}}}}}}{{Ddc}{{l{Fd}}}{{If{{Bh{{Ch{Jl}}}}}}}}{{Ddc}{{l{Nl}}}{{If{{Bh{{Ch{Kf}}}}}}}}{{Dd{Nj{Nn}}}{{l{Kl}}}}{{Ddc}{{l{Kl}}}{{If{{Bh{{Ch{Nn}}}}}}}}{{Ddc}{{l{O`}}}{{If{{Bh{{Ch{Ob}}}}}}}}{{Ddc}{{l{Lh}}}{{If{{Bh{Od}}}}}}{{Dd{Nj{Kf}}}{{l{Nl}}}}{{Dd{Nj{Jl}}}{{l{Fd}}}}{{Ddc}{{l{Bd}}}{{If{{Bh{{Ch{{E`{{Bh{Bf}}}}}}}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bh{{E`{{Bh{Bf}}}}}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bh{{Ch{{f{{Bh{Bf}}}}}}}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bh{{f{{Bh{Bf}}}}}}}}}}{{Ddc}{{l{Bj}}}{{If{{Bh{{f{Bl}}}}}}}}{{Ddc}{{l{Bj}}}{{If{{Bh{{Ch{{E`{Bl}}}}}}}}}}{{Ddc}{{l{Lb}}}{{If{{Bh{Hd}}}}}}{{Ddc}{{l{Of}}}{{If{{Bh{Oh}}}}}}{{Dde}{{l{{Cd{c}}}}}Cf{{If{{Bh{{Ch{c}}}}}}}}{{Ddc}{{l{Of}}}{{If{{Bh{{Ch{Oh}}}}}}}}{{Ddc}{{l{Bj}}}{{If{{Bh{{Ch{{f{Bl}}}}}}}}}}{{Ddc}{{l{Lh}}}{{If{{Bh{{Ch{Od}}}}}}}}{Dd{{l{{Cd{c}}}}}Cf}{{{f{{l{C`}}}}GdGd}{{l{C`}}}}{{{f{{l{Ff}}}}GdGd}{{l{Ff}}}}{{{f{{l{Bj}}}}GdGd}{{l{Bj}}}}{{{f{{l{An}}}}GdGd}{{l{An}}}}{{{f{{l{Ah}}}}GdGd}{{l{Ah}}}}{{{f{{l{Bd}}}}GdGd}{{l{Bd}}}}{{{f{{l{c}}}}GdGd}{{l{c}}}Al}{{{f{{l{j}}}}GdGd}{{l{j}}}}{{{f{{l{{Cd{c}}}}}}GdGd}{{l{{Cd{c}}}}}Cf}{{Dd{Gl{c}}}{{l{{Cd{c}}}}}Cf}{{Dd{Gl{c}}Id}{{l{{Cd{c}}}}}Cf}{{DdGl}{{l{c}}}Al}{{{N`{Oj}}{Gl{{Cn{Cl}}}}JlJl}{{l{c}}}Dn}{{{f{{l{c}}}}}{{l{c}}}M`}{{{l{An}}}}{{{f{{l{An}}}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bj}}}}{f{Bl}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBb}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{An}}}}4{{{f{{l{C`}}}}{f{{l{C`}}}}}}728:9463{{{f{{l{c}}}}}GdDn}{{{f{{l{An}}}}}Gd}0`{{{f{{l{C`}}}}}{{A`{{Hf{Hd}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Hf{Hd}}n}}}}`{{{f{{l{Bj}}}}}{{`{{Ol{}{{Cj{{Ch{{f{Bl}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{`{{Ol{}{{Cj{{Ch{Ab}}}}}}}}}}{{{f{Df{l{Ah}}}}}{{`{On}}}}{{{f{{l{Bj}}}}}{{`{On}}}}{{{f{{l{c}}}}}MjAl}{{{f{Df{l{c}}}}}bDn}{{{f{{l{Ej}}}}AjA@`}{{A`{{Ch{Kd}}n}}}}{{{f{{l{Eh}}}}AjA@`}{{A`{{Ch{Aj}}n}}}}{{{f{{l{c}}}}AjA@`}{{A`{{Ch{Aj}}n}}}Fl}{{{f{{l{Ej}}}}AjA@`}{{A`{Mjn}}}}{{{f{{l{c}}}}AjA@`}{{A`{Mjn}}}Fl}{{{f{{l{Eh}}}}AjA@`}{{A`{Mjn}}}}{{DdGdAj}{{A`{{l{An}}n}}}}{{DdGdAjAj}{{A`{{l{c}}n}}}Al}{{DdGd}{{l{c}}}Al}{{DdGdAjAj}{{l{c}}}Al}{{{f{{l{c}}}}}{{l{c}}}Dn}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{c}}}}}{{Ch{Id}}}Dn}{{{f{{l{c}}}}}{{f{Oj}}}Dn}{{{f{{l{Nf}}}}}Ab}{{{f{{l{Lb}}}}}Ab}{{{f{{l{O`}}}}}Ab}{{{f{{l{Kl}}}}}Ab}{{{f{{l{Of}}}}}Ab}{{{f{{l{Nd}}}}}Ab}{{{f{{l{Fd}}}}}Ab}{{{f{{l{Nl}}}}}Ab}{{{f{{l{Ej}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Eh}}}}}Ab}32540819:76{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}Dd}bDn}{{{f{{l{Ff}}}}}{{l{Ff}}}}{{{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{{l{C`}}}}}{{l{C`}}}}{{{f{{l{{Cd{c}}}}}}}{{l{{Cd{c}}}}}Cf}{{{f{{l{c}}}}}{{l{c}}}Al}{{{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{{l{c}}}}{f{Eb}}A@b}{{A`{Abn}}}Al}{{{f{{l{c}}}}Gde}{{A`{{l{c}}n}}}M`{{Af{{f{Df{l{c}}}}}{{Ad{Ch}}}}}}{{{f{{l{c}}}}Ajdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{c}}}}Gddd{Ch{Kf}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{An}}}}{f{{Bh{Jl}}}}c}{{A`{Abn}}}{{Ib{}{{Cj{{Ch{d}}}}}}}}{{{f{{l{Bj}}}}{f{{Bh{Jl}}}}c}{{A`{Abn}}}{{Ib{}{{Cj{{Ch{{f{Bl}}}}}}}}}}{{{f{Df{l{c}}}}{f{{Bh{Jl}}}}e}{{A`{Abn}}}A@d{{Ib{}{{Cj{Ch}}}}}}{{{f{{l{An}}}}c{Ch{d}}}{{A`{{l{An}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{Bd}}}}c{Ch{{f{{Bh{Bf}}}}}}}{{A`{{l{Bd}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{Bj}}}}c{Ch{{f{Bl}}}}}{{A`{{l{Bj}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{c}}}}eCh}{{A`{{l{c}}n}}}Al{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Al{{Ib{}{{Cj{Jl}}}}}{{Eb{Ch}{{Ad{Ch}}}}}}{{{f{{l{Bd}}}}ce}{{A`{{l{Bd}}n}}}{{Ib{}{{Cj{Jl}}}}}{{Eb{{Ch{{f{{Bh{Bf}}}}}}}{{Ad{{Ch{{Gl{Bf}}}}}}}}}}{{{f{{l{Bj}}}}ce}{{A`{{l{Bj}}n}}}{{Ib{}{{Cj{Jl}}}}}{{Eb{{Ch{{f{Bl}}}}}{{Ad{{Ch{El}}}}}}}}{{{f{{l{An}}}}ce}{{A`{{l{An}}n}}}{{Ib{}{{Cj{Jl}}}}}{{Eb{{Ch{d}}}{{Ad{{Ch{d}}}}}}}}{{{f{{l{j}}}}c}A`A@f}{{{f{{l{c}}}}e}A`AlA@f}{{{f{{l{Bj}}}}c}A`A@f}{{{f{{l{An}}}}c}A`A@f}{{{f{{l{Ah}}}}c}A`A@f}{{{f{{l{Bd}}}}c}A`A@f}{{{f{{l{C`}}}}c}A`A@f}{{{f{{l{An}}}}{f{{l{An}}}}{Ch{d}}}{{A`{{l{An}}n}}}}{{{f{{l{Bd}}}}{f{{l{An}}}}{Ch{{f{{Bh{Bf}}}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{c}}}}{f{{l{An}}}}Ch}{{A`{{l{c}}n}}}Al}{{{f{{l{Bj}}}}{f{{l{An}}}}{Ch{{f{Bl}}}}}{{A`{{l{Bj}}n}}}}{{{f{Df{l{Ah}}}}}b}{{{f{Df{l{c}}}}d}bDn}{{{f{Df{l{Ah}}}}En}b}{{{f{Df{l{c}}}}Jl}bDn}{{{f{Df{l{c}}}}Mb}bDn}{{{f{{l{Ah}}}}Hd}{{l{Ah}}}}{{{f{{l{j}}}}Hd}{{l{j}}}}{{{f{{l{Bj}}}}Hd}{{l{Bj}}}}{{{f{{l{Bd}}}}Hd}{{l{Bd}}}}{{{f{{l{Ff}}}}Hd}{{l{Ff}}}}{{{f{{l{c}}}}Hd}{{l{c}}}Al}{{{f{{l{C`}}}}Hd}{{l{C`}}}}{{{f{{l{{Cd{c}}}}}}Hd}{{l{{Cd{c}}}}}Cf}{{{f{{l{An}}}}Hd}{{l{An}}}}{{{f{{l{An}}}}Hd{Ch{d}}}{{l{An}}}}{{{f{{l{c}}}}HdCh}{{l{c}}}Al}{{{f{{l{Bd}}}}Hd{Ch{{f{{Bh{Bf}}}}}}}{{l{Bd}}}}{{{f{{l{Ff}}}}Hd{Ch{{f{{Bh{Bf}}}}}}}{{l{Ff}}}}{{{f{{l{Ah}}}}Hd{Ch{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{C`}}}}Hd{Ch{{f{Ab}}}}}{{l{C`}}}}{{{f{{l{{Cd{c}}}}}}Hd{Ch{{Cd{c}}}}}{{l{{Cd{c}}}}}Cf}{{{f{{l{Bj}}}}Hd{Ch{{f{Bl}}}}}{{l{Bj}}}}{{{f{Df{l{c}}}}}bDn}{{{f{{l{c}}}}HdGd}{{l{c}}}Dn}0{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{c}}}}d}{{l{c}}}Al}{{{f{{l{An}}}}d}{{l{An}}}}{{{f{{l{Bj}}}}d}{{l{Bj}}}}{{{f{{l{Ff}}}}d}{{l{Ff}}}}{{{f{{l{Bd}}}}d}{{l{Bd}}}}{{{f{{l{Ff}}}}Fb}{{l{Ff}}}}{{{f{{l{c}}}}Fb}{{l{c}}}Al}{{{f{{l{j}}}}Fb}{{l{j}}}}{{{f{{l{Bj}}}}Fb}{{l{Bj}}}}{{{f{{l{An}}}}Fb}{{l{An}}}}{{{f{{l{Bd}}}}Fb}{{l{Bd}}}}{{{f{{l{c}}}}Hd}{{Hh{{l{c}}{l{c}}}}}Dn}0{{{f{{l{c}}}}Bf}{{Ch{Aj}}}Al}{{{f{{l{Ej}}}}Bf}Mj}{{{f{{l{Eh}}}}Bf}Mj}{{{f{{l{c}}}}Bf}MjFl}{{{f{{l{j}}}}}{{f{{Bh{Oj}}}}}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{An}}}}}{{Ch{Jl}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bd}}}}}Mj}{{{f{{l{An}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{c}}}}{Ch{Gd}}}{{l{c}}}Dn}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dn{{If{{Bh{Jl}}}}A@h}}{{{f{{l{c}}}}{f{{l{Fd}}}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{c}}}}{f{{Bh{A@j}}}}Mb}{{l{c}}}Dn}{{{f{{l{c}}}}{f{{Bh{A@j}}}}}{{l{c}}}Dn}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{If{{Bh{Jl}}}}A@h}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dn{}{{Hj{Dj}}{A@l{Dj}}{Dh{Dj}}}}Dn}{{If{{Bh{Jl}}}}A@h}}{{{f{{l{Ah}}}}{f{c}}}{{l{Ah}}}{{If{{Bh{Jl}}}}A@h}}{{{f{{l{Ah}}}}{f{{l{Fd}}}}}{{l{Ah}}}}{{{f{{l{C`}}}}{f{c}}}{{l{C`}}}{{If{{Bh{Jl}}}}A@h}}{{{f{{l{C`}}}}{f{{l{Fd}}}}}{{l{C`}}}}{{{f{{l{j}}}}{f{{l{Fd}}}}}{{l{j}}}}{{{f{{l{Bj}}}}{f{c}}}{{l{Bj}}}{{If{{Bh{Jl}}}}A@h}}{{{f{{l{Bd}}}}{f{c}}}{{l{Bd}}}{{If{{Bh{Jl}}}}A@h}}{{{f{{l{Bj}}}}{f{{l{Fd}}}}}{{l{Bj}}}}{{{f{{l{Bd}}}}{f{{l{Fd}}}}}{{l{Bd}}}}{{{f{{l{c}}}}{f{{l{Fd}}}}}{{l{c}}}{{Dn{}{{Hj{Dj}}{A@l{Dj}}{Dh{Dj}}}}Dn}}`{{{f{{l{c}}}}dA@n}{{Gl{{Gl{AA`}}}}}Dn}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{Bj}}}}Gd}{{A`{Abn}}}}{{{f{Df{l{Ah}}}}En}b}{{{f{Df{l{C`}}}}En}b}{{{f{{l{Ah}}}}}{{A`{{AAh{AAb{AAf{{AAd{Gd}}}}}}n}}}}{{{f{{l{c}}}}}{{A`{{AAh{{AAj{f}}{AAf{{AAd{Gd}}}}}}n}}}Al}{fc{}}{{{f{{l{Bd}}}}}{{l{Bj}}}}{{{f{{l{c}}}}}{{Gl{Ch}}}Al}{{{f{{l{c}}}}}{{AAl{Gl{Gl{Ch}}}}}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}10{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{C`}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ef}}}{{Ad{{A`{{Ch{c}}n}}}}}}Ed}Dn}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ef}}}{{Ad{{A`{{Ch{c}}n}}}}}}Ed}Dn}{{{f{{l{C`}}}}c}{{A`{{l{C`}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{C`}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}g}{{A`{{l{Bj}}e}}}Dn{}{{Af{{f{DfEl}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{c{{A`{e}}}{}{}}0{{Ddg}{{A`{{l{i}}e}}}Cl{}{{Ib{}{{Cj{{A`{ce}}}}}}}{{Dn{}{{I`{c}}}}Dn}}{{}{{A`{c}}}{}}0{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{A`{{Ch{Ab}}n}}}}}}}}{fAAn}0{{{f{{l{An}}}}}{{A`{{l{An}}n}}}}{{{f{{l{{Cd{c}}}}}}}{{A`{{l{{Cd{c}}}}n}}}Cf}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{Bd}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{Bj}}}}}{{A`{{l{Bj}}n}}}}{{{l{j}}}AB`}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dn}{{{f{Df{l{c}}}}}bDn}{{{f{{l{c}}}}Gd}{}Dn}{{{f{{l{c}}}}Bf}{{Ch{Aj}}}Al}{{{f{{l{c}}}}Bf}MjFl}{{{f{{l{Ej}}}}Bf}Mj}{{{f{{l{Eh}}}}Bf}Mj}{{{f{{l{Eh}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ff}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{O`}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ej}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{{Cd{c}}}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}Cf}{{{f{{l{An}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Of}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nf}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nl}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bj}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fd}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Of}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bj}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ej}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{{Cd{c}}}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}Cf}{{{f{{l{Nd}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nf}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fd}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nl}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{O`}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ff}}}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{{f{{l{C`}}}}}Gd}{{Ddc}{{l{e}}}Cl{{Dn{}{{I`{c}}}}Dn}}{{{f{{l{e}}}}c}{{l{e}}}Cl{{Dn{}{{I`{c}}}}Dn}}{{{f{{l{c}}}}{Gl{{Cn{Cl}}}}}{{l{c}}}Dn}{{{l{c}}Dd}{{l{c}}}Dn}{{{f{{Bh{ABb}}}}e}c{}{{ABd{{f{{l{Fd}}}}}{{Ad{c}}}}}}{{{l{j}}{Ch{Id}}}{{l{j}}}}{{{l{j}}{l{An}}}{{l{j}}}}{{{f{{l{c}}}}Mb}{{l{c}}}Dn}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}23012323102323013232103232012323{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{C`}}}}{f{{l{c}}}}e}{{l{C`}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{Df{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{j}}}}{f{{l{An}}}}{f{{l{j}}}}}{{A`{{l{j}}n}}}}{{{f{{l{c}}}}{f{{l{An}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}{{Dn{}{{A@l{Dj}}}}}}````{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}e{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}g{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}65654654650654654````````````````{{fh}b}000{{{f{DfABn}}{f{Cl}}}b}{{{f{DfABn}}}b}{{{f{DfAC`}}}b}{{{f{DfACb}}c}b{{D`{}{{Cj{{Ch{d}}}}}}Jh}}{{{f{Df{ACd{c}}}}e}bAl{{D`{}{{Cj{Ch}}}}Jh}}{{{f{Df{ACd{c}}}}e}bAl{{D`{}{{Cj{}}}}Jh}}{{{f{DfACf}}}b}{{{f{DfACh}}}b}65{{{f{DfACj}}}b}{{{f{DfACl}}}b}{{{f{DfACb}}}b}{{{f{DfACn}}}b}{{{f{Df{ACd{c}}}}}bAl}{{{f{Df{AD`{c}}}}}b{ADbA@h}}{{{f{DfADd}}}b}{{{f{DfADf}}}b}{{{f{Df{ADh{c}}}}}bAl}{{{f{DfABn}}{Ch{{f{Cl}}}}}b}{{{f{DfABn}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACf}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{Df{ACd{c}}}}{Ch{{f{Bh}}}}}bAl}{{{f{Df{AD`{c}}}}{Ch{e}}}b{ADbA@h}{{If{c}}}}{{{f{DfACh}}{Ch{c}}}b{}}{{{f{DfACf}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABn}}{f{Ab}}}{{A`{bn}}}}{{{f{DfAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACj}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACl}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACb}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACn}}{f{Ab}}}{{A`{bn}}}}{{{f{Df{ACd{c}}}}{f{Ab}}}{{A`{bn}}}Al}{{{f{Df{ACd{c}}}}{f{Bh}}}bAl}{{{f{DfACj}}c}b{{D`{}{{Cj{{Ch{{f{Bl}}}}}}}}Jh}}{{{f{DfACl}}c}b{{D`{}{{Cj{{Ch{{f{{Bh{Bf}}}}}}}}}}Jh}}{{{f{DfACh}}c}b{}}{{{f{Df{AD`{c}}}}e}b{ADbA@h}{{If{c}}}}{{{f{DfADd}}d}b}{{{f{Df{ADh{c}}}}}bAl}{{{f{DfACj}}c}b{{D`{}{{Cj{{f{Bl}}}}}}}}{{{f{DfACl}}c}b{{D`{}{{Cj{{f{{Bh{Bf}}}}}}}}}}{f{{f{c}}}{}}0000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000`{{{f{{AD`{c}}}}}{{AD`{c}}}{ADbA@h}}{{{f{ADd}}}ADd}{{{f{ADf}}}ADf}{{{f{{ADh{c}}}}}{{ADh{c}}}{JfAl}}{{f{f{Dfc}}}b{}}000{fb}000{{}ABn}{{}AC`}{Gd{{f{c}}}{}}0000000000{Gd{{f{Dfc}}}{}}0000000000{Gdb}0000000000{{{f{ACj}}}d}{{{f{ACl}}}d}{{{f{ACb}}}d}{{{f{{ACd{c}}}}}dAl}{{{f{ACf}}}d}{{{f{ACj}}}{{f{Oj}}}}{{{f{ACl}}}{{f{Oj}}}}{{{f{ACb}}}{{f{Oj}}}}{{{f{{ACd{c}}}}}{{f{Oj}}}Al}{{{f{ACf}}}{{f{Oj}}}}{ACh{{l{c}}}Dn}{{{f{DfABn}}}{{l{Ah}}}}{{{f{DfAC`}}}{{l{Ah}}}}{{{f{DfACn}}}{{l{Ah}}}}{{{f{DfACf}}}{{l{Ah}}}}{{{AD`{{Bh{Bf}}}}}{{l{Bd}}}}{{{AD`{Bl}}}{{l{Bj}}}}{ADd{{l{An}}}}{ADfADj}{{{ADh{c}}}{{l{c}}}Al}`{cc{}}0000000000{{Dde}ADl{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADl{}{{D`{}{{Cj{c}}}}}}{{Dd{f{{Bh{c}}}}}ADl{}}{{Dd{f{{Bh{{Ch{c}}}}}}}ADl{}}{{{f{En}}GdGdDd}{{Cn{ACf}}}}{{}Gd}0000000000{{{f{DfACj}}}{{Cn{Cl}}}}{{{f{DfACl}}}{{Cn{Cl}}}}{{{f{DfACb}}}{{Cn{Cl}}}}{{{f{Df{ACd{c}}}}}{{Cn{Cl}}}Al}{{{f{DfACf}}}{{Cn{Cl}}}}{{}c{}}0000000000`{{DdGd{Ch{En}}}ABn}{{DdGd{Ch{En}}}AC`}{{DdGdGd}ACj}{{DdGdGd}ACl}{{DdGdGd}ACb}{{DdGd}ACn}{{DdGdGdEn}{{ACd{c}}}Al}{{DdGd}{{AD`{c}}}{ADbA@h}}{{DdGd}ADd}{{DdGd}ADf}{{DdGd}{{ADh{c}}}Al}{{DdGdGdEnEn}{{ACd{c}}}Al}{{{f{DfACh}}}b}{{{f{DfADd}}}b}{{{f{DfADf}}}b}{{{f{Df{ADh{c}}}}}bAl}{fc{}}000{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{fAAn}0000000000{{}c{}}0000000000````````{{{f{DfACf}}}b}{{{f{DfACf}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACf}}{f{Ab}}}{{A`{bn}}}}`{{{f{ACf}}}d}{{{f{ACf}}}{{f{Oj}}}}{{{f{DfACf}}}{{l{Ah}}}}{{{f{En}}GdGdDd}{{Cn{ACf}}}}{{{f{DfACf}}}{{Cn{Cl}}}}````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{G`}}}G`}{{f{f{Dfc}}}b{}}{fb}{{}G`}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{c{{A`{G`}}}ADn}{Gdb}{{{f{G`}}{f{G`}}}d}{{f{f{c}}}d{}}00{{{f{G`}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{G`}}{f{Dfc}}}bAE`}{{}Gd}{{}c{}}{{{f{G`}}c}A`A@f}{{{f{G`}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6``{{AEbDd}{{l{c}}}Dn}{{AEd{f{{l{c}}}}}{{l{c}}}Dn}10{{AEdDdEn}{{l{c}}}Dn}0{{AEbDd}{{A`{{l{c}}e}}}Dn{}}{{AEd{f{{l{c}}}}}{{A`{{l{c}}e}}}Dn{}}10{{AEdDdEn}{{A`{{l{c}}e}}}Dn{}}0`{AEfAEf}``{{AEhDdEn}e{}{{AEj{c}}}}{{eDdEn}AEj{}{{Il{}{{Cj{c}}}}}}````{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{Gd{{f{c}}}{}}00{Gd{{f{Dfc}}}{}}00{Gdb}00{cc{}}00{{}Gd}00{{}c{}}00000{{{f{AEl}}}AEn}{{{f{AF`}}En}AFb}{{{f{DfAEn}}}Ch}{{{f{DfAFb}}}Ch}{{{f{Df{AFd{c}}}}}ChD`}21{{{f{Df{AFd{c}}}}}ChHb}`{{{f{AEn}}}{{Hh{Gd{Ch{Gd}}}}}}{{{f{AFb}}}{{Hh{Gd{Ch{Gd}}}}}}{{{f{{AFd{c}}}}}{{Hh{Gd{Ch{Gd}}}}}D`}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAn}00<<<`````````````````````````{{fh}b}0000{{}H`}{{}Jn}{{H`H`}H`}{{JnJn}Jn}{{{f{DfH`}}H`}b}{{{f{DfJn}}Jn}b}3210{{{f{H`}}}Jl}0{{{f{Jn}}}Bf}05432{f{{f{c}}}{}}000000{{{f{Df}}}{{f{Dfc}}}{}}000000{{{f{{Mn{c}}}}}{{Cn{Fn}}}Dn}{{{f{{Mn{c}}}}}{{Mn{c}}}Dn}{{{f{{Kh{c}}}}}{{Kh{c}}}Dn}{{{f{AFf}}}AFf}{{{f{H`}}}H`}{{{f{Jn}}}Jn}{{f{f{Dfc}}}b{}}0000{fb}0000{{{f{DfAFh}}}b}{H`H`}{JnJn}{{{f{H`}}H`}d}{{{f{Jn}}Jn}d}{{}{{Mn{c}}}Dn}{{}{{Kh{c}}}Dn}{{}H`}{{}Jn}{Gd{{f{c}}}{}}{{{f{{Ml{c}}}}}fDn}111111{Gd{{f{Dfc}}}{}}000000{c{{A`{Jn}}}ADn}{{H`H`}H`}{{JnJn}Jn}{{}d}{{{f{Fn}}}{{Ch{Jl}}}}{{{f{{Kh{c}}}}}{{Ch{Jl}}}Dn}{{{Kh{c}}Jl}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{Jl}}}{{Kh{c}}}Dn}{Gdb}000000=<5{{{f{H`}}{f{H`}}}d}{{{f{Jn}}{f{Jn}}}d}7{{{f{DfH`}}c}b{{Ib{}{{Cj{H`}}}}}}{{{f{DfJn}}c}b{{Ib{}{{Cj{Jn}}}}}}{{{Kh{c}}d}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{d}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}H`}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}H`}{{Kh{e}}}DnDn}{{{Kh{c}}Jn}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{Jn}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}{f{DfHl}}}{{A`{bHn}}}Dn}{{{f{AFf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{H`}}{f{DfHl}}}{{A`{bHn}}}}0000{{{f{Jn}}{f{DfHl}}}{{A`{bHn}}}}0000{cc{}}000000{Jl{{Ch{H`}}}}{Bf{{Ch{Jn}}}}{JlH`}0{BfJn}010{cH`{{Ib{}{{Cj{H`}}}}}}{cJn{{Ib{}{{Cj{Jn}}}}}}{{{f{Bl}}}{{Ch{H`}}}}{{{f{Bl}}}{{Ch{Jn}}}}{{{f{{Kh{c}}}}}{{Ch{Jl}}}Dn}{{{f{{Kh{c}}}}}dDn}{{{f{Jn}}}d}{{{f{Fn}}}Jn}{{{f{{Kh{c}}}}}JnDn}0{{{f{{Kh{c}}}}}{{Ch{f}}}Dn}0{{{f{Df{Mn{c}}}}}{{f{Df{Kh{c}}}}}Dn}{{{f{Jn}}}Mb}{{}Gd}000000{{{f{DfH`}}H`}b}{{{f{DfJn}}Jn}b}{{H`H`}H`}{{JnJn}Jn}{{{f{H`}}H`}d}{{{f{Jn}}Jn}d}{{}c{}}000000{H`}{Jn}{{{f{H`}}}d}{{{f{Jn}}}d}{{{f{{Kh{c}}}}}dDn}21{{{f{{Kh{c}}}}}MbDn}111{{{f{H`}}}{{AFj{H`}}}}{{{f{Jn}}}{{AFj{Jn}}}}{{{f{H`}}}{{AFl{H`}}}}{{{f{Jn}}}{{AFl{Jn}}}}{{}d}{{}{{f{{AG`{AFn}}}}}}{{{f{Fn}}}{{Ch{Mj}}}}{{{f{{Kh{c}}}}}{{Ch{Mj}}}Dn}{{{Kh{c}}}{{Kh{c}}}Dn}{{{Kh{c}}Ch}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}{Kh{c}}}{{AGb{c}}}Dn}4231{{{Kh{c}}}{{Mn{c}}}Dn}{H`H`}{JnJn}{{{f{{Mn{c}}}}}{{Nb{{Kh{c}}}}}Dn}{{{f{DfH`}}H`}b}{{{f{DfJn}}Jn}b}{{{f{Jn}}c}A`A@f}{{{f{DfH`}}H`d}b}{{{f{DfJn}}Jnd}b}{{{f{Df{Kh{c}}}}{Ch{Jl}}}bDn}{{{f{Df{Kh{c}}}}d}bDn}{{{f{DfJn}}d}b}{{{f{Df{Kh{c}}}}Jn}bDn}{{{f{Df{Kh{c}}}}Ch}bDn}033{{{f{Df{Kh{c}}}}Mb}bDn}{{{f{DfJn}}Mb}b}{{{Kh{c}}Mb}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{Mb}}}{{Kh{c}}}Dn}{{H`H`}H`}{{JnJn}Jn}?>10{{{Mn{c}}}{{Kh{c}}}Dn}{fc{}}0000{{{f{DfH`}}H`}b}{{{f{DfJn}}Jn}b}{c{{A`{e}}}{}{}}000000{{}{{A`{c}}}{}}000000{{{f{{Mn{c}}}}}{{Ch{{Nb{{Kh{c}}}}}}}Dn}{{{f{{Mn{c}}}}}{{Ch{{Kj{{Kh{c}}}}}}}Dn}{fAAn}000000:9{{{f{{Mn{c}}}}}{{f{{AGd{Fn}}}}}Dn}{{}c{}}000000{AFhAFh}{{{f{{Mn{c}}}}}{{Kj{{Kh{c}}}}}Dn}````{{fh}b}{{{f{{AGf{c}}}}Gd}{{Hh{{AGf{c}}{AGf{c}}}}}Cf}{e{{AGf{c}}}Cf{{Ib{}{{Cj{{f{c}}}}}}}}{e{{AGf{c}}}Cf{{Ib{}{{Cj{{Ch{{f{c}}}}}}}}}}{{AGhe}g{}{{Ib{}{{Cj{c}}}}}{}}0{{{f{K`}}}{{f{AGj}}}}{{{f{{AGf{c}}}}}{{f{AGj}}}Cf}{{{f{Df{AGf{c}}}}}{{f{DfAGj}}}Cf}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{{AGf{c}}}}Gd}dCf}{{{f{{AGf{c}}}}}{{AGf{c}}}{JfCf}}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{{AGf{c}}}}}{{f{AGh}}}Cf}{{{f{{f{K`}}}}{f{{f{K`}}}}}d}{{{f{K`}}{f{K`}}}d}{{{f{{AGf{c}}}}{f{DfHl}}}{{A`{bHn}}}{AGlCf}}{cc{}}{{{Gl{c}}}{{AGf{c}}}Cf}{{GdAGh}{{AGf{c}}}Cf}{{{f{{AGf{c}}}}Gd}{{Ch{{f{c}}}}}Cf}{{}AGh}{{{f{Id}}{f{{AGf{c}}}}{f{{AGf{c}}}}}{{AGf{c}}}Cf}{{AGh{f{Id}}}{{AGf{c}}}Cf}{{{f{Id}}{f{{AGf{c}}}}}{{AGf{c}}}Cf}0{{}Gd}{{}c{}}{{{f{{AGf{c}}}}}{}Cf}{{{f{{AGf{c}}}}Gd}dCf}{{fGd}d}1{{{f{{AGf{c}}}}}{{AH`{AGn}}}Cf}{{{f{{AGf{c}}}}}{{AH`{{f{c}}{Gf{c}}AGn}}}Cf}{{{f{{AGf{c}}}}}GdCf}0`{db}{{{f{Df{AGf{c}}}}{Ch{Id}}}bCf}{{{f{Df{AGf{c}}}}GdGd}bCf}{{fGdGd}c{}}01{{{f{{AGf{c}}}}Gd}{{Hh{{Cn{Cl}}{Cn{Cl}}}}}Cf}0{{{f{K`}}}{{Cn{K`}}}}{{{f{{AGf{c}}}}}{{Cn{Cl}}}Cf}{fc{}}{g{{A`{{AGf{c}}e}}}Cf{}{{Ib{}{{Cj{{A`{{Ch{{f{c}}}}e}}}}}}}}{g{{A`{{AGf{c}}e}}}Cf{}{{Ib{}{{Cj{{A`{{f{c}}e}}}}}}}}{{AGhg}{{A`{ie}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}{{{f{K`}}}{{f{Bl}}}}{{}{{f{Bl}}}}{{{f{{AGf{c}}}}}{{Ch{{f{Id}}}}}Cf}{{{f{{AGf{c}}}}Gd}{{f{c}}}Cf}0{{{f{{AGf{c}}}}Gd}{}Cf}{{{f{{AGf{c}}}}}{{Gf{c}}}Cf}{{{f{{AGf{c}}}}}{}Cf}{{}c{}}{{{AGf{c}}{Ch{Id}}}{{AGf{c}}}Cf}{{{f{{AGf{c}}}}{Ch{Id}}}{{Cn{Cl}}}Cf}1`{{{f{Df{AHb{c}}}}}bCf}0{{{f{Df{AHb{c}}}}{Ch{c}}}bCf}{{{f{Df{AHb{c}}}}{f{AGj}}}bCf}{{{f{Df{AHb{c}}}}c}bCf}{{{f{Df{AHb{c}}}}{f{AGj}}}{{A`{bn}}}Cf}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}{{AHb{c}}}Cf}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{AHb{c}}}{{l{{Cd{c}}}}}Cf}{cc{}}{{{f{{AHb{c}}}}DdGdGd}{{Cn{ACf}}}Cf}{{}Gd}{{}c{}}{{DdGd}{{AHb{c}}}Cf}{{{f{Df{AHb{c}}}}}AbCf}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}5````{{{f{DfAHd}}}b}{{{f{DfAHd}}{Ch{{f{AGj}}}}}b}{{{f{DfAHd}}{f{AGj}}}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{AHf}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{AHd}}DdGdGd}{{Cn{ACf}}}}{{DdGd}{{Cn{AHd}}}}{{}{{N`{Eb}}}}{{}AGh}{{}Gd}{{}c{}}{{}d}`{{{Cn{Eb}}{N`{Eb}}AGh}b}{{{f{DfAHd}}}Ab}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6````````````````````````````````````````````````{{fh}b}00{{{f{AHh}}}Aj}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{c}}}}}}Ed}}{{{f{AHn}}{f{Eb}}}AHn}{{{f{AHn}}{f{Eb}}}{{l{c}}}Dn}{{{f{{AHl{}{{AHj{c}}}}}}i{f{Df{Bh{g}}}}}b{}{}{}{{Eb{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{Eb{e}{{Ad{c}}}}Ed}}{{{f{AI`}}Fb}{{l{Fd}}}}{{{f{AI`}}{f{{Bh{Fh}}}}{f{Fj}}}{{A`{{l{Fd}}n}}}}{{{f{AIb}}}{{A`{{l{Fd}}n}}}}`{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{AId}}{f{En}}}{{A`{Abn}}}}0{{{f{AId}}{f{En}}G`}{{A`{Abn}}}}{{{f{Fb}}}Fb}{{{f{Fj}}}Fj}{{{f{AIf}}}AIf}{{f{f{Dfc}}}b{}}00{fb}00{{}Fb}{{}Fj}{Gd{{f{c}}}{}}00{Gd{{f{Dfc}}}{}}00``{c{{A`{Fb}}}ADn}{c{{A`{Fj}}}ADn}{c{{A`{AIf}}}ADn}{Gdb}00{{{f{Fb}}{f{Fb}}}d}{{{f{Fj}}{f{Fj}}}d}{{{f{AIf}}{f{AIf}}}d}{{{f{{AIh{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000{{{f{AIj}}}{{A`{Abn}}}}{{{f{AIj}}}{{A`{{Hh{Ab{Hf{Hd}}}}n}}}}`{{{f{AIl}}c}{{A`{AIln}}}{}}{{{f{AIn}}{f{{l{An}}}}}{{A`{{l{c}}n}}}Dn}`{{{f{Fb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Fj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AIf}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{Fj}}}Fb}{{{f{Fb}}}Fj}22`{{DdcGd}AJ`{}}{{DdGd}AJb}`{{{f{AJd}}Gd}{{A`{Jjn}}}}{{{f{AJd}}Gd}Jj}{{{f{{AJf{}{{Cj{c}}}}}}e}c{}{}}0{{{f{Fb}}{f{Dfc}}}bAE`}{{{f{Fj}}{f{Dfc}}}bAE`}{{{f{AIf}}{f{Dfc}}}bAE`}{{}Gd}00{{}c{}}00{{{f{AIf}}}d}{{{f{AJh}}}{{A`{{l{An}}n}}}}{{{f{AJj}}}{{A`{{l{An}}n}}}}88``{{{f{AHh}}}{{Ch{c}}}{}}{{{f{AHh}}}{{Ch{Aj}}}}{{{f{AJl}}}{{Ch{c}}}{}}2{{{f{AHh}}}{{Ch{{Hh{cc}}}}}{}}``{{{f{AIb}}}{{A`{Gdn}}}}{{}Fb}{{}Fj}{{{f{AJn}}GdGd}{{l{c}}}Dn}{{{f{{AIh{}{{Cj{c}}}}}}e}c{}{}}0``{{{f{AIj}}}{{A`{{Hf{Hd}}n}}}}{{{f{AJl}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{{f{AK`}}}Ab}0{{{f{AKb}}}AKb}{{{f{AKd}}{f{Eb}}A@b}{{A`{Abn}}}}`{{{f{AKf}}c{Ch{e}}}{{A`{AKfn}}}{{Ib{}{{Cj{Jl}}}}}{}}{{{f{AKf}}ci}{{A`{AKfn}}}{{Ib{}{{Cj{Jl}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}`{{{f{Fb}}c}A`A@f}{{{f{Fj}}c}A`A@f}{{{f{AIf}}c}A`A@f}{{{f{AKf}}{f{{l{An}}}}{Ch{c}}}{{A`{AKfn}}}{}}{{{f{AKh}}Hd}{{l{c}}}Dn}{{{f{AKj}}Hdc}{{l{e}}}{}Dn}{{{f{AKl}}GdGd}AKl}0`{{{f{AI`}}d}{{l{c}}}Dn}{{{f{AI`}}Fb}{{l{c}}}Dn}{{{f{AKn}}Bf}{{Ch{Aj}}}}{{{f{AHh}}}{{Ch{c}}}{}}{{{f{AL`}}{f{c}}}{{A`{AL`n}}}A@h}{{{f{ALb}}{f{c}}}ALbA@h}{{{f{ALd}}}{{Gl{{f{{Bh{Bf}}}}}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAn}00{{{f{AIb}}}{{A`{AIbn}}}}9{{}c{}}00{{Fbd}Fb}{{Fjd}Fj}1010{{Fjc}Fj{{Ib{}{{Cj{d}}}}}}210{FbFb}{FjFj}`{{{f{ALf}}{f{{l{An}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DnDn{{Eb{ff}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}Dn}{{{l{c}}{l{e}}gik}{{l{m}}}DnDn{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DnDn{{ALh{ChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}g}bDnDn{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bj}}}DnDn{{Af{{f{DfEl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDn{}{{Af{}{{Ad{g}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDn{ClALj}{{Af{ff}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DnDnCl{{Af{}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDn{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DnDnDn{{ALl{ChChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDnClALn{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{I`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DnDnClALn{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DnDnALn{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DnDnDn{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{ClALj}ALn{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dn{}{{I`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dn{{AM`{Ch}}}Dn}{{{f{{l{c}}}}e}{{l{g}}}DnAM`Dn}{{{f{{l{c}}}}g}{{l{i}}}DnCl{{Af{f}{{Ad{e}}}}}{{Dn{}{{I`{e}}}}}}{{{l{c}}g}{{l{i}}}DnCl{{Af{}{{Ad{e}}}}}{{Dn{}{{I`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dn{ClALj}{{Af{f}{{Ad{e}}}}}{{Dn{}{{I`{e}}}}}}0{{{f{{l{c}}}}}GdAl}0{{MbMb}Mb}{{{f{{l{Fd}}}}Jl}{{A`{bn}}}}{{{f{{AMb{Jl}}}}Jl}{{A`{bn}}}}{{{f{{Bh{Fh}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{AMdn}}}}{{{f{{Bh{Fh}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{Kb{Hd}}n}}}}{{Dd{f{{Bh{Fh}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{l{Ff}}n}}}}{{Dd{f{{Bh{Ab}}}}}{{A`{{l{Ff}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bh{Ab}}}}}{{A`{AMdn}}}}{{{f{{Bh{Ab}}}}}{{A`{{l{Ff}}n}}}}00````{{fh}b}{{{f{{l{c}}}}eAMfd}{{Gl{Jl}}}Dn{{D`{}{{Cj{Ch}}}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{AMf}}}AMf}{{f{f{Dfc}}}b{}}{fb}{{}AMf}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{c{{A`{AMf}}}ADn}{Gdb}{{{f{AMf}}{f{AMf}}}d}{{f{f{c}}}d{}}00{{{f{AMf}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{AMf}}{f{Dfc}}}bAE`}{{}Gd}{{}c{}}{{{f{{Bh{f}}}}cJle}{{Gl{Jl}}}{{D`{}{{Cj{Ch}}}}}{{Eb{fGdf}{{Ad{d}}}}}}{{{f{AMf}}c}A`A@f}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6`{{Gd{f{Df{Gl{d}}}}}b}```{{{f{AKl}}GdGd}AKl}0{{Gd{f{{Bh{Fh}}}}{f{DfFj}}}{{A`{{AMh{{l{Fd}}}}n}}}}```````````11`{AMjHd}00{{{f{Bl}}}{{A`{Ddn}}}}{{{f{Bl}}}{{A`{AMln}}}}{{{f{AMn}}}Hd}{{{f{Bl}}}{{A`{bn}}}}444```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000000000{{{f{AN`}}}d}{{{f{Jj}}}{{`{{D`{}{{Cj{Jj}}}}}}}}{{{f{Jj}}{f{Df{Gl{Jj}}}}}b}{{AN`d}AN`}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{Jj}}{f{Jj}}}Jj}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Bj}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfANb}}{Ch{{f{Bl}}}}}b}{{{f{DfAN`}}{f{AN`}}}{{A`{bn}}}}{{{f{DfANb}}}b}{{{f{DfANb}}{f{Bl}}}b}{{{f{AN`}}Fb}{{l{Fd}}}}{eANd{}{{Ib{}{{Cj{c}}}}}}0{{AGhe}ANf{}{{Ib{}{{Cj{c}}}}}}0{{{f{En}}}{{Ch{{f{En}}}}}}{{{f{Jj}}}Jj}{{{f{{L`{KnKl}}}}}{{`{Jh}}}}{{{f{{L`{LfLb}}}}}{{`{Jh}}}}{{{f{Dd}}}{{f{Bl}}}}{{{f{Dd}}}{{f{ANh}}}}{{{f{Dd}}}{{f{{Bh{Bf}}}}}}{{{f{Dd}}}{{f{ANj}}}}{{{f{En}}}{{f{En}}}}{{{f{Oj}}}{{f{En}}}}{{{f{ANl}}}{{f{En}}}}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}}{{Ch{{f{{Bh{c}}}}}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}7{{{f{{L`{LnLb}}}}}{{`{Jh}}}}{f{{f{c}}}{}}9000000000000000000000000000000000000000000000{{{f{Df}}}{{f{Dfc}}}{}}000000000000000000000000000000000000000000000{En{{Cn{En}}}}{{{AOh{Bl}}}AOj}{{{f{AN`}}{f{AN`}}c}{{A`{AN`n}}}AOl}{{{f{AOn}}{f{En}}}{{A`{Abn}}}}{{{f{Jj}}{f{En}}}Jj}{{{f{En}}En}En}{{{f{{L`{LlLb}}}}Ld}{{L`{LlLb}}}}{{{f{{L`{LfLb}}}}Ld}{{L`{LfLb}}}}{{{f{AOn}}{f{En}}G`}{{A`{Abn}}}}{{{f{{L`{KnKl}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{L`{LfLb}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{L`{LlLb}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{L`{LjLh}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{{L`{LnLb}}}}{f{En}}G`}{{A`{Abn}}}}{{{f{AN`}}{f{En}}G`}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Ej}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Eh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{Dd}}}Dd}{{{f{{L`{ce}}}}}{{L`{ce}}}DnDn}{{{f{B@`}}}B@`}{{{f{AOj}}}AOj}{{{f{AN`}}}AN`}{{{f{B@b}}}B@b}{{{f{Jj}}}Jj}{{{f{B@d}}}B@d}{{{f{En}}}En}{{{f{B@f}}}B@f}{{{f{Oj}}}Oj}{{{f{Ld}}}Ld}{{{f{Nd}}}Nd}{{{f{Nf}}}Nf}{{{f{Fd}}}Fd}{{{f{Nl}}}Nl}{{{f{Of}}}Of}{{{f{O`}}}O`}{{{f{Kl}}}Kl}{{{f{Lb}}}Lb}{{{f{Ej}}}Ej}{{{f{Eh}}}Eh}{{{f{Kn}}}Kn}{{{f{Ln}}}Ln}{{{f{Bj}}}Bj}{{{f{Bd}}}Bd}{{{f{Ff}}}Ff}{{{f{An}}}An}{{{f{Lj}}}Lj}{{{f{Lf}}}Lf}{{{f{Ll}}}Ll}{{{f{B@h}}}B@h}{{{f{B@j}}}B@j}{{{f{B@l}}}B@l}{{{f{AGh}}}AGh}{{{f{B@n}}}B@n}{{f{f{Dfc}}}b{}}00000000000000000000000000000000000{fb}00000000000000000000000000000000000{{{f{Dd}}{f{Dd}}}BA`}{{{f{B@j}}{f{B@j}}}BA`}{{{f{DfOj}}En}b}{BAbe{}{{ANd{c}}ALj}}0{{BAbAGh}e{}{{ANf{c}}ALj}}0{{f{f{c}}}BA`{}}0{{{f{En}}}d}00{{{AOh{Bl}}}En}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{}Dd}{{}BAd}{{}B@`}{{}AOj}{{}Jj}{{}B@d}{{}En}{{}AGh}{{{f{Dd}}}f}{Gd{{f{c}}}{}}00{{{f{{L`{ce}}}}}fDnDn}1111111111111111111111111111111111111111111{Gd{{f{Dfc}}}{}}000{{{f{Df{L`{ce}}}}}{{f{Df}}}DnDn}111111111111111111111111111111111111111111{c{{A`{Dd}}}ADn}{c{{A`{B@`}}}ADn}{c{{A`{Jj}}}ADn}{c{{A`{B@d}}}ADn}{c{{A`{En}}}ADn}{c{{A`{Oj}}}ADn}{c{{A`{Ld}}}ADn}{c{{A`{Ah}}}ADn}{c{{A`{B@j}}}ADn}{c{{A`{B@l}}}ADn}{c{{A`{AGh}}}ADn}{c{{A`{B@n}}}ADn}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{ANbc}AN`{{Ib{}{{Cj{{Ch{{f{Bl}}}}}}}}}}{Gdb}000000000000000000000000000000000000000000000{{{f{AOn}}}{{f{En}}}}{{{f{{L`{KnKl}}}}}{{f{En}}}}{{{f{{L`{LfLb}}}}}{{f{En}}}}{{{f{{L`{LlLb}}}}}{{f{En}}}}{{{f{{L`{LjLh}}}}}{{f{En}}}}{{{f{{L`{LnLb}}}}}{{f{En}}}}{{{f{AN`}}}{{f{En}}}}{{{f{Jj}}}En}{{{f{Oj}}}{{f{En}}}}`{fc{{BAh{BAf}}}}0`{{{f{Dd}}{f{c}}}d{{If{Bl}}A@h}}{{{f{B@`}}{f{B@`}}}d}{{{f{Jj}}{f{Jj}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{En}}{f{AGh}}}d}{{{f{En}}{f{En}}}d}{{{f{B@f}}{f{B@f}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{Ld}}{f{Ld}}}d}{{{f{B@j}}{f{B@j}}}d}{{{f{B@l}}{f{B@l}}}d}{{{f{AGh}}{f{AGh}}}d}{{{f{B@n}}{f{B@n}}}d}{{{f{Jj}}{f{Jj}}d}d}{{{f{AN`}}{f{AN`}}}}{{{f{AN`}}{f{{l{Bj}}}}}}{{{f{AN`}}{f{Bl}}}}210{{f{f{c}}}d{}}00000000000000000000000000000000{{{f{{L`{ce}}}}}OjDnDn}{{{f{AOj}}{f{Bl}}}{{Ch{Jl}}}}{{AOl{f{{l{Fd}}}}{f{{l{Fd}}}}}{{A`{{l{Fd}}n}}}}{ANbAN`}{BAd{{N`{AOj}}}}{{{f{Dd}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{B@`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AOj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{B@b}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Jj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{B@d}}{f{DfHl}}}{{A`{bHn}}}}{{{f{En}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{B@f}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Oj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Ld}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{B@j}}{f{DfHl}}}{{A`{bHn}}}}{{{f{B@l}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{AGh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{B@n}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Bl}}}Dd}{ElDd}{{{f{El}}}Dd}{cc{}}{GnDd}11{{{l{Lb}}}{{L`{LnLb}}}}{{{l{Kl}}}{{L`{KnKl}}}}333333333333{{{Ch{c}}}Jj{{BAj{Jj}}}}{dJj}{{{f{Bl}}}Jj}6{{{f{{Bh{Bf}}}}}Jj}{cJjBAl}8{JjEn}9{{{f{AGh}}}En}{BAnEn}{{{f{Jj}}}En}<<{{{f{BB`}}}Oj}{{{f{Jj}}}Oj}>{{{f{B@n}}}Ld}???????????????????????{BBbAGh}{BBdAGh}{cc{}}0{{{f{AGh}}d}En}{{{l{Fd}}En}AN`}{{{l{Fd}}{N`{AOj}}dB@`}AN`}{{DdcLd}{{L`{LlLb}}}{{Ib{}{{Cj{BBf}}}}}}{{DdcLd}{{L`{LlLb}}}{{Ib{}{{Cj{{Ch{BBf}}}}}}}}{{{l{Fd}}B@`}AN`}{cDd{{Ib{}{{Cj{{E`{Bl}}}}}}}}{cDd{{Ib{}{{Cj{Dd}}}}}}{cDd{{Ib{}{{Cj{{f{Dd}}}}}}}}{cDd{{Ib{}{{Cj{BAf}}}}}}{cDd{{Ib{}{{Cj{{f{BAf}}}}}}}}{cDd{{Ib{}{{Cj{{f{Bl}}}}}}}}{cDd{{Ib{}{{Cj{El}}}}}}{cDd{{Ib{}{{Cj{{Cn{Bl}}}}}}}}{{Ddc}{{L`{KnKl}}}{{Ib{}{{Cj{BBh}}}}}}{{Ddc}{{L`{KnKl}}}{{Ib{}{{Cj{{Ch{BBh}}}}}}}}{{DdcLd}{{L`{LfLb}}}{{Ib{}{{Cj{AMj}}}}}}{{DdcLd}{{L`{LfLb}}}{{Ib{}{{Cj{{Ch{AMj}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Ib{}{{Cj{AMn}}}}}}{{Ddc}{{L`{LnLb}}}{{Ib{}{{Cj{{Ch{AMn}}}}}}}}{{{f{Bl}}}Dd}0{ElDd}{{{f{{l{Bj}}}}{f{{AOh{Bl}}}}B@`}{{A`{AN`n}}}}{{{Gl{c}}AGh}{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{Gl{c}}AGh}{{ALj{}{{ANn{e}}{AO`{c}}{AOb{g}}}}}{AOd{AOf{e}}}Jf{{Hb{}{{Cj{e}}}}JhInJ`}}{{GdcAGh}{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{GdAGh}{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{DddGdB@`}AN`}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}Gd}{{Ch{c}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{AOj}}Jl}{{f{Bl}}}}{B@jKf}{B@l{{Ch{Kf}}}}{{{f{{L`{LfLb}}}}Gd}{{A`{Jjn}}}}{{{f{{L`{LjLh}}}}Gd}{{A`{Jjn}}}}{{{f{{L`{LlLb}}}}Gd}{{A`{Jjn}}}}{{{f{{L`{LnLb}}}}Gd}{{A`{Jjn}}}}{{{f{{L`{KnKl}}}}Gd}{{A`{Jjn}}}}{{{f{AOn}}Gd}{{A`{Jjn}}}}{{{f{AN`}}Gd}{{A`{Jjn}}}}{{{f{{L`{LfLb}}}}Gd}Jj}{{{f{{L`{LjLh}}}}Gd}Jj}{{{f{{L`{LlLb}}}}Gd}Jj}{{{f{{L`{KnKl}}}}Gd}Jj}{{{f{{L`{LnLb}}}}Gd}Jj}{{{f{AOn}}Gd}Jj}{{{f{AN`}}Gd}Jj}{{{f{AOj}}}{{f{{AOh{Bl}}}}}}{{}En}0000000000000000000000000{{{f{AOj}}Jl}{{Ch{{f{Bl}}}}}}{{B@lKf}Kf}{{B@lc}Kf{{Eb{}{{Ad{Kf}}}}}}{{{f{AN`}}}{{f{{N`{AOj}}}}}}{{{f{En}}}{{Ch{{Gl{Gd}}}}}}{{{f{Jj}}}{{Ch{{f{Bl}}}}}}{{{f{BBj}}Gd}Jj}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}Gd}{{Ch{c}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{AN`}}{f{{l{Bj}}}}}}{{{f{AN`}}{f{AN`}}}}{{{f{AN`}}{f{Bl}}}}021{{{f{Dd}}{f{Dfc}}}bAE`}{{{f{Jj}}{f{Dfc}}}bAE`}{{{f{B@d}}{f{Dfc}}}bAE`}{{{f{En}}{f{Dfc}}}bAE`}{{{f{Oj}}{f{Dfc}}}bAE`}{{{f{Ld}}{f{Dfc}}}bAE`}{{{f{B@l}}{f{Dfc}}}bAE`}{{{f{AGh}}{f{Dfc}}}bAE`}{{{f{B@n}}{f{Dfc}}}bAE`}{{{f{Jj}}{f{Dfc}}d}bAE`}{{{f{{L`{LnLb}}}}}{{l{Of}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{Jj}}}Jl}{EnEn}{{}Gd}000000000000000000000000000000000000000000000{{{f{En}}}{{Ch{{f{En}}}}}}{{{f{AGh}}}{{Ch{{f{AGh}}}}}}{{}c{}}000000000000000000000000000000000000000000000{{}Fh}01{{BBlEn}{{A`{Mjn}}}}{{{L`{KnKl}}}Ab}{{{L`{LnLb}}}Ab}{{{L`{LfLb}}}Ab}{{{L`{LlLb}}}Ab}{{{L`{LjLh}}}Ab}{AN`Ab}{JjJj}{DdEl}{{{f{En}}}d}00{{{f{Jj}}}d}111{{{f{AN`}}}d}0212{{{f{AOj}}}d}23330323{{{f{AGh}}}d}343434044434444340{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}}{{AH`{cgAGn}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{AN`}}}BBn}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}}{{Ch{c}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{En}}}{{f{En}}}}{{{f{AOj}}}Gd}{{{f{AN`}}}Gd}{DdBC`}{{{f{AN`}}{f{Bl}}}}{{{f{AN`}}{f{{l{Bj}}}}}}{{{f{AN`}}{f{AN`}}}}120{{{f{AN`}}{f{AN`}}}{{A`{{Hh{AN`AN`}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hh{{l{Ah}}{l{Ah}}}}n}}}}{{{f{En}}{f{En}}}{{A`{dn}}}}{{{f{B@d}}}{{Ch{En}}}}{{{f{En}}}{{A`{Enn}}}}{{{f{AN`}}}Mj}{{{f{En}}{f{En}}}{{A`{Enn}}}}{{{f{DfBAd}}{f{{N`{AOj}}}}}{{A`{bn}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}03{{{f{{L`{LnLb}}}}}{{l{Of}}}}1{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{AN`}}}{{A`{Gdn}}}}{{{f{AN`}}}{{f{Dd}}}}{{{f{Oj}}}{{f{Dd}}}}`{{{f{{L`{LnLb}}}}}{{l{Kl}}}}9{{}c{}}0{{DdGdB@`}ANb}{{Ddc}{{L`{KnKl}}}{{If{{Bh{{Ch{BBh}}}}}}}}{{Ddc}{{L`{LfLb}}}{{If{{Bh{AMj}}}}}}{{Ddc}{{L`{LlLb}}}{{If{{Bh{{Ch{BBf}}}}}}}}{{Ddc}{{L`{KnKl}}}{{If{{Bh{BBh}}}}}}{{Ddc}{{L`{LfLb}}}{{If{{Bh{{Ch{AMj}}}}}}}}{{Ddc}{{L`{LnLb}}}{{If{{Bh{{Ch{AMn}}}}}}}}{{Ddc}{{L`{LlLb}}}{{If{{Bh{BBf}}}}}}{{Ddc}{{L`{LnLb}}}{{If{{Bh{AMn}}}}}}{{{N`{AOj}}}BAd}{{DdEn}Oj}{KfB@j}{HdB@l}{KfB@l}{{{l{c}}}{{L`{ec}}}DnDn}{{}B@f}{{{f{DfBBn}}}Ch}{{{f{AN`}}{f{{l{Bj}}}}}}{{{f{AN`}}{f{AN`}}}}{{{f{AN`}}{f{Bl}}}}120{{{f{AN`}}}Gd}5{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}}{{L`{KnKl}}}}{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}}{{L`{LnLb}}}}{{{f{Dd}}{f{Dd}}}{{Ch{BA`}}}}{{{f{Jj}}{f{Jj}}}{{Ch{BA`}}}}{{{f{Ld}}{f{Ld}}}{{Ch{BA`}}}}{{{f{B@j}}{f{B@j}}}{{Ch{BA`}}}}{{{f{{L`{ce}}}}}{{f{{l{e}}}}}DnDn}{{{f{AN`}}}{{f{{l{Fd}}}}}}{{{f{{L`{LjLh}}}}}{{Ch{Gd}}}}{{{f{DfANb}}{f{Bl}}}{{Hh{Jld}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{L`{KnKl}}}}{f{{l{Bj}}}}{Ch{{f{AMl}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{{L`{LfLb}}}}{f{{l{Bj}}}}{Ch{{f{AMl}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{AOj}}{f{AOj}}}d}{{{f{{L`{LjLh}}}}}Gd}{{{f{{L`{LnLb}}}}}{{l{Of}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{Dd}}c}A`A@f}{{{f{{L`{ce}}}}g}A`DnAlA@f}{{{f{B@`}}c}A`A@f}{{{f{AN`}}c}A`A@f}{{{f{Jj}}c}A`A@f}{{{f{B@d}}c}A`A@f}{{{f{En}}c}A`A@f}{{{f{Oj}}c}A`A@f}{{{f{Ld}}c}A`A@f}{{{f{Ah}}c}A`A@f}{{{f{B@j}}c}A`A@f}{{{f{B@l}}c}A`A@f}{{{f{AGh}}c}A`A@f}{{{f{B@n}}c}A`A@f}{{{f{DfOj}}Dd}b}{{{f{Df{L`{LfLb}}}}Ld}b}{{{f{Df{L`{LlLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}LdDd}{{A`{bn}}}}{{{f{Df{L`{LfLb}}}}Dd}{{A`{bn}}}}{{{f{BBn}}}{{Hh{Gd{Ch{Gd}}}}}}{{{f{AN`}}d}AN`}{{{f{AN`}}Fb}AN`}{{{f{Jj}}}{{E`{Bl}}}}{{{f{{L`{LfLb}}}}{f{Bl}}}{{A`{{l{Bj}}n}}}}{{{f{{L`{KnKl}}}}{f{Bl}}}{{A`{{l{Bj}}n}}}}{{{f{{L`{LnLb}}}}{f{Bl}}}{{l{Bj}}}}{{{f{Jj}}{f{En}}}{{Ch{Jj}}}}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{L`{LfLb}}}}}Ld}{{{f{{L`{LlLb}}}}}Ld}{{{f{{L`{LfLb}}}}}{{f{{Ch{Dd}}}}}}{{{f{AN`}}B@fd}{{Cn{Cl}}}}{{{f{En}}B@f}AGh}{{{f{Oj}}B@f}BB`}{LdB@n}{{{f{En}}DdB@f}BB`}{Ld{{f{Bl}}}}{{{f{AN`}}{f{{AOh{Bl}}}}BCb}AN`}{{AGhGdd}AGh}{{{f{AN`}}}{{A`{AN`n}}}}{{{f{AN`}}}AN`}{{{f{AGh}}}{{f{AGh}}}}{fc{}}00000000000000000000000000000000000{{{f{En}}}En}{{{f{AGh}}}BCd}{{{f{{L`{LjLh}}}}Gd}{{A`{{E`{{L`{LjLh}}}}n}}}}{fEl}{{{f{{L`{LfLb}}}}{f{Bl}}}{{A`{{l{Bj}}n}}}}{{{f{{L`{KnKl}}}}{f{Bl}}}{{A`{{l{Bj}}n}}}}{{{f{{L`{LnLb}}}}{f{Bl}}}{{l{Bj}}}}3333{{{f{Jj}}{f{Jj}}}d}{{{f{{L`{KnKl}}}}{Ch{{f{AMl}}}}{f{{l{Bj}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{AMl}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{g{{A`{ANde}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGhg}{{A`{ANfe}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{BAb{{A`{eg}}}{}{{ANd{c}}ALj}{}}0{{BAbAGh}{{A`{eg}}}{}{{ANf{c}}ALj}{}}0{{{f{Jj}}}{{A`{cn}}}Mh}{c{{A`{e}}}{}{}}000000000000000000000000000000000000000000{Hd{{A`{B@j}}}}111{{}{{A`{c}}}{}}000000000000000000000000000000000000000000000{{{f{Jj}}{f{En}}}{{A`{Jjn}}}}{{{f{En}}B@f}{{A`{AGhn}}}}{f{{A`{GnBCf}}}}0000{fAAn}000000000000000000000000000000000000000000000{{{f{AGh}}}AGh}{{{f{AN`}}}{{A`{AN`n}}}}{{{f{AN`}}}d}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}Gd}cJf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{AN`}}}{{A`{AB`n}}}}1{{{f{En}}Jj}d}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}}gJf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{}c{}}000000000000000000000000000000000000000000000{Gdc{}}0{{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}{Ch{Id}}}{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{DfDd}}BAf}{{A`{bHn}}}}{{{f{DfDd}}BCh}{{A`{bHn}}}}{{{f{DfDd}}{f{Bl}}}{{A`{bHn}}}}{{{f{En}}}Jj}```````````{{{f{AN`}}{f{AN`}}c}{{A`{AN`n}}}AOl}{{AOl{f{{l{Fd}}}}{f{{l{Fd}}}}}{{A`{{l{Fd}}n}}}}{{{f{AN`}}{f{AN`}}}{{A`{{Hh{AN`AN`}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hh{{l{Ah}}{l{Ah}}}}n}}}}`````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}BCj}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{{}b}{{{f{DfBCj}}}b}{Gdb}2{cc{}}6{{}Gd}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}{{}d}4`{{{f{DfBCl}}Jl{f{AOj}}}{{A`{{f{DfBCl}}n}}}}{{{f{DfBCl}}}{{f{DfBCl}}}}{{{f{DfBCl}}{f{Bl}}}{{A`{{f{DfBCl}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}>{BClAN`}>=<{{DdGd{N`{AOj}}B@`d}BCl}<;:=``````````````````````````{f{{f{ALn}}}}{{{f{BCn}}}{{f{Bl}}}}777666`{{nBCn}n}{nn}77{{{f{BCn}}}f}8777{Gdb}00`{{{f{BD`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BCn}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{n}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}0{cBCn{{BAj{{E`{Bl}}}}}}1{BDbn}{BDdn}{BDfn}{BDhn}{BDjn}{BDln}{BDnn}{{}{{Gh{{f{Bl}}BD`}{{Ad{b}}}}}}{{}Gd}00{{}c{}}00{cnALn}{{{f{Bl}}}BCn}````{{{Gh{{f{Bl}}BD`}{{Ad{b}}}}}b}{cnBE`}{fEl}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{f{{A`{GnBCf}}}}0{fAAn}00999{{{f{n}}c}n{{ABd{{f{Bl}}}{{Ad{El}}}}}}``````````````````{{fh}b}00{{{f{DfAB`}}{Gl{Fh}}{f{{BEb{En}}}}}{{A`{bn}}}}{{{f{DfAB`}}{Gl{Ab}}{f{{BEb{En}}}}}{{A`{bn}}}}{{{f{AB`}}{f{Eb}}}{{Gl{Fh}}}}0{{{f{AB`}}{f{{l{An}}}}}{{A`{AB`n}}}}{{Gd{Gl{Fh}}}AB`}{{{f{AB`}}{f{{Bh{Dd}}}}}{{A`{AB`n}}}}0{{{f{AB`}}{f{{Bh{Dd}}}}{f{{BEb{En}}}}d}{{A`{AB`n}}}}{{{f{AB`}}HdGd}AB`}{{{f{AB`}}}AB`}{{{f{DfAB`}}}{{f{DfAB`}}}}0{{{f{DfAB`}}{f{Bl}}e}{{A`{{f{DfAB`}}n}}}BEd{{ABd{{f{Fh}}}{{Ad{c}}}}}}{{{f{DfAB`}}Gde}{{A`{{f{DfAB`}}n}}}BEd{{ABd{{f{Fh}}}{{Ad{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Df}}}{{f{Dfc}}}{}}0000{{{f{AB`}}}{{`{{D`{}{{Cj{Gd}}}}}}}}6{{{f{DfAB`}}}b}{{{f{BEf}}}BEf}{{{f{BEh}}}BEh}9{{f{f{Dfc}}}b{}}00{fb}00`{{{f{AB`}}{f{Bl}}}{{A`{{f{Fh}}n}}}}{{{f{DfAB`}}c}b{{D`{}{{Cj{Fh}}}}}}{{{f{AB`}}e}{{A`{{Gl{{f{Fh}}}}n}}}{{If{Bl}}}{{Ib{}{{Cj{c}}}}}}{{}BEh}{{}AB`}{Gd{{f{c}}}{}}0000{Gd{{f{Dfc}}}{}}0000{c{{A`{BEh}}}ADn}{c{{A`{AB`}}}ADn}{Gdb}0000{{{f{AB`}}{f{Bl}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{Bl}}}{{A`{Fhn}}}}{{{f{AB`}}e}AB`{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AB`}}{f{{BEj{DdA@n}}}}}AB`}{{{f{AB`}}{Ch{{f{{Bh{c}}}}}}}{{A`{AB`n}}}{}}{{{f{AB`}}}{{Gl{En}}}};{{{f{{BEb{BB`}}}}}AB`}{{{f{{BEb{En}}}}}AB`}{{{f{BEh}}{f{BEh}}}d}{{{f{AB`}}{f{AB`}}}d}00{{f{f{c}}}d{}}00{{{f{AB`}}}Gd}`{{{f{AB`}}e}{{A`{AB`n}}}{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AB`}}{Gl{Fh}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{AB`}}}{{A`{bn}}}}{{{f{AB`}}}{{Gl{Oj}}}}{{{f{AB`}}AIf}{{A`{AB`n}}}}{{{f{AB`}}{f{{l{An}}}}}{{A`{AB`n}}}}{{{f{BEf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BEh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AB`}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}0000{cAB`{{Ib{}{{Cj{Ab}}}}}}{cAB`{{Ib{}{{Cj{Fh}}}}}}{{{f{{Bh{BEl}}}}}{{A`{AB`n}}}}{{{f{{Bh{BEl}}}}{f{{BEb{En}}}}}{{A`{AB`n}}}}{{c{f{{BEb{En}}}}}{{A`{AB`n}}}{{D`{}{{Cj{{f{BEl}}}}}}}}{{{f{AB`}}Gd}{{Ch{{Gl{Jj}}}}}}{{{f{AB`}}{f{Bl}}}{{Ch{Gd}}}}{{{f{AB`}}}{{Gl{{f{Dd}}}}}}{{{f{AB`}}}{{Gl{Dd}}}}{{{f{AB`}}}{{Gl{{f{Bl}}}}}}{{{f{AB`}}}{{f{{Bh{Fh}}}}}}{{{f{DfAB`}}}{{f{Df{Gl{Fh}}}}}}{{{f{AB`}}Gd}{{A`{BEln}}}}{{{f{AB`}}Gd{f{DfBEl}}}{{A`{bn}}}}{{{f{AB`}}Gd{f{DfBEl}}}b}{{{f{AB`}}}{{Ch{{A`{Enn}}}}}}`{{{f{AB`}}e}{{A`{BEnn}}}{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AB`}}{Gl{Fh}}{f{BF`}}}{{A`{{Hh{Fh{Gl{Fh}}Cb}}n}}}}1{{{f{AB`}}{Gl{Fh}}dd}{{A`{BEnn}}}}{{{f{BEh}}{f{Dfc}}}bAE`}{{{f{AB`}}{Ch{Gd}}}AB`}{{{f{AB`}}}Gd}{{{f{AB`}}{f{{Bh{Fh}}}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{{Bh{Fh}}}}}{{A`{{f{DfAB`}}n}}}}{{{f{DfAB`}}{f{{Bh{Fh}}}}}{{f{DfAB`}}}}{{{f{AB`}}Gd}f}{{{f{AB`}}{Nj{Gd}}}f}{{{f{AB`}}{f{Bl}}}f}{{{f{AB`}}BFb}f}{{{f{AB`}}{BFd{Gd}}}f}{{{f{AB`}}{BFf{Gd}}}f}{{{f{AB`}}{BFh{Gd}}}f}{{{f{AB`}}{BFj{Gd}}}f}{{}Gd}0000{{{f{DfAB`}}Gdc}{{A`{{f{DfAB`}}n}}}BEd}{{}c{}}000000{{AB`Dd}{{l{j}}}}{{{f{AB`}}}{{A`{{l{An}}n}}}}{{{f{AB`}}}d}1{{{f{AB`}}}{{`{Jd}}}}{{{f{AB`}}}{{`{{D`{}{{Cj{AB`}}}}}}}}{{{f{AB`}}B@fd}BFl}{{{f{AB`}}}BFn}{AB`BG`}{{{f{AB`}}}Gd}5{{{f{AB`}}}{{A`{{Ch{Fh}}n}}}}{{{f{AB`}}BEf}{{A`{{Ch{Ab}}n}}}}122{{{Gl{Fh}}}{{A`{AB`n}}}}{{Gd{Gl{Fh}}}AB`}{{{Gl{Fh}}}AB`}22{{{Gl{Fh}}Gd}{{A`{AB`n}}}}0{{{f{DfBFl}}}Ch}{{{f{DfBFn}}}Ch}{{{f{AB`}}}AB`}{{{f{AB`}}}{{`{{Ol{}{{Cj{{f{Ab}}}}}}}}}}{{{f{AB`}}ed}{{A`{{Gl{AB`}}n}}}{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}}0{{AB`e}{{A`{cn}}}{}{{Eb{AB`}{{Ad{{A`{cn}}}}}}}}{{{f{DfAB`}}e}{{A`{cn}}}{}{{Eb{{f{DfAB`}}}{{Ad{{A`{cn}}}}}}}}{{AB`gc}{{A`{en}}}{}{}{{Eb{AB`c}{{Ad{{A`{en}}}}}}}}{{{f{DfAB`}}}{{Ch{Fh}}}}{{{f{AB`}}{f{AB`}}}d}{{{f{DfAB`}}{f{Bl}}Dd}{{A`{{f{DfAB`}}n}}}}{{{f{DfAB`}}{f{Bl}}c}{{A`{{f{DfAB`}}n}}}BGb}{{{f{DfAB`}}Gdc}{{A`{{f{DfAB`}}n}}}BEd}{{{f{DfAB`}}Ddc}{{A`{{f{DfAB`}}n}}}BGb};{{{f{AB`}}{Gl{Fh}}{f{BGd}}}{{A`{{Hh{Fh{Gl{Fh}}Cb}}n}}}}`{{{f{AB`}}{f{Ab}}dd{Ch{Kf}}}{{A`{AB`n}}}}0{{{f{AB`}}Gddd{Ch{Kf}}}{{A`{AB`n}}}}{{{f{AB`}}}{{BEb{En}}}}{{{f{AB`}}{f{AB`}}}{{A`{bn}}}}{{{f{AB`}}e}{{A`{AB`n}}}{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AB`}}Gd}{{Ch{{f{Fh}}}}}}{{{f{AB`}}c}{{A`{AB`n}}}{{BGf{Gd}}}}{{{f{AB`}}c}{{A`{{Gl{Fh}}n}}}{{BGh{Dd}}}}3{{{f{AB`}}e{f{{N`{{BEb{En}}}}}}}{{A`{AB`n}}}{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AB`}}e{f{{BEb{En}}}}}{{A`{AB`n}}}{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{BEh}}c}A`A@f}{{{f{AB`}}c}A`A@f}{{{f{DfAB`}}e}{{A`{bn}}}{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{DfAB`}}Gd}b}{{{f{AB`}}}{{Hh{GdGd}}}}{{{f{AB`}}Hd}AB`}{{{f{AB`}}}d}{{{f{DfAB`}}}b}{{{f{AB`}}}Gd}{{{f{BFl}}}{{Hh{Gd{Ch{Gd}}}}}}{{{f{BFn}}}{{Hh{Gd{Ch{Gd}}}}}}{{{f{AB`}}HdGd}AB`}00{{{f{AB`}}cFj}{{A`{AB`n}}}{{BGh{Dd}}}}{{{f{DfAB`}}cFj}{{A`{{f{DfAB`}}n}}}{{BGh{Dd}}}}{{{f{AB`}}Hd}{{Hh{AB`AB`}}}}0{{{f{DfAB`}}}{{`{{D`{}{{Cj{AB`}}}}}}}}{{AB`Gdd}{{Gl{AB`}}}}{{{f{AB`}}BEf}{{A`{{Ch{Ab}}n}}}}{{{f{AB`}}{Ch{Gd}}}AB`}{{{f{AB`}}{f{{l{Fd}}}}}{{A`{AB`n}}}}{AB`{{Gl{Fh}}}}{{{f{AB`}}{f{{l{Fd}}}}}AB`}{{{f{AB`}}{f{{l{Fd}}}}d}AB`}{{{f{AB`}}}{{f{AB`}}}}{{{f{AB`}}BGj}{{A`{{AAh{AAb{AAf{{AAd{Gd}}}}}}n}}}}{fc{}}00{fEl}{{{f{DfAB`}}{Ch{{f{Bl}}}}{Ch{{AAl{El{Gl{El}}}}}}}{{A`{AB`n}}}}{{{f{DfAB`}}{Ch{{f{Bl}}}}{Ch{{AAl{Dd{Gl{Dd}}}}}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{Bl}}e}{{A`{{f{DfAB`}}n}}}BEd{{ABd{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DfAB`}}Gde}{{A`{{f{DfAB`}}n}}}BEd{{ABd{{f{Fh}}}{{Ad{{A`{cn}}}}}}}}{c{{A`{e}}}{}{}}000{BGl{{A`{AB`n}}}}{{{Hh{{BGn{{Cn{Cl}}}}{f{{BEb{BB`}}}}}}}{{A`{AB`n}}}}2{{c{f{{BEb{En}}}}}{{A`{AB`n}}}{{D`{}{{Cj{{A`{{f{BEl}}n}}}}}}}}{{{f{AB`}}{f{Bl}}}{{A`{Gdn}}}}{{}{{A`{c}}}{}}0000{f{{A`{GnBCf}}}}{fAAn}0000{{{f{AB`}}{Ch{{f{{Bh{El}}}}}}BEh{Ch{{Hh{HdGd}}}}}{{A`{AB`n}}}}{{{f{AB`}}d{Ch{{Gl{Dd}}}}BEh{Ch{{Hh{HdGd}}}}}{{A`{AB`n}}}}1{{{f{AB`}}c}{{A`{AB`n}}}{{BGh{Dd}}}}{{{f{AB`}}c{f{Bl}}BH`}{{A`{AB`n}}}{{BGh{Dd}}}}0{{{f{AB`}}{f{AB`}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{AB`}}}{{A`{{f{DfAB`}}n}}}}{{{f{DfAB`}}{f{AB`}}}b}{{}c{}}0000{{{f{AB`}}}Gd}{{{f{DfAB`}}c}{{A`{{f{DfAB`}}n}}}BEd}{{{f{DfAB`}}c{f{{BEb{En}}}}}{{A`{{f{DfAB`}}n}}}BEd}{{{f{DfAB`}}Fh}{{f{DfAB`}}}}{{{f{AB`}}Dd{Ch{Jl}}}{{A`{AB`n}}}}{{{f{DfAB`}}Dd{Ch{Jl}}}{{f{DfAB`}}}}`````{{fh}b}0{{FhFh}}{{{f{Fh}}{f{Fh}}}}{{{f{Fh}}c}{}{B`Mh}}{{Fhc}{}{B`Mh}}{{{f{Fh}}{f{Cb}}}Fh}0000000{{{f{Fh}}{f{Cb}}AjA@`}Fh}1{{{f{Fh}}{f{Cb}}Bf}Fh}{{{f{DfFh}}{f{Fh}}}{{A`{{f{DfFh}}n}}}}{{{f{Fh}}c}Fh{{Eb{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{Fh}}Fb}{{l{Fd}}}}{{{f{Fh}}}{{A`{{f{{l{C`}}}}n}}}}{{{f{BHb}}}{{f{Ab}}}}{{{f{Fh}}}{{f{Ab}}}}{{{f{Fh}}}{{Ch{{f{BHb}}}}}}{{{f{Fh}}}{{Ch{{f{Ab}}}}}}{{{f{BHb}}}Ab}{{{f{Fh}}}{{A`{{f{{l{Bd}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{Fh}}}{{Ch{BHd}}}}{{{f{Fh}}{f{Fh}}}}{{FhFh}}{{{f{Fh}}{f{Fh}}}{{A`{Fhn}}}}1221{{{f{Fh}}}{{A`{{f{{l{An}}}}n}}}}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{BHb}}{f{En}}}{{A`{BHbn}}}}{{{f{Fh}}{f{En}}}{{A`{Fhn}}}}10{{{f{BHb}}{f{En}}G`}{{A`{BHbn}}}}{{{f{Fh}}{f{En}}G`}{{A`{Fhn}}}}{{{f{Fh}}}{{A`{{f{AN`}}n}}}}{{{f{Fh}}}Fh}{{{f{BHb}}}BHb}1{{f{f{Dfc}}}b{}}0{fb}0{{{f{Fh}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Fh}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Fh}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Fh}{Gd{{f{c}}}{}}0{Gd{{f{Dfc}}}{}}0{c{{A`{Fh}}}ADn}{{FhFh}}{{{f{Fh}}c}{}{B`Mh}}{{{f{Fh}}{f{Fh}}}}{{Fhc}{}{B`Mh}}{{{f{Fh}}{f{Fh}}}{{A`{Fhn}}}}{Gdb}0{{{f{Fh}}}Fh}{{{f{BHb}}}{{f{En}}}}{{{f{Fh}}}{{f{En}}}}{{{f{Fh}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Fh}}{f{Fh}}}d}{{{f{Fh}}{f{Fh}}}{{A`{{l{An}}n}}}}011{{{f{Fh}}}{{A`{Fhn}}}}{{{f{DfFh}}{f{Fh}}}{{A`{{f{DfFh}}n}}}}{{{f{Fh}}JjGd}{{A`{Fhn}}}}{{{f{Fh}}}{{A`{{f{{l{Ej}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Fh}}}{{E`{Oj}}}}{{{f{Fh}}AIf}{{A`{Fhn}}}}{{{f{Fh}}{f{{l{An}}}}}{{A`{Fhn}}}}{{{f{BHb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Fh}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}0{AbFh}{BHbFh}{{AbGd}BHb}{{DdGd{f{En}}}Fh}{{{f{Fh}}GdGd}Fh}{{{f{Fh}}Gd}{{A`{Jjn}}}}{{{f{Fh}}}Gd}{{{f{Fh}}}Jn}{{{f{Fh}}}{{Ch{{Cn{Fn}}}}}}{{{f{Fh}}Gd}{{Ch{{f{K`}}}}}}{{{f{Fh}}Gd}Jj}{{{f{Fh}}{f{Fh}}}{{A`{{l{An}}n}}}}0{{{f{BHb}}}d}{{{f{Fh}}}d}{{{f{Fh}}{Ch{Gd}}}Fh}{{{f{Fh}}}{{A`{{f{{l{O`}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Of}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Fd}}}}n}}}}{{}Gd}0{{}c{}}0{BEdFh}{BHbFh}{FhFh}{FhAB`}{{{f{DfFh}}}{{f{DfAb}}}}>={{{f{Fh}}}{{A`{{l{An}}n}}}}000{{{f{Fh}}}{{l{An}}}}0{{{f{Fh}}}Mb}{{{f{BHb}}}{{Ch{{f{Ab}}}}}}{{{f{BHb}}}Gd}{{{f{Fh}}}Gd}{{{f{Fh}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Fh}}{f{Fh}}}{{A`{{l{An}}n}}}}0{{{f{Fh}}}{{A`{Mjn}}}}0{{{f{Fh}}{f{Fh}}}}{{Fhc}{}{B`Mh}}{{{f{Fh}}c}{}{B`Mh}}{{FhFh}}{{{f{BHb}}}{{f{Dd}}}}{{{f{Fh}}}{{f{Dd}}}}{{DdMjGd}BHb}{{Ddc}Fh{}}{{DdEn}BHb}{{Dd{f{En}}}Fh}{{{f{Fh}}GdGd}Fh}{{DdMjGd}Fh}==?{{{f{Fh}}}{{Cn{Jd}}}}={{{f{Fh}}}Fh}=:<;{{{f{DfBHb}}Dd}{{f{DfBHb}}}}{{{f{DfFh}}Dd}b}{{{f{Fh}}{f{{Bh{B@l}}}}}{{A`{Fhn}}}}0{{{f{BHb}}Gd}BHb}4{{{f{Fh}}Ajdd{Ch{Kf}}}{{A`{Fhn}}}}{{{f{Fh}}Gddd{Ch{Kf}}}{{A`{Fhn}}}}{{{f{BHb}}}{{f{Mj}}}}{{{f{Fh}}c}A`A@f}{{{f{DfFh}}Mb}b}{{{f{Fh}}Hd}Fh}{{{f{DfFh}}}b}{{{f{Fh}}{Ch{Kf}}}Fh}{{{f{Fh}}HdGd}Fh}{{{f{Fh}}Fb}{{A`{Fhn}}}}{{{f{Fh}}Hd}{{Hh{FhFh}}}}{{{f{Fh}}}{{A`{{f{{l{Bj}}}}n}}}}{{{f{BHb}}{f{En}}}{{A`{BHbn}}}}{{{f{Fh}}{f{En}}}{{A`{Fhn}}}}{{{f{Fh}}}{{A`{{f{{l{j}}}}n}}}}{{Fhc}{}{B`Mh}}{{FhFh}}{{{f{Fh}}{f{Fh}}}}{{{f{Fh}}c}{}{B`Mh}}{{{f{Fh}}{Ch{Gd}}}Fh}{{{f{Fh}}{f{{l{Fd}}}}}{{A`{Fhn}}}}{BHbAb}{FhAb}{{{f{Fh}}{f{{Bh{Jl}}}}}{{A`{Fhn}}}}{{{f{Fh}}{f{{Bh{Jl}}}}}Fh}{{{f{Fh}}{f{{l{Fd}}}}}Fh}{fc{}}0{{{f{Fh}}}Fh}{{{f{BHb}}}Ab}{{{f{Fh}}c}{{A`{Fhn}}}{{Eb{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{C`}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Bd}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Ff}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{An}}}}}}}}{{{f{Fh}}}{{Ch{{f{AN`}}}}}}{{{f{Fh}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Fh}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Fh}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Fh}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Ej}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Eh}}}}}}}}{c{{A`{e}}}{}{}}0{{{f{Fh}}}{{Ch{{f{{l{O`}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Of}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Fd}}}}}}}}{{}{{A`{c}}}{}}0{{{f{Fh}}}{{Ch{{f{{l{Ah}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Bj}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{j}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Nf}}}}}}}}5{{{f{Fh}}}{{Ch{{f{{l{Nl}}}}}}}}{{{f{Fh}}}{{Ch{{f{{l{Nd}}}}}}}}{fAAn}0{{{f{Fh}}}{{A`{{f{{l{Nf}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Fd}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Nl}}}}n}}}}{{{f{Fh}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Fh}}}{{A`{Fhn}}}}0{AbBHb}{{{f{Fh}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{Fh}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{FhDd}Fh}{{{f{Fh}}c}Fh{B`Mh}}{{{f{Fh}}{f{{l{An}}}}{f{Fh}}}{{A`{Fhn}}}}0`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{BHf}}}BHf}{{f{f{Dfc}}}b{}}{fb}{{}BHf}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{c{{A`{BHf}}}ADn}{Gdb}{{{f{BHf}}{f{BHf}}}d}{{f{f{c}}}d{}}00{{{f{BHf}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{BHf}}{f{Dfc}}}bAE`}`{{}Gd}{{}c{}}`{{{f{BHf}}c}A`A@f}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}``5````````````````````````````````{{fh}b}000{{{f{BEn}}}{{A`{AB`n}}}}`{{{f{BHh}}}{{f{{Bh{{BHj{Jl}}}}}}}}{{{f{BEn}}c}{{A`{AB`n}}}{{Af{AB`}{{Ad{{A`{AB`n}}}}}}InJ`}}{{{f{Cb}}}{{l{Ah}}}}{f{{f{c}}}{}}0000000{{{f{Df}}}{{f{Dfc}}}{}}0000000{{{f{BHh}}}BHh}{{{f{Cb}}}Cb}{{{f{BEn}}}BEn}{{{f{BHl}}}BHl}{{f{f{Dfc}}}b{}}000{fb}000;{{}BHh}{{}Cb}{Gd{{f{c}}}{}}000{{{f{BHn}}}f}1111{Gd{{f{Dfc}}}{}}0000000`{{BI`c}{}BIb}{Gdb}000{{{f{DfBHh}}}b}1111{{{f{BHh}}{f{BHh}}}d}{{{f{Cb}}{f{Cb}}}d}{{f{f{c}}}d{}}00000`{{{f{BId}}}Jl}{{{f{BHh}}}{{f{{Bh{Jl}}}}}}{{{f{BEn}}}{{A`{AB`n}}}}{{{f{DfBHh}}}{{f{Df{Gl{Jl}}}}}}{{{f{BHh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Cb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BEn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BHl}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{Bl}}BHl}Dd}{cc{}}000{{{Gl{{Hh{Jl{BHj{Jl}}}}}}}BHh}1{{{Gl{{Gl{{Hh{Jl{BHj{Jl}}}}}}}}}BHh}{BHhCb}33{BIfBHl}4{cBHh{{Ib{}{{Cj{{Hh{Jl{BHj{Jl}}}}}}}}}}{cBHh{{Il{}{{Cj{{Hh{Jl{BHj{Jl}}}}}}}}}}{{{f{Cb}}Gd}BId}{{{f{BEn}}}{{f{Cb}}}}{{{f{DfBEn}}}{{f{DfCb}}}}{{{f{Cb}}}{{l{Fd}}}}{{{f{BIh}}dd}{{A`{Cbn}}}}{{{f{BEn}}}{{A`{AB`n}}}}{{{f{DfCb}}}{{f{DfBHh}}}}{{}Gd}0000000{{}c{}}0000000{CbBHh}1{{{f{BHh}}}}{BHh}310{{{f{BId}}}d}{{{f{Cb}}}d}{{{f{BHh}}}d}{{{f{BHh}}}{{BIl{{BIj{{Gf{Jl}}}}{Gf{{BHj{Jl}}}}}}}}{{{f{Cb}}}BIn}{{{f{BEn}}}{{Gl{Fh}}}}{{{f{BEn}}{Ch{{Hh{HdGd}}}}}{{Gl{Fh}}}}={{{f{BId}}}Gd}{{{f{Cb}}}Gd}?????{{{Gl{Jl}}{Gl{{BHj{Jl}}}}d}BHh}{{{f{AB`}}{Gl{Fh}}Cb{Ch{{Gl{Dd}}}}}BEn}{{{f{DfBIn}}}Ch}{{{f{DfBIn}}Gd}Ch}{{{f{BEn}}c}{{A`{AB`n}}}{{Eb{AB`}{{Ad{{A`{AB`n}}}}}}InJ`}}{f}{{{f{Cb}}}BI`}{{{f{BEn}}AjA@`}{{A`{AB`n}}}}{{BEne}BEn{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{Cb}}HdGd}BHn}{{{f{DfBHh}}}b}{{{f{DfCb}}}b}{{{f{BEn}}Bf}{{A`{AB`n}}}}{{{f{BEn}}}{{A`{AB`n}}}}{Cb{{Gl{Jl}}}}0{BEnCb}{{{f{DfBEn}}}Cb}{fc{}}000{fEl}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{f{{A`{GnBCf}}}}{fAAn}0000000{CbCb}{{{f{Cb}}}{{f{BHh}}}}{{{f{Cb}}}{{f{{Gl{{AAd{Jl}}}}}}}}={{}c{}}0000000`````{{{f{BHh}}c}Ab{{Eb{{Hh{Jl{f{{BHj{Jl}}}}}}}{{Ad{Ch}}}}InJ`}}{{{f{BHh}}c}Ab{{Eb{{Hh{Jl{f{{BHj{Jl}}}}}}}{{Ad{}}}}InJ`}}{{{f{{Bh{{AAd{Jl}}}}}}c}Ab{{Eb{{AAd{Jl}}}{{Ad{Ch}}}}InJ`}}{{{f{{Bh{{AAd{Jl}}}}}}c}Ab{{Eb{{AAd{Jl}}}{{Ad{}}}}InJ`}}{{{f{{Bh{c}}}}e{Ch{BJ`}}}{{AMb{c}}}{BJbBJd}{{D`{}{{Cj{{Hh{JlJl}}}}}}Jh}}{{{f{{Bh{c}}}}{f{Id}}e{Ch{BJ`}}}{{AMb{c}}}{BJbBJd}{{D`{}{{Cj{{Hh{JlJl}}}}}}Jh}}{{{f{{l{c}}}}JlJl}{{l{c}}}Dn}{{{f{{Gl{{AAd{Jl}}}}}}{f{{Bh{{Cn{Cl}}}}}}}d}{{{f{BJf}}{f{Cb}}}Ab}{{BJhBJh}BJh}0`{{{f{BJj}}{f{AB`}}{f{Cb}}}{{A`{Abn}}}}{{{f{BJj}}}{{A`{{f{Dd}}n}}}}````````````````````````````````````{{fh}b}00{{{f{DfBJl}}Jj}{{Ch{b}}}}{{{f{DfBJn}}{f{Jj}}}b}0{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{BJl}}}BJl}{{{f{BJn}}}BJn}{{{f{BEl}}}BEl}{{f{f{Dfc}}}b{}}00{fb}00{{{f{{Bh{c}}}}}En{{Ij{En}}}}{{}BEl}{Gd{{f{c}}}{}}00{Gd{{f{Dfc}}}{}}00{Gdb}00{{{f{BEl}}{f{BEl}}}d}{{f{f{c}}}d{}}00{{{f{BEl}}{f{DfHl}}}{{A`{bHn}}}}{{{Hh{{f{En}}Gd}}}BJl}{cc{}}{{{Hh{{f{En}}Gd}}}BJn}11{{gGd}{{BEb{En}}}{{BAj{Dd}}}{{BAj{En}}}{{D`{}{{Cj{{Gl{{Hh{ce}}}}}}}}}}{{}Gd}00{{}c{}}00{BJlAb}{BJnAb}{{{f{En}}Gd}BJl}{{{f{En}}Gd}BJn}{{{Gl{Jj}}}BEl}{{{f{DfBJl}}Gd}Ab}{{{f{DfBJn}}Gd}Ab}{{{f{{Bh{BEl}}}}{Ch{Gd}}}{{A`{{BEb{En}}n}}}}0{{{f{{Bh{BEl}}}}{Ch{Gd}}}{{A`{{Gl{En}}n}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAn}00==={{{f{{Bh{AB`}}}}}{{A`{AB`n}}}}{{{f{{Bh{AB`}}}}d}{{A`{AB`n}}}}```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AB`{f{{Bh{Dd}}}}{f{{Bh{Dd}}}}{Ch{Dd}}{f{AB`}}}AB`}{{BG`c}{{A`{AB`n}}}{{Eb{BK`{f{Df{BKd{BKb}}}}{f{Df{BKd{BKf}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BKh}}{f{{Bh{Jl}}}}ddd}AB`}{{{f{BKh}}{f{{Bh{Jl}}}}{Ch{{Hh{HdGd}}}}}AB`}{{{f{BKh}}{f{AB`}}{f{Ab}}{f{Ab}}BKj}{{A`{AB`n}}}}`{{{f{Bl}}{f{Bl}}}Dd}{{BKl{N`{{Bh{Dd}}}}}BC`}{{{f{BKh}}{f{Ab}}{f{Ab}}{Ch{{Hh{HdGd}}}}dd}{{A`{AB`n}}}}{{{f{BGl}}Gd}{{Hh{BGlBGl}}}}{{{f{AHh}}}Aj}{{{f{BKn}}}Aj}{{{f{BL`}}{f{{Bh{A@j}}}}Mb}AB`}0{{{f{BL`}}{f{{Bh{A@j}}}}}AB`}0{{{f{BLb}}{Ch{{Gl{{f{Bl}}}}}}{Ch{{f{Bl}}}}d}{{A`{AB`n}}}}{{BG`d}BG`}{{{BLd{c}}{Ch{{N`{BLf}}}}}{{BLd{c}}}BLh}{{{f{Ab}}}{{A`{Abn}}}}{BC`BC`}{{{BLj{}{{Ad{c}}}}{f{Ab}}}c{}}{{BC`BC`}}{{BLlBLl}}{{{f{BH`}}Hd{Ch{{f{AMl}}}}}{{A`{Hdn}}}}0{{{f{BLn}}{f{Ab}}}{{A`{Abn}}}}1{{BM`c}BG`{{If{{Bh{BC`}}}}}}6`{{BC`c}BC`{{BAj{Dd}}}}{{}BC`}{{BC`d}BC`}{{}BMb}{c{{A`{BC`n}}}{{If{{Bh{BC`}}}}}}{{{f{{N`{ce}}}}}{{f{e}}}A@hBMd}`{{BMfd}BMf}`{{{f{BMh}}}d}00`{{BC`c}BC`{{BAj{BC`}}}}{{{f{BKn}}}{{A`{Mjn}}}}{{{N`{BMh}}BMj}{{A`{BG`n}}}}{{BG`BG`cc}BG`{{BAj{BC`}}}}97{{BC`cd}BC`{{BAj{BC`}}}}{{{f{DfACf}}}b}{{{f{DfACh}}}b}{{{f{DfACf}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACh}}{Ch{c}}}b{}}{{{f{DfACf}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACh}}c}b{}}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{c}}}}}}Ed}}{{BM`c{N`{{BEb{En}}}}}BG`{{Eb{AB`}{{Ad{{A`{AB`n}}}}}}InJ`}}{{BC`c{BMn{{N`{BMl}}}}}BC`{{Eb{Fh}{{Ad{{A`{{Ch{Fh}}n}}}}}}InJ`}}{{BC`BC`c{BMn{{N`{BMl}}}}}BC`{{Eb{FhFh}{{Ad{{A`{{Ch{Fh}}n}}}}}}InJ`}}{{{f{BC`}}{f{Dfc}}f}{{A`{BN`n}}}{{Af{{f{BC`}}f}{{Ad{{A`{BN`n}}}}}}}}{{{f{AHn}}{f{Eb}}}AHn}{{{f{AHn}}{f{Eb}}}{{l{c}}}Dn}{{BC`c{f{{Bh{BC`}}}}{BMn{{N`{BMl}}}}}BC`{{Eb{{f{Df{Bh{Fh}}}}}{{Ad{{A`{{Ch{Fh}}n}}}}}}InJ`}}{{BC`BNb{f{{Bh{BC`}}}}dd}BC`}{{ce{BMn{{N`{BMl}}}}d}BC`{{Eb{{f{Df{Bh{Fh}}}}}{{Ad{{A`{{Ch{Fh}}n}}}}}}InJ`}{{If{{Bh{BC`}}}}}}{{{f{{AHl{}{{AHj{c}}}}}}i{f{Df{Bh{g}}}}}b{}{}{}{{Eb{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{Eb{e}{{Ad{c}}}}Ed}}{{BC`BC`HdEn}BC`}{BGl{{N`{Cl}}}}{{{f{BNd}}}{{Ch{Gd}}}}{BNfBC`}{BNhBC`}{BC`BC`}3210{{{f{AI`}}Fb}{{l{Fd}}}}{{BC`Fb}BC`}{{{f{BKn}}Fb}{{l{Fd}}}}{{cFj}BC`{{If{{Bh{BC`}}}}}}{{{f{AI`}}{f{{Bh{Fh}}}}{f{Fj}}}{{A`{{l{Fd}}n}}}}{{{f{AIb}}}{{A`{{l{Fd}}n}}}}6{{{f{BKn}}}{{A`{{l{Fd}}n}}}}{cBC`{{BAj{BC`}}}}{{{f{BNj}}}{{f{{Bh{Oj}}}}}}``{BC`BNf}{eANd{}{{Ib{}{{Cj{c}}}}}}{cBGl{{Ib{}{{Cj{{Ch{b}}}}}}}}{cBGl{{Ib{}{{Cj{b}}}}}}2{{AGhe}ANf{}{{Ib{}{{Cj{c}}}}}}0{{AGhc}BGl{{Ib{}{{Cj{b}}}}}}{{AGhc}BGl{{Ib{}{{Cj{{Ch{b}}}}}}}}`{{{f{Df{BNl{c}}}}}{{A`{{BEb{BB`}}n}}}BNn}{{{f{BMh}}}{{f{AGj}}}}{{{f{BKn}}}{{f{AGj}}}}{{{f{BO`}}}{{f{AGj}}}}{{{f{BGl}}}{{f{AGj}}}}{{{f{DfBKn}}}{{f{DfAGj}}}}{{{f{DfBGl}}}{{f{DfAGj}}}}{{{f{Mj}}}Jj}{{{f{BOb}}}{{f{{l{Bd}}}}}}{{{f{BOd}}{Ch{{f{Bl}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BOd}}{Ch{{f{Bl}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BOd}}{Ch{{f{Bl}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOd}}{Ch{{f{Bl}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{f{{f{ALn}}}}{{{f{{N`{c}}}}}BOf{BOhA@h}}{{{f{BOj}}}{{f{{l{Ah}}}}}}{{{f{{N`{ce}}}}}{}A@hBMd}{{{f{{N`{c}}}}}NnBOl}{{{f{BOn}}}{{f{BC`}}}}{{{f{{N`{ce}}}}}{{f{c}}}A@hBMd}{{{f{ANl}}}{{f{En}}}}{{{f{C@`}}}{{f{Ab}}}}{{{f{DfBKn}}}{{A`{Gdn}}}}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}}{{Ch{{f{{Bh{c}}}}}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{C@b}}}{{f{{l{Bj}}}}}}{{{Gl{BC`}}}BC`}{{{f{BOd}}{Ch{{f{Bl}}}}d}{{A`{{L`{LnLb}}n}}}}{{{N`{{C@d{c}}e}}}{{N`{ce}}}{}BMd}{{{N`{{Bh{{C@d{c}}}}e}}}{{N`{{Bh{c}}e}}}{}BMd}{{{f{Bl}}}BC`}{{BC`{Ch{Jl}}}BC`}{{{f{C@f}}}{{A`{{l{Bj}}n}}}}{{{f{C@f}}}{{l{Bj}}}}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMl}}}{{L`{LlLb}}}}`{{{BLd{{Cn{BLh}}}}{Ch{{N`{{BEb{En}}}}}}}{{A`{C@hn}}}}{{{C@j{c}}{f{{BEb{En}}}}}{{A`{{C@l{c}}n}}}C@n}{{{CA`{c}}{f{{BEb{En}}}}}{{A`{{CAb{c}}n}}}C@n}{{{CAd{c}}Gd}{{A`{CAfn}}}BLh}{{CAhGd}{{A`{CAfn}}}}{{{CAj{c}}{f{{BEb{En}}}}}{{A`{{CAl{c}}n}}}C@n}{{{f{Df{BLd{c}}}}}{{A`{CAnn}}}BLh}`{BC`CB`}{{BC`CBbBC`}BC`}{{BLlBLl}}{{BMbBMb}BMb}{{{f{BKn}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBMb}}BMb}b}210{{{f{BMb}}}Jl}04321{f{{f{c}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}{{f{c}}}A@hBMd}111111111111111111111111111111{{{f{Df}}}{{f{Dfc}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BG`JlcFj}BG`{{If{{Bh{BC`}}}}}}{BGl{{Cn{Cl}}}}{{{f{BKn}}}{{Ch{{Cn{Fn}}}}}}```{BG`BG`}```{{{f{CBd}}{f{Dd}}}{{A`{Ddn}}}}{{{f{{N`{e}}}}c}{}{}{{CBf{c}}A@h}}{{{f{Df}}{CBh{c}}}{}{}}{{CBj{Gl{BC`}}}{{A`{BC`n}}}}{{{f{AN`}}{f{AN`}}c}{{A`{AN`n}}}AOl}{{{f{BO`}}{f{Df{Bh{Fh}}}}}{{A`{{Ch{Fh}}n}}}}{{{f{CBl}}FhFh}{{A`{Fhn}}}}{{CBj{Gl{BC`}}}BC`}{{{f{CBn}}}b}{{BC`En}BC`}{{{f{BKn}}{f{En}}G`}{{A`{Abn}}}}{{BG`{CC`{{f{Bl}}EnA@n}}d}BG`}{{{f{AId}}{f{En}}}{{A`{Abn}}}}3{{{f{AOn}}{f{En}}}{{A`{Abn}}}}{{BG`End}BG`}2{{{f{AId}}{f{En}}G`}{{A`{Abn}}}}{{{f{AOn}}{f{En}}G`}{{A`{Abn}}}}{{BC`EnG`}BC`}`{BC`CCb}{{{f{{N`{c}}}}}{{Ch{{f{ALn}}}}}{ALnA@h}}{BC`BC`}{{{f{CCd}}}{{A`{Abn}}}}1`{{{f{CCf}}}{{A`{{l{Kl}}n}}}}{{{f{BGl}}Gd}d}{{{f{CCh}}{f{Ab}}}{{A`{Abn}}}}{{{f{BKn}}{f{Ab}}}{{A`{Abn}}}}{{{f{CCh}}c}{{A`{Abn}}}Bb}{{{f{BKn}}}{{Gj{{Gf{{Cn{Cl}}}}{Gh{{f{{Cn{Cl}}}}}{{Ad{Gd}}}}}}}}``{{{f{BKn}}}{{f{{Gl{{Cn{Cl}}}}}}}}{{{f{DfBKn}}}{{f{Df{Gl{{Cn{Cl}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BC`BC`BC`}BC`}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BC`BC`}BC`}10{{{f{CBn}}}CBn}{{{f{BG`}}}BG`}{{{f{BM`}}}BM`}{{{f{BMj}}}BMj}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{BF`}}}BF`}{{{f{BGd}}}BGd}{{{f{CDd}}}CDd}{{{f{BH`}}}BH`}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{ABb}}}ABb}{{{f{A@j}}}A@j}{{{f{BKj}}}BKj}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{BOn}}}BOn}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{BC`}}}BC`}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{CHd}}}CHd}{{{f{CHf}}}CHf}{{{f{CHh}}}CHh}{{{f{{CHj{c}}}}}{{CHj{c}}}{JfJf}}{{{f{CHl}}}CHl}{{{f{CHn}}}CHn}{{{f{CBb}}}CBb}{{{f{CI`}}}CI`}{{{f{{BMn{c}}}}}{{BMn{c}}}Jf}{{{f{CIb}}}CIb}{{{f{CId}}}CId}{{{f{CIf}}}CIf}{{{f{CIh}}}CIh}{{{f{CIj}}}CIj}{{{f{CIl}}}CIl}{{{f{CIn}}}CIn}{{{f{CJ`}}}CJ`}{{{f{CJb}}}CJb}{{{f{{N`{ce}}}}}{{N`{ce}}}A@h{BMdJf}}{{{f{CJd}}}CJd}{{{f{CJf}}}CJf}{{{f{BNb}}}BNb}{{{f{CJh}}}CJh}{{{f{CJj}}}CJj}{{{f{CJl}}}CJl}{{{f{CJn}}}CJn}{{{f{CK`}}}CK`}{{{f{CKb}}}CKb}{{{f{CKd}}}CKd}{{{f{CKf}}}CKf}{{{f{CKh}}}CKh}{{{f{BLl}}}BLl}{{{f{CBj}}}CBj}{{{f{BMb}}}BMb}{{{f{CKj}}}CKj}{{{f{A@b}}}A@b}{{{f{BGl}}}BGl}{{{f{BGj}}}BGj}{{{f{CKl}}}CKl}{{{f{CKn}}}CKn}{{{f{CL`}}}CL`}{{{f{Mj}}}Mj}{{{f{BB`}}}BB`}{{{f{A@`}}}A@`}{{{f{BJ`}}}BJ`}{{{f{CLb}}}CLb}{{{f{CLd}}}CLd}{{{f{CLf}}}CLf}{{{f{BKn}}}{{N`{BKn}}}}{{f{f{Dfc}}}b{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{c}}}}{f{CLh}}}CLh{CLjA@h}}{fb}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CLl}}}{{Ch{{f{CLn}}}}}}{{{f{CCj}}}{{Ch{{f{CLn}}}}}}{{{f{CCn}}}{{Ch{{f{CLn}}}}}}``{{{f{BH`}}{f{BH`}}}BA`}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}BA`{CM`A@h}BMd}{{{f{{Bh{BC`}}}}}BC`}{{BMfCDn}BMf}{{{f{CDn}}{f{CE`}}}d}`{{{f{{Bh{Fh}}}}}{{A`{Fhn}}}}{cBC`{{BAj{Dd}}}}{BG`{{A`{AB`n}}}}{c{{A`{{Gl{AB`}}n}}}{{Il{}{{Cj{BG`}}}}}}{BAbe{}{{ANd{c}}ALj}}0{{BAbAGh}e{}{{ANf{c}}ALj}}0{{AEbDd}{{l{c}}}Dn}{{AEd{f{{l{c}}}}}{{l{c}}}Dn}10{{AEdDdEn}{{l{c}}}Dn}0{BG`{{A`{CBnn}}}}{{{f{DfBG`}}}{{A`{{N`{{BEb{En}}}}n}}}}{eBC`{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{CJ`}}Gd}CMb}``{{{f{BLb}}{Gl{{f{Bl}}}}{Ch{{f{Bl}}}}d}{{A`{AB`n}}}}`{{f{f{c}}}BA`{}}0{BMbBMb}```{{{f{CL`}}}{{A`{{N`{{BEb{En}}}}n}}}}{{cCKn}{{A`{BG`n}}}{{If{{Bh{BG`}}}}}}{{{f{C@f}}{f{{l{Bj}}}}}{{l{Bj}}}}{{ed}{{A`{BC`n}}}{{BAj{BC`}}Jf}{{If{{Bh{c}}}}}}{{{f{CLl}}{Gl{BG`}}}{{A`{BG`n}}}}{{{f{CCj}}{Gl{BG`}}}{{A`{BG`n}}}}44{e{{A`{BC`n}}}{{BAj{BC`}}Jf}{{If{{Bh{c}}}}}}{{c{f{Bl}}d}BC`{{If{{Bh{BC`}}}}}}{{BNfc}BC`{{BAj{BC`}}}}{{{f{CMd}}{f{{Bh{Bf}}}}}{{l{An}}}}{{{f{C@f}}{f{Bl}}d}{{A`{{l{An}}n}}}}{{BNhc}BC`{{BAj{BC`}}}}{{{f{BMb}}BMb}d}{{{f{CMd}}{f{{l{Bd}}}}}{{l{An}}}}{{{f{C@f}}{f{{l{Bj}}}}dd}{{A`{{l{An}}n}}}}{{{f{C@f}}{f{Bl}}}{{A`{{l{An}}n}}}}{{{f{Cl}}{f{AGh}}}{{Cn{Cl}}}}{{{f{Ab}}Gd}{{A`{{l{Fd}}n}}}}{{{f{{N`{CMf}}}}{f{CMh}}{f{CMh}}}{{CMl{{Cn{CMj}}}}}}0{BG`BG`}{{{CMn{c}}}{{A`{Gdn}}}BLh}{BC`BC`}{{{f{C@f}}{f{Bl}}d}{{A`{{l{Fd}}n}}}}{{{f{C@f}}{f{{l{Bj}}}}d}{{A`{{l{Fd}}n}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{ANh}}Bf{Ch{Bf}}{Ch{{f{CFj}}}}Bfd}{{A`{Gdn}}}}{{{f{CN`}}{Ch{{f{CNb}}}}}{{A`{Hdn}}}}{{{f{{Bh{Bf}}}}Bf{Ch{Bf}}{Ch{{f{CFj}}}}Bfd}{{A`{Gdn}}}}3{{{AOh{Bl}}}En}{{{f{BKh}}{f{{Bh{A@j}}}}dd}AB`}{{{f{CNd}}}{{CC`{GdMbA@n}}}}`{{BG`BG`{Ch{Dd}}}BG`}{{{f{CNf}}{f{AB`}}{Ch{Dd}}{Ch{{Hh{HdGd}}}}}{{A`{AB`n}}}}{{{f{CNf}}{f{AB`}}{Ch{{Hh{HdGd}}}}d}{{A`{{Hh{AB`AB`}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BC`d}BC`}{{BC`ced}BC`{{Eb{FhFh}{{Ad{{A`{{Ch{Fh}}n}}}}}}InJ`}{{If{{Bh{BC`}}}}}}212121{{ce}BC`{{Eb{FhFh}{{Ad{{A`{{Ch{Fh}}n}}}}}}InJ`}{{If{{Bh{BC`}}}}}}32{{CNhBC`Gdd}BC`}{{{f{{N`{c}}}}}CNj{CLjA@h}}{{{f{CN`}}{Ch{{f{CNb}}}}CGnd}{{A`{AB`n}}}}```{{BC`BC`BH`CDf}BC`}`{CJhBC`}`{{BC`BC`BH`CDf{Ch{Ld}}{Ch{Dd}}}BC`}0{AMjHd}00{{{f{CNl}}}{{l{Of}}}}{{{f{CNn}}}{{l{Of}}}}{{{f{CCf}}}{{A`{{l{Of}}n}}}}`{{{f{CO`}}}{{l{Lb}}}}{{{f{BH`}}}Hd}`{{{f{BH`}}}d}```{{}b}{cbBMd}{{}BG`}{{}BMj}{{}CCl}{{}CD`}{{}BF`}{{}BGd}{{}CDj}{{}COb}{{}BKj}{{}CDn}{{}CEb}{{}CEd}{{}CEf}{{}CEh}{{}CEj}{{}CEn}{{}CFb}{{}CFd}{{}CFf}{{}CFh}{{}CGf}{{}CGh}{{}CGj}{{}BC`}{{}CGn}{{}CH`}{{}CHb}{{}CHd}{{}CHh}{{}CHn}{{}CI`}{{}{{BMn{{N`{CBl}}}}}}{{}{{BMn{{N`{COd}}}}}}{{}{{BMn{{N`{BMl}}}}}}{{}CId}{{}{{N`{{Bh{c}}}}}{}}{{}{{N`{c}}}COf}{{}{{N`{COh}}}}{{}{{N`{Bl}}}}{{}CJh}{{}CJj}{{}CJn}{{}CK`}{{}CKb}{{}CKd}{{}CKh}{{}BMb}{{}A@b}{{}BGj}{{}CKl}{{}CKn}{{}CL`}{{}BB`}{{}A@`}`{{}{{AAl{{Gl{ABb}}{Gl{A@j}}}}}}{{{f{{N`{CMf}}}}{f{CMh}}}{{CMl{{Cn{CMj}}}}}}{{{f{{N`{CMf}}}}{CMl{{Cn{COj}}}}}{{CMl{{Cn{COj}}}}}}{Gd{{f{c}}}{}}0{{{f{{AMh{c}}}}}f{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BMn{c}}}}}f{}}2222222222{{{f{{N`{ce}}}}}{{f{c}}}A@hBMd}3333333333333333333333333333333{Gd{{f{Dfc}}}{}}0{{{f{Df{AMh{c}}}}}{{f{Df}}}{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CL`}}}{{A`{Eln}}}}{{{f{BG`}}}{{A`{Eln}}}}0001{{{f{{N`{c}}}}}{{f{Bl}}}{ALnA@h}}{{{f{BB`}}c}{{A`{COln}}}{{Jd{}{{Cj{{f{COn}}}}}}}}{c{{A`{CDb}}}ADn}{c{{A`{BF`}}}ADn}{c{{A`{BGd}}}ADn}{c{{A`{BH`}}}ADn}{c{{A`{CDf}}}ADn}{c{{A`{CDh}}}ADn}{c{{A`{CDj}}}ADn}{c{{A`{BKj}}}ADn}{c{{A`{CDn}}}ADn}{c{{A`{CE`}}}ADn}{c{{A`{CEb}}}ADn}{c{{A`{CEd}}}ADn}{c{{A`{CEf}}}ADn}{c{{A`{CEh}}}ADn}{c{{A`{CEj}}}ADn}{c{{A`{CEl}}}ADn}{c{{A`{CEn}}}ADn}{c{{A`{CF`}}}ADn}{c{{A`{CFb}}}ADn}{c{{A`{CFd}}}ADn}{c{{A`{CFf}}}ADn}{c{{A`{CFh}}}ADn}{c{{A`{CFj}}}ADn}{c{{A`{CFl}}}ADn}{c{{A`{BOn}}}ADn}{c{{A`{CGf}}}ADn}{c{{A`{CGh}}}ADn}{c{{A`{CGj}}}ADn}{c{{A`{BC`}}}ADn}{c{{A`{CGl}}}ADn}{c{{A`{CH`}}}ADn}{c{{A`{CHb}}}ADn}{c{{A`{CHd}}}ADn}{c{{A`{CHf}}}ADn}{c{{A`{CHh}}}ADn}{c{{A`{{CHj{e}}}}}ADn{D@`Jf}}{c{{A`{CHl}}}ADn}{c{{A`{CHn}}}ADn}{c{{A`{CBb}}}ADn}{c{{A`{CI`}}}ADn}{c{{A`{{BMn{{N`{CL`}}}}}}}ADn}{c{{A`{{BMn{{N`{BO`}}}}}}}ADn}{c{{A`{{BMn{{N`{CBd}}}}}}}ADn}{c{{A`{{BMn{{N`{BMl}}}}}}}ADn}{c{{A`{{BMn{Ab}}}}}ADn}{c{{A`{CIb}}}ADn}{c{{A`{CId}}}ADn}{c{{A`{CIf}}}ADn}{c{{A`{CIh}}}ADn}{c{{A`{CIj}}}ADn}{c{{A`{CIl}}}ADn}{c{{A`{CIn}}}ADn}{c{{A`{CJb}}}ADn}{c{{A`{{N`{e}}}}}ADnA@h}{c{{A`{CJd}}}ADn}{c{{A`{CJf}}}ADn}{c{{A`{BNb}}}ADn}{c{{A`{CJl}}}ADn}{c{{A`{CJn}}}ADn}{c{{A`{CK`}}}ADn}{c{{A`{CKb}}}ADn}{c{{A`{CKd}}}ADn}{c{{A`{CKf}}}ADn}{c{{A`{CKh}}}ADn}{c{{A`{BLl}}}ADn}{c{{A`{CKj}}}ADn}{c{{A`{A@b}}}ADn}{c{{A`{BGj}}}ADn}{c{{A`{CKl}}}ADn}{c{{A`{CKn}}}ADn}{c{{A`{CL`}}}ADn}{c{{A`{Mj}}}ADn}{c{{A`{BB`}}}ADn}{c{{A`{A@`}}}ADn}{c{{A`{BJ`}}}ADn}{c{{A`{CLb}}}ADn}{c{{A`{CLd}}}ADn}{c{{A`{CLf}}}ADn}```{{{f{Ab}}HdD@b}{{A`{Abn}}}}{{BNhHdD@b}BC`}{{BC`HdD@b}BC`}{{BMbBMb}BMb}{{{f{CL`}}}{{A`{{`{BE`}}n}}}}``{{{BLj{}{{Ad{c}}}}{f{Ab}}}c{}}{{BC`BC`}}{{{f{BLn}}{f{Ab}}}{{A`{Abn}}}}{{BC`c}BC`{{BAj{BC`}}}}{{{N`{AGjc}}}{{A`{{N`{ec}}{N`{AGjc}}}}}BMd{AGjInJ`}}{{{f{{N`{c}}}}AAn}{{Ch{b}}}{CLjA@h}}{{{N`{AGjc}}}{{N`{ec}}}BMd{AGjInJ`}}{{{f{{N`{ce}}}}}{{D@d{ce}}}A@h{JfBMd}}{Gdb}000{{{f{DfCBn}}}b}1{{BG`e}BG`{{BAj{BLl}}}{{Ib{}{{Cj{c}}}}}}2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Df{N`{ce}}}}}bA@hBMd}333333333333333333333333333333{BC`BC`}2{{BG`{Ch{{Gl{BC`}}}}}BG`}1{{{f{BKn}}}Ab}{{{f{{N`{c}}}}CLh}b{CLjA@h}}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMl}}}{{L`{LlLb}}}}`{BC`D@f}{{{f{AOn}}}{{f{En}}}}{{{f{BKn}}}{{f{En}}}}{{{f{BGl}}}{{f{AGh}}}}{{{f{Mj}}}{{f{En}}}}{{{f{BB`}}}{{f{AGh}}}}``{{{f{En}}}BC`}{cBC`{{If{{Bh{En}}}}}}`{CJjBC`}{{}CId}{{}BMb}{{{f{{N`{c}}}}{f{D@h}}}d{CLjA@h}}{fc{{BAh{BAf}}}}0`{{{f{CMd}}{f{{Bh{Bf}}}}}{{l{An}}}}{{{f{CMd}}{f{{l{Bd}}}}}{{l{An}}}}{{BH`{f{En}}{f{Bl}}}{{A`{bn}}}}{{BH`{Ch{{f{Bl}}}}{f{Bl}}}{{A`{bn}}}}{{{f{{BEb{c}}}}{f{{BEb{c}}}}}{{A`{bn}}}{}}{{{f{D@j}}{f{Bl}}}{{A`{bn}}}}{{{f{{N`{c}}}}{f{CLh}}}b{CLjA@h}}`{{{f{CDb}}{f{CDb}}}d}{{{f{BF`}}{f{BF`}}}d}{{{f{BGd}}{f{BGd}}}d}{{{f{BH`}}{f{BH`}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{ABb}}{f{ABb}}}d}{{{f{BKj}}{f{BKj}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{BOn}}{f{BOn}}}d}{{{f{CGf}}{f{CGf}}}d}{{{f{CGh}}{f{CGh}}}d}{{{f{CGj}}{f{CGj}}}d}{{{f{BC`}}{f{BC`}}}d}{{BC`c}BC`{{BAj{BC`}}}}{{{f{CGl}}{f{CGl}}}d}{{{f{CH`}}{f{CH`}}}d}{{{f{CHb}}{f{CHb}}}d}{{{f{CHd}}{f{CHd}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{CHh}}{f{CHh}}}d}{{{f{{CHj{c}}}}{f{{CHj{c}}}}}d{D@lJf}}{{{f{CHl}}{f{CHl}}}d}{{{f{CHn}}{f{CHn}}}d}{{{f{COl}}{f{COl}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CI`}}{f{CI`}}}d}{{{f{{BMn{Ab}}}}{f{{BMn{Ab}}}}}d}{{{f{{BMn{{N`{c}}}}}}{f{{BMn{{N`{c}}}}}}}dA@h}{{{f{CIb}}{f{CIb}}}d}{{{f{CId}}{f{CId}}}d}{{{f{CIf}}{f{CIf}}}d}{{{f{CIh}}{f{CIh}}}d}{{{f{CIj}}{f{CIj}}}d}{{{f{CIl}}{f{CIl}}}d}{{{f{CIn}}{f{CIn}}}d}{{{f{CJb}}{f{CJb}}}d}{{{f{{N`{D@n}}}}{f{D@n}}}d}{{{f{{N`{Cl}}}}{f{Cl}}}d}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{D@lA@h}BMd}{{{f{CJd}}{f{CJd}}}d}{{{f{CJf}}{f{CJf}}}d}{{{f{BNb}}{f{BNb}}}d}{{{f{CJl}}{f{CJl}}}d}{{{f{CJn}}{f{CJn}}}d}{{{f{CK`}}{f{CK`}}}d}{{{f{CKb}}{f{CKb}}}d}{{{f{CKd}}{f{CKd}}}d}{{{f{CKf}}{f{CKf}}}d}{{{f{CKh}}{f{CKh}}}d}{{{f{BLl}}{f{BLl}}}d}{{{f{CKj}}{f{CKj}}}d}{{{f{A@b}}{f{A@b}}}d}{{{f{BGl}}{f{{f{Cl}}}}}d}{{{f{BGl}}{f{BGl}}}d}{{{f{BGj}}{f{BGj}}}d}{{{f{CKl}}{f{CKl}}}d}{{{f{CKn}}{f{CKn}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{BB`}}{f{BB`}}}d}{{{f{A@`}}{f{A@`}}}d}{{{f{BJ`}}{f{BJ`}}}d}{{{f{CLb}}{f{CLb}}}d}{{{f{CLd}}{f{CLd}}}d}{{{f{CLf}}{f{CLf}}}d}{{BC`c}BC`{{BAj{BC`}}}}{{{f{{AIh{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{Bl}}}El}{{DA`BC`d}BC`}{{{f{{N`{c}}}}{f{DAb}}}b{CLjA@h}}{{{f{{N`{c}}}}{f{DAb}}}d{CLjA@h}}``{{BC`c}BC`{{BGh{Dd}}}}{{BC`c}BC`{{If{{Bh{En}}}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BDf}}}DAd{}}{{{f{{N`{c}}}}{f{CLh}}}b{CLjA@h}}{{{f{{Bh{DAf}}}}d{Ch{{f{CLn}}}}}{{A`{{N`{{Bh{DAf}}}}n}}}}{{{f{{Bh{DAf}}}}d{Ch{{f{CLn}}}}d}{{A`{{Hh{{N`{{Bh{DAf}}}}Gd}}n}}}}{{{f{{Bh{c}}}}{f{{Bh{c}}}}}d{{If{ANh}}}}{{{f{BG`}}d}{{A`{Eln}}}}{{BG`e}BG`{{BAj{BLl}}Jf}{{If{{Bh{c}}}}}}{{{f{AIj}}}{{A`{Abn}}}}{BC`BC`}{{{f{AIj}}}{{A`{{Hh{Ab{Hf{Hd}}}}n}}}}`{{{f{DfBMb}}c}b{{Ib{}{{Cj{BMb}}}}}}{{BC`BC`BC`}BC`}{{{f{C@f}}{f{{l{Bj}}}}Gd}{{A`{{l{Bj}}n}}}}{A@j{{Hh{JlJl}}}}{{{f{C@f}}{f{Bl}}}{{A`{{l{Ah}}n}}}}{{{f{C@f}}{f{{l{Bj}}}}}{{A`{{l{Ah}}n}}}}{{{f{C@f}}{f{Bl}}{f{En}}}{{A`{Abn}}}}{{{f{ACf}}}d}{{{f{CBn}}}{{Ch{{A`{AB`n}}}}}}{{BG`Gd}{{A`{AB`n}}}}{{{f{CBn}}}{{A`{AB`n}}}}{{{f{ACf}}}{{f{Oj}}}}{{{f{BKn}}}{{E`{Oj}}}}{{BKlHd}BC`}{{BKl{f{Bl}}}BC`}{{BKle}BC`{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{BGl}}}{{f{{Bh{BB`}}}}}}`{{BG`c}BG`{{BAj{BC`}}}}{{BC`c}BC`{{BAj{BC`}}}}`10{{BC`AIf}BC`}{{{f{AIl}}c}{{A`{AIln}}}{}}{{{f{AIn}}{f{{l{An}}}}}{{A`{{l{c}}n}}}Dn}{{{f{BKn}}{f{{l{An}}}}}{{A`{Abn}}}}{{BG`BC`}BG`}5{{{f{C@f}}{f{Bl}}d}{{A`{{l{Fd}}n}}}}{{{f{C@f}}{f{{l{Bj}}}}dd}{{A`{{l{Fd}}n}}}}{{{f{C@f}}{f{Bl}}}{{A`{{l{Fd}}n}}}}{ACh{{l{c}}}Dn}{DAh{{A`{AB`n}}}}{{{f{DfDAj}}{f{DfAB`}}}{{A`{bn}}}}{{AOl{f{{l{Fd}}}}{f{{l{Fd}}}}}{{A`{{l{Fd}}n}}}}{BMfBG`}{CLl{{A`{BG`n}}}}{CCj{{A`{BG`n}}}}{CCn{{A`{BG`n}}}}{{{BLd{c}}}{{A`{AB`n}}}BLh}{{{f{Df{C@j{c}}}}{f{DfAB`}}}{{A`{bn}}}C@n}{{{DAl{c}}}{{A`{AB`n}}}BLh}{{{BNl{c}}}{{A`{AB`n}}}BNn}{{{f{Df{DAn{c}}}}{f{DfAB`}}}{{A`{bn}}}C@n}{{{f{Df{CA`{c}}}}{f{DfAB`}}}{{A`{bn}}}C@n}{{{f{Df{DB`{c}}}}{f{DfAB`}}}{{A`{bn}}}C@n}{{{DBb{c}}}{{A`{AB`n}}}BLh}{{{CMn{c}}}{{A`{AB`n}}}BLh}{{{CAd{c}}}{{A`{AB`n}}}BLh}{CAh{{A`{AB`n}}}}{{{f{DfACf}}}{{l{Ah}}}}{{{CAj{c}}{f{DfAB`}}}{{A`{Kfn}}}C@n}?>={{{DAl{c}}{Ch{{N`{BLf}}}}d}{{A`{AB`n}}}BLh}{{{f{CAf}}Gd}d}{{}BC`}{BG`BG`}{BNhBC`}{BC`BC`}{{{f{BKn}}}Mj}`1```{{}{{BMn{{N`{BMl}}}}}}{{{f{CCd}}}{{A`{Abn}}}}3{{BC`BC`}BC`}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Df}}}{{A`{b}}}}{{{f{Df{N`{AFn}}}}}{{A`{bBDf}}}}{{{f{BO`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CBl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CBd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BF`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BH`}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CDf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{ABb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@j}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BMh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BKj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{DBd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CE`}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CEb}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CEd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CF`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CGj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BC`}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CGl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CH`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CHb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CHd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CHf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CHh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{CHj{c}}}}{f{DfHl}}}{{A`{bHn}}}Jf}{{{f{CHl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CHn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{COl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CBb}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CI`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{BMn{c}}}}{f{DfHl}}}{{A`{bHn}}}{}}{{{f{CIb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CId}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CIl}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CIn}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CJ`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJb}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}{BE`A@h}BMd}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}{AGlA@h}BMd}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}A@hBMd}{{{f{CJd}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CJf}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{BNb}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CJh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CK`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CKb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CKd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CKf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CKh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BLl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CBj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BMb}}{f{DfHl}}}{{A`{bHn}}}}0000{{{f{CKj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@b}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CKl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CKn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Mj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BB`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BJ`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CLb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CLd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CLf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Bl}}BHl}Dd}```{{BC`ce}BC`{{Eb{FhFh}{{Ad{{A`{{Ch{Fh}}n}}}}}}InJ`}{{If{{Bh{BC`}}}}}}{{BMfd}BMf}``{{{f{Bl}}c}{{A`{BC`n}}}{{If{{Bh{BC`}}}}}}{{BC`{Ch{Jl}}}BC`}{cc{}}00000{BM`BG`}{CL`BG`}22222222222222222222222222222222{JlABb}3333333{CE`BKj}44444444444444444444{{{f{Bl}}}CFj}555555555{KdBC`}{NhBC`}{ObBC`}{OhBC`}{BOnBC`}:{NnBC`}{HdBC`}{BfBC`}{{{f{Bl}}}BC`}{dBC`}{KfBC`}{JlBC`}{AjBC`}{cc{}}0000000000{DBfCOl}1{CEhCBb}2{CJd{{BMn{{N`{BO`}}}}}}{DBh{{BMn{{N`{BO`}}}}}}{DBj{{BMn{{N`{BO`}}}}}}{DBl{{BMn{{N`{BO`}}}}}}{CIj{{BMn{{N`{BO`}}}}}}{DBn{{BMn{{N`{BO`}}}}}}{BNb{{BMn{{N`{BO`}}}}}}{CJf{{BMn{{N`{BO`}}}}}}:{CIl{{BMn{{N`{BO`}}}}}}{CIn{{BMn{{N`{BO`}}}}}}<<<<<<<<<{{{f{ANh}}}{{N`{ANh}}}}{El{{N`{Bl}}}}{DC`c{}}{{{f{Bl}}}{{N`{Bl}}}}{Gn{{N`{Bl}}}}{{{f{{Bh{c}}}}}{{N`{{Bh{c}}}}}Jf}{DAf{{N`{ANh}}}}{{{f{ANj}}}{{N`{ANj}}}}{DCb{{N`{ANj}}}}{cc{}}{{{f{COh}}}{{N`{COh}}}}{{{N`{Bl}}}{{N`{{Bh{Bf}}}}}}{c{{N`{c}}}{}}{{{E`{c}}}{{N`{c}}}{DCdA@h}}{{{AAd{c}}}{{N`{{Bh{c}}}}}{}}{{{Gl{ce}}}{{N`{{Bh{c}}e}}}{}{BMdJf}}{{{Cn{ce}}}{{N`{ce}}}A@hBMd}{DCf{{N`{COh}}}}88{DBnBNb}{CJdBNb}:{CIjBNb}{CIlBNb}<<<<<{CKdCKb}===={{{f{Bl}}}BLl}{ElBLl}{DdBLl}{BC`BLl}{cc{}}00{JjCKj}111{DChBGl}2{DCjBGl}3333{NhMj}{JlMj}{OhMj}{KdMj}{ObMj}{KfMj}{NnMj}:{HdMj}{BfMj}{AjMj}======{{{f{{BEb{BB`}}}}}DCl}{Jl{{Ch{BMb}}}}{JlBMb}00{{c{Ch{Id}}}DCn{}}{{{DD`{Hd}}{DD`{Bf}}{Ch{Id}}}DDb}{{{DD`{Hd}}{DD`{Bf}}{Ch{Id}}}DDd}{c{{AMh{{l{An}}}}}{{Ib{}{{Cj{d}}}}}}{c{{AMh{{l{e}}}}}{{Ib{}{{Cj{}}}}}Al}{e{{N`{{Bh{c}}}}}{}{{Ib{}{{Cj{c}}}}}}{cBMb{{Ib{}{{Cj{BMb}}}}}}{{gGd}{{DDf{Hd}}}If{{Ib{}{{Cj{{Ch{c}}}}}}}{{Ib{}{{Cj{{Ch{e}}}}}}}}0{e{{DDf{Hd}}}{{Ib{}{{Cj{{Ch{d}}}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADl{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{gAGh}{{DDf{Hd}}}BJd{{Ib{}{{Cj{{Ch{c}}}}}}}{{Ib{}{{Cj{{Ch{e}}}}}}}}673{{Dde}ADl{}{{D`{}{{Cj{c}}}}}}{{{f{Bl}}}{{Ch{BMb}}}}{c{{AMh{{l{e}}}}}{{Il{}{{Cj{}}}}}Al}{e{{N`{{Bh{c}}}}}In{{Il{}{{Cj{c}}}}}}`{c{{A`{{CMn{AFn}}n}}}{{BAj{DAf}}}}{{}{{N`{c}}}A@h}{c{{N`{ec}}}BMdA@h}{{Dd{f{{Bh{c}}}}}ADl{}}{{Dd{f{{Bh{{Ch{c}}}}}}}ADl{}}{{{f{Bl}}}{{A`{DDh}}}}{c{{AMh{{l{An}}}}}{{Jh{}{{Cj{d}}}}}}{c{{AMh{{l{e}}}}}{{Jh{}{{Cj{}}}}}Al}{En{{BMn{{N`{BMl}}}}}}{{{f{Bl}}{Ch{{f{CLn}}}}}{{A`{CN`n}}}}{{{f{Bl}}{Ch{{f{CLn}}}}{Ch{{N`{CJ`}}}}}{{A`{CAhn}}}}{{Ddc}DDj{}}{{{Gl{c}}AGh}{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{Gl{c}}AGh}{{ALj{}{{ANn{e}}{AO`{c}}{AOb{g}}}}}{AOd{AOf{e}}}Jf{{Hb{}{{Cj{e}}}}JhInJ`}}`{{DdcGd}AJ`{}}{{GdcAGh}{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{}CId}{{BG`BG`cc}BG`{{BAj{BC`}}}}{{{f{DDl}}{f{AB`}}ei}{{A`{AB`n}}}{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAj{Dd}}}{{Ib{}{{Cj{g}}}}}}{{DdGd}AJb}{{GdAGh}{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{GdAGh}BGl}``{{BC`c{BMn{{N`{BMl}}}}DDn}BC`{{Eb{Fh}{{Ad{{A`{{Ch{Fh}}n}}}}}}InJ`}}`{{BC`c}BC`{{BAj{BC`}}}}{{BC`GdGd}BC`}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DE`A@h}BMd}{{{f{BKn}}Gd}{{A`{Jjn}}}}{{BNfBC`d}BC`}{{BNhBC`d}BC`}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}Gd}{{Ch{c}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}6{{{f{{N`{CMf}}}}{f{CMh}}}{{CMl{{Cn{CMj}}}}}}{{{f{AJd}}Gd}{{A`{Jjn}}}}{{{f{AOn}}Gd}{{A`{Jjn}}}}{{{f{AJd}}Gd}Jj}{{{f{AOn}}Gd}Jj}{CCbBC`}{{{f{BG`}}}BMb}{{{f{CKj}}}En}{{}En}{{{f{CDl}}HdCDf{Ch{{f{AMl}}}}}{{A`{CDdn}}}}00{{{f{COd}}{f{{BEb{En}}}}DEb{f{Oj}}{f{Oj}}}{{Ch{Oj}}}}{{{f{BMl}}{f{{BEb{En}}}}DEb{f{{Bh{Oj}}}}}{{A`{Ojn}}}}{{{f{DCl}}{f{Bl}}}{{Ch{Oj}}}}{{{f{AGh}}}{{f{{Bh{BB`}}}}}}{{{f{BNj}}}Gd}{{{f{{Bh{Bf}}}}}{{Ch{Gd}}}}{{{f{Df{CAd{c}}}}}{{A`{{f{{N`{CJ`}}}}n}}}BLh}{{{f{DfCAh}}}{{A`{{f{{N`{CJ`}}}}n}}}}{{{f{BKn}}}{{Ch{{Nb{Fn}}}}}}{{{f{Df{N`{ce}}}}}{{Ch{{f{Dfc}}}}}A@hBMd}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}A@hBMd}{{{f{BKn}}Gd}{{Ch{{f{K`}}}}}}{{{f{BKn}}GdGd}{{Ch{{f{K`}}}}}}{{{f{{N`{CMf}}}}{f{CMh}}DEd}{{CMl{{Cn{CMj}}}}}}{{{f{CDl}}CDdCDfLd{Ch{{f{AMl}}}}CDj}{{A`{DEfn}}}}{{{f{CFd}}}{{N`{CFf}}}}{{{f{{N`{CMf}}}}{f{CMh}}{Nj{Gd}}}{{CMl{{Cn{CMj}}}}}}{{{f{{N`{CMf}}}}{f{CMh}}{f{{Bh{{Nj{Gd}}}}}}}{{CMl{{Cn{CMj}}}}}}{{{f{Dfc}}}{{A`{DEhn}}}{BNnBLhA@h}}{{{f{DBd}}{f{{BEb{En}}}}}{{A`{{N`{{BEb{En}}}}n}}}}{{{f{BBj}}Gd}Jj}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}Gd}{{Ch{c}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{BKn}}Gd}Jj}{{{f{CLl}}}d}{{{f{CCj}}}d}`{{BG`e}BM`{{BAj{BC`}}Jf}{{If{{Bh{c}}}}}}{{{f{DEj}}{Gl{Fh}}{f{BF`}}}{{A`{{Hh{Fh{Gl{Fh}}Cb}}n}}}}{{BG`BC`cBF`}BM`{{If{{Bh{BC`}}}}}}2{{BH`BH`{f{{Bh{Hd}}}}CDfLd{Ch{AMl}}}{{A`{{Gl{{AAd{Jl}}}}n}}}}{{CDl{f{{Bh{Hd}}}}CDfLd{f{{Ch{Dd}}}}ddCDj}{{Hh{{Gl{{AAd{Jl}}}}{Gl{Hd}}{Gl{Hd}}}}}}{{{f{BIh}}dd}{{A`{Cbn}}}}{{{f{{AJf{}{{Cj{c}}}}}}e}c{}{}}{{BC`c}BC`{{BAj{BC`}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DE`A@h}BMd}21`{{{f{BKn}}}d}{{{f{BF`}}{f{Dfc}}}bAE`}{{{f{BGd}}{f{Dfc}}}bAE`}{{{f{BH`}}{f{Dfc}}}bAE`}{{{f{CDf}}{f{Dfc}}}bAE`}{{{f{CDh}}{f{Dfc}}}bAE`}{{{f{CDj}}{f{Dfc}}}bAE`}{{{f{BKj}}{f{Dfc}}}bAE`}{{{f{CDn}}{f{Dfc}}}bAE`}{{{f{CE`}}{f{Dfc}}}bAE`}{{{f{CEb}}{f{Dfc}}}bAE`}{{{f{CEd}}{f{Dfc}}}bAE`}{{{f{CEf}}{f{Dfc}}}bAE`}{{{f{CEh}}{f{Dfc}}}bAE`}{{{f{CEj}}{f{Dfc}}}bAE`}{{{f{CEl}}{f{Dfc}}}bAE`}{{{f{CEn}}{f{Dfc}}}bAE`}{{{f{CF`}}{f{Dfc}}}bAE`}{{{f{CFb}}{f{Dfc}}}bAE`}{{{f{CFd}}{f{Dfc}}}bAE`}{{{f{CFf}}{f{Dfc}}}bAE`}{{{f{CFh}}{f{Dfc}}}bAE`}{{{f{CFj}}{f{Dfc}}}bAE`}{{{f{CFl}}{f{Dfc}}}bAE`}{{{f{BOn}}{f{Dfc}}}bAE`}{{{f{CGf}}{f{Dfc}}}bAE`}{{{f{CGh}}{f{Dfc}}}bAE`}{{{f{CGj}}{f{Dfc}}}bAE`}{{{f{BC`}}{f{Dfc}}}bAE`}{{{f{CGl}}{f{Dfc}}}bAE`}{{{f{CH`}}{f{Dfc}}}bAE`}{{{f{CHb}}{f{Dfc}}}bAE`}{{{f{CHd}}{f{Dfc}}}bAE`}{{{f{CHf}}{f{Dfc}}}bAE`}{{{f{CHh}}{f{Dfc}}}bAE`}{{{f{CHl}}{f{Dfc}}}bAE`}{{{f{CHn}}{f{Dfc}}}bAE`}{{{f{CBb}}{f{Dfc}}}bAE`}{{{f{CI`}}{f{Dfc}}}bAE`}{{{f{CIb}}{f{Dfc}}}bAE`}{{{f{CId}}{f{Dfc}}}bAE`}{{{f{CIf}}{f{Dfc}}}bAE`}{{{f{CIh}}{f{Dfc}}}bAE`}{{{f{CIj}}{f{Dfc}}}bAE`}{{{f{CIl}}{f{Dfc}}}bAE`}{{{f{CIn}}{f{Dfc}}}bAE`}{{{f{CJb}}{f{Dfc}}}bAE`}{{{f{{N`{ce}}}}{f{Dfg}}}b{DElA@h}BMdAE`}{{{f{CJd}}{f{Dfc}}}bAE`}{{{f{CJf}}{f{Dfc}}}bAE`}{{{f{BNb}}{f{Dfc}}}bAE`}{{{f{CJl}}{f{Dfc}}}bAE`}{{{f{CJn}}{f{Dfc}}}bAE`}{{{f{CK`}}{f{Dfc}}}bAE`}{{{f{CKb}}{f{Dfc}}}bAE`}{{{f{CKd}}{f{Dfc}}}bAE`}{{{f{CKf}}{f{Dfc}}}bAE`}{{{f{CKh}}{f{Dfc}}}bAE`}{{{f{BLl}}{f{Dfc}}}bAE`}{{{f{CKj}}{f{Dfc}}}bAE`}{{{f{BGj}}{f{Dfc}}}bAE`}{{{f{CKl}}{f{Dfc}}}bAE`}{{{f{CKn}}{f{Dfc}}}bAE`}{{{f{BB`}}{f{Dfc}}}bAE`}{{{f{A@`}}{f{Dfc}}}bAE`}{{{f{CLf}}{f{Dfc}}}bAE`}{{{f{DEn}}{f{Ab}}CEbd}{{A`{{Hh{{Hh{{Gl{Jl}}{Gl{Jl}}}}d}}n}}}}{{{f{DEn}}{f{Ab}}CEbd}{{A`{{Hh{{AMb{Jl}}{AMb{Jl}}}}n}}}}{{{f{DEn}}{f{Ab}}dd}{{A`{{Gl{Jl}}n}}}}{{BM`{Ch{Gd}}}BG`}{{BNhBC`}BC`}{{BC`{Ch{Gd}}}BC`}{{{f{{N`{CMf}}}}{f{CMh}}}{{CMl{{Cn{CMj}}}}}}{{{f{C@f}}}{{A`{{l{Bj}}n}}}}{{{f{C@f}}}{{l{Bj}}}}``{{{f{{Bh{{f{{l{Bj}}}}}}}}{f{Bl}}d}{{A`{{l{Bj}}n}}}}{{{f{DF`}}}{{l{Of}}}}{{{f{CNn}}}{{l{Of}}}}{{{f{CCf}}}{{A`{{l{Of}}n}}}}`{{{f{CO`}}}{{l{Lb}}}}`{{BMfCE`}BMf}`{{{f{ABb}}}Jl}`{{{f{{Bh{Fh}}}}Ld}{{A`{Fhn}}}}{{{f{{L`{LfLb}}}}{f{{l{Bj}}}}CLf{Gh{Hd}{{Ad{AMj}}}}{Gh{AMj}{{Ad{Hd}}}}{f{AMl}}{f{AMl}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bl}}}}{Gh{Hd}{{Ad{AMj}}}}{Gh{AMj}{{Ad{Hd}}}}{f{AMl}}{f{AMl}}}{{A`{{l{Lb}}n}}}}{BC`BC`}{{{f{AMj}}}d}{{{C@j{c}}d}{{C@j{c}}}C@n}````0`{{}b}{cb{JfBMd}}``{cBC`{{If{{Bh{Hd}}}}}}``{{{f{{Bh{Jl}}}}}{{`{{D`{}{{Cj{Gd}}}}}}}}{{{f{DEh}}Bf{Ch{Gd}}d{Ch{{f{{BEb{En}}}}}}GdGd{Ch{{f{CFj}}}}{Ch{Bf}}Bf{Ch{{f{CFl}}}}dd{f{Df{Ch{Gd}}}}d}{{A`{{Hh{{BEb{En}}GdGd}}n}}}}{{{DBb{c}}{Ch{{DFb{Gd}}}}}{{DBb{c}}}BLh}{{{CMn{c}}{Ch{{DFb{Gd}}}}}{{CMn{c}}}BLh}``{{}Gd}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DfACf}}}{{Cn{Cl}}}}{{BG`BG`cc}BG`{{BAj{BC`}}}}{{{f{DDl}}{f{AB`}}ei}{{A`{AB`n}}}{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAj{Dd}}}{{Ib{}{{Cj{g}}}}}}{{{f{DfA@j}}}{{f{DfKf}}}}`{{{f{DfBMb}}BMb}b}{{BC`BC`HdEn}BC`}{{BC`BC`BC`}BC`}`{{{f{Ab}}CEl}Ab}{{BC`CEl}BC`}`{{{f{Fh}}{f{Fh}}d}{{A`{Fhn}}}}{{BC`BC`}BC`}{{BMbBMb}BMb}{{{f{BMb}}BMb}d}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BEdFh}{{}Fh}{{MjDd}Fh}{BGl{{Hh{{Gl{BB`}}Gd{Gl{{Cn{Cl}}}}{Ch{Id}}}}}}{{{AMh{c}}}c{}}{{{N`{ce}}}{{Ch{c}}}{}BMd}66{{{f{BC`}}}}{BMb}{{{f{BGl}}}}{DFdBNh}{BNhBNh}{{{N`{ce}}}{}A@hBMd}{{{N`{ce}}}{{Hh{e}}}A@hBMd}{{CFdc}{{BLd{c}}}BLh}{{BBlEn}{{A`{Mjn}}}}{BGbAb}{{{N`{BKn}}}Ab}{{MjDd}Ab}{BGh{{Gl{c}}}{}}{{}{{Gl{Dd}}}}{{{f{BMb}}}d}{{{f{CBb}}}d}{{{f{CE`}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CEn}{{A`{{l{An}}n}}}}{{BC`ccCEn}BC`{{BAj{BC`}}}}{cd{{If{ANh}}}}4{{{f{BH`}}{Ch{{f{Bl}}}}}d}{{{f{CId}}}d}7{{{f{BKn}}}d}{{{f{CAf}}}d}{BC`BC`}{{{f{Ab}}}{{A`{{l{An}}n}}}}{{{f{AJh}}}{{A`{{l{An}}n}}}}25{{{f{BH`}}}d};{{{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}{{BC`c}BC`{{BAj{BC`}}}}54{{{f{AJj}}}{{A`{{l{An}}n}}}}6{{{f{CNl}}}{{l{An}}}}{{{f{CNn}}}{{l{An}}}}{{{f{CCf}}}{{A`{{l{An}}n}}}}9{{{f{Mj}}}d}::{{{f{BKn}}}{{l{An}}}};;0{{{f{A@j}}}d}<2{{{f{ABb}}}d}`{{{f{Ab}}}d}{{{f{{N`{AFn}}}}}d}{{{f{CKj}}}d}{{}d}{{{f{D@j}}Fb}{{A`{dn}}}}{fd}{{{f{c}}}d{}}{{{f{CEb}}{f{CE`}}}{{A`{bn}}}}6{{{f{BH`}}}d}{{{f{CNl}}}{{l{Kl}}}}{{{f{CNn}}}{{l{Kl}}}}{{{f{CCf}}}{{A`{{l{Kl}}n}}}}{{CAfGd}DFf}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}}{{AH`{cgAGn}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{BMb}}}{{AFj{BMb}}}}{{{f{BGl}}}{{AH`{{Gl{{Cn{D@n}}}}DFhAGn}}}}{{{f{DCl}}}{{`{Jd}}}}{{{f{BMb}}}{{AFl{BMb}}}}{{{f{{DFl{}{{DFj{c}}}}}}}{{`{Jd}}}{AGlJfCOfD@l}}{{BNfBC`d}BC`}{{BG`BG`ccBKj}BG`{{If{{Bh{BC`}}}}}}{{BNhBC`d}BC`}{{{f{DDl}}{f{AB`}}eiBKj}{{A`{AB`n}}}{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAj{Dd}}}{{Ib{}{{Cj{g}}}}}}{{{f{DFn}}{f{AB`}}{f{Bl}}{f{Bl}}eeCEf{Ch{Jj}}}{{A`{AB`n}}}{{If{Bl}}}{{Ib{}{{Cj{c}}}}}}{BG`BMf}{{{f{DG`}}{f{Bl}}d}{{A`{{l{Bj}}n}}}}{{{f{DG`}}{f{{l{Bj}}}}d}{{A`{{l{Bj}}n}}}}{{BMfd}BMf}`{{BMf{Gl{BC`}}}BG`}{BKlBC`}{DGbBC`}{{{f{CJ`}}}{{f{{Ch{{Gl{DGd}}}}}}}}``{{}BC`}{BG`BG`}{BNhBC`}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}}{{Ch{c}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{BC`BC`}{{{f{BKn}}}Mj}{DGfBG`}5{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DE`A@h}BMd}{{{f{Ab}}}{{A`{Abn}}}}0`{{BG`BG`cc}BG`{{BAj{BC`}}}}{{{f{DDl}}{f{AB`}}ei}{{A`{AB`n}}}{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}{{BAj{Dd}}}{{Ib{}{{Cj{g}}}}}}{{BMfc}BMf{{If{{Bh{BC`}}}}}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}e{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}>{{{f{BKn}}}Gd}=;{{{f{BGl}}}Gd}{{BG`Jl}BG`}{{{f{BKn}}Gd}Ab}`{BC`BNh}{{{f{{N`{CMf}}}}{Ch{{f{CMh}}}}}{{CMl{{Cn{COj}}}}}}{{{f{{N`{CMf}}}}{Ch{{f{CMh}}}}}{{CMl{{Cn{CMj}}}}}}{{{f{{N`{CMf}}}}{Ch{{f{CMh}}}}{f{CMh}}}{{CMl{{Cn{COj}}}}}}{cBC`DGh}{DGhBC`}{BH`BC`}{DGjBC`}{CKjBC`}{MjBC`}{{BC`c}BC`{{BAj{BC`}}}}0``{{CCnd}CCn}{{{CMn{c}}d}{{CMn{c}}}BLh}```{BC`BC`}{{{f{DG`}}}{{l{Fd}}}}0{{{f{DG`}}{f{{Bh{Fh}}}}}{{A`{{l{Ah}}n}}}}{{{f{DG`}}HdD@b}{{A`{{l{Ah}}n}}}}{{{f{DG`}}Hdd}{{A`{Abn}}}}{{{f{DG`}}{f{{l{Bj}}}}d}{{A`{{l{Bj}}n}}}}4{{{f{DG`}}}{{A`{Abn}}}}{{{f{DG`}}}Ab}01{{{f{DG`}}}{{A`{{l{Fd}}n}}}}{{{f{DG`}}}{{l{Ah}}}}{{{f{DG`}}{f{Fh}}}{{A`{{l{Ah}}n}}}}{{{f{DG`}}HdGd}{{l{Ah}}}}{{{f{DG`}}Fb}{{A`{{l{Ah}}n}}}}{{{f{DG`}}Bf}Ab}7{{{f{DG`}}}{{A`{{l{Ah}}n}}}}01{{{f{{AJf{}{{Cj{c}}}}}}e}c{}{}}{{BC`c}BC`{{BAj{BC`}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DE`A@h}BMd}21``````{{{f{AN`}}{f{AN`}}}{{A`{{Hh{AN`AN`}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hh{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}{DGlA@h}{BMdJf}}{{BG`cBMb{Ch{{N`{DBd}}}}{Ch{{f{Bl}}}}}BG`{{Eb{AB`}{{Ad{{A`{AB`n}}}}}}InJ`}}{{DGbc}BC`{{Eb{{f{Dd}}}{{Ad{{A`{Ddn}}}}}}InJ`}}{{BC`c{BMn{{N`{BMl}}}}}BC`{{Eb{Fh}{{Ad{{A`{{Ch{Fh}}n}}}}}}InJ`}}{{BC`BC`c{BMn{{N`{BMl}}}}}BC`{{Eb{FhFh}{{Ad{{A`{{Ch{Fh}}n}}}}}}InJ`}}{{BC`{f{Dfc}}{f{Df}}}{{A`{BC`n}}}{{Af{BC`{f{Df}}}{{Ad{{A`{BC`n}}}}}}}}{{{f{BNj}}{Ch{{f{Dd}}}}}{{A`{Ojn}}}}{{{f{BNj}}c}{{A`{Ojn}}}{{ABd{{f{En}}}{{Ad{En}}}}}}{c{{BMn{{N`{BMl}}}}}{{Eb{{f{En}}}{{Ad{{A`{Enn}}}}}}InJ`}}{c{{BMn{{N`{BMl}}}}}{{Eb{{f{{Bh{{f{En}}}}}}}{{Ad{{A`{Enn}}}}}}InJ`}}{{BC`c}BC`{{Af{BC`}{{Ad{BC`}}}}}}{c{{BMn{{N`{BMl}}}}}{{Eb{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}InJ`}}{{DGb{N`{Eb}}}BC`}{c{{BMn{{N`{BMl}}}}}{{Eb{{f{{Bh{Oj}}}}}{{Ad{{A`{Ojn}}}}}}InJ`}}:{{ce{BMn{{N`{BMl}}}}}BC`{{Eb{{f{Df{Bh{Fh}}}}}{{Ad{{A`{{Ch{Fh}}n}}}}}}InJ`}{{If{{Bh{BC`}}}}}}{{BC`c{f{{Bh{BC`}}}}{BMn{{N`{BMl}}}}}BC`{{Eb{{f{Df{Bh{Fh}}}}}{{Ad{{A`{{Ch{Fh}}n}}}}}}InJ`}}{{BC`BNb{f{{Bh{BC`}}}}d{Ch{DGn}}}BC`}2{{{f{BNj}}}{{A`{Ojn}}}}{{CFdc}CFd{{Eb{CFf}{{Ad{CFf}}}}}}{{BC`DH`d}BC`}2222{{{CHj{{BMn{{N`{BO`}}}}}}}{{A`{{BMn{{N`{BO`}}}}n}}}}{CKjCKj}{{{Ch{{f{{Bh{Gd}}}}}}{f{{BEb{BB`}}}}{Ch{{f{{Bh{Ab}}}}}}{Ch{{f{DHb}}}}}AB`}{{{Ch{{f{{Bh{Dd}}}}}}{f{{BEb{En}}}}{Ch{{f{{Bh{Ab}}}}}}d}{{Ch{{Gl{Gd}}}}}}{{{f{DCl}}}{{A`{{BEb{En}}n}}}}{{{f{Bl}}}BC`}{BNfBC`}{BG`BG`}{BNhBC`}{{{f{AHh}}}{{Ch{c}}}{}}{BC`BC`}{{{f{{N`{c}}}}}{{Ch{DHd}}}{CLjA@h}}{{{f{DHf}}}Mj}{{{f{BKn}}}{{A`{Mjn}}}}```865{{{f{AHh}}}{{Ch{Aj}}}}4{{{f{BKn}}}{{Ch{Aj}}}}:987{{{f{AJl}}}{{Ch{c}}}{}}61{{{f{DHh}}}Mj}4{{{DAl{c}}{Ch{DAf}}}{{DAl{c}}}BLh}{{{f{En}}{f{En}}}{{A`{Enn}}}}{{{f{CN`}}}{{A`{CNbn}}}}````{{{f{CO`}}}{{l{Lb}}}}`{{{f{CCf}}}{{A`{{l{Kl}}n}}}}1`{{{f{Bl}}}BC`}{BNfBC`}{BG`BG`}{BNhBC`}{{{f{AHh}}}{{Ch{c}}}{}}{BC`BC`}{{{f{AHh}}}{{Ch{{Hh{cc}}}}}{}}```{{{f{DHf}}}Mj}{{{f{BKn}}}{{A`{Mjn}}}}``{{{f{DF`}}}{{l{Of}}}}{{{f{CNn}}}{{l{Of}}}}{{{f{CCf}}}{{A`{{l{Of}}n}}}}`=```6{{{f{CNl}}}{{l{Of}}}}21`{{{f{BH`}}}Hd}{{{f{BH`}}}d}{{{BLj{}{{Ad{c}}}}{f{Ab}}}c{}}{{BH`Hd}BH`}{{BC`BC`}}{{{f{BLn}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BKn}}}Gd}{{{f{CLl}}}{{Ch{Gd}}}}{{{f{CCj}}}{{Ch{Gd}}}}{{{f{CCn}}}{{Ch{Gd}}}}`````{{{C@j{c}}Gd}{{C@j{c}}}C@n}`{BNfBC`}{BNhBC`}{{{f{AIb}}}{{A`{Gdn}}}}{BC`BC`}{{{f{BKn}}}{{A`{Gdn}}}}{{{f{BKn}}}{{f{Dd}}}}{BC`DGb}````33`{{{f{DF`}}}{{l{Kl}}}}{{{f{CNn}}}{{l{Kl}}}}{{{f{CCf}}}{{A`{{l{Kl}}n}}}}{{{f{CO`}}}{{l{Lb}}}}{{{f{BH`}}}Hd}`{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{D@lA@h}BMd}{{{f{CEb}}}d}{BH`}{BC`}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BH`}}}d}{{DHjGd}{{Ch{Gd}}}}{{BC`c}BC`{{BAj{BC`}}}}0{{{f{BNj}}}{{A`{Ojn}}}}{{}c{}}{cDAhBNn}{cDAjC@n}2{{Ddc}DHl{}}{c{{AMh{c}}}{}}{BG`BMf}{cCCj{{If{ANh}}}}{cCCn{{If{ANh}}}}{c{{BLd{c}}}BLh}{{{f{{Bh{Oj}}}}}BNj}{c{{C@j{c}}}C@n}{HdBH`}{c{{DAl{c}}}BLh}{{BH`BH`BH`}CDl}{c{{BNl{c}}}BNn}{c{{DAn{c}}}C@n}{{}COb}{c{{CA`{c}}}C@n}{c{{DB`{c}}}C@n}{c{{DBb{c}}}BLh}{c{{CMn{c}}}BLh}{{DHn{N`{CJ`}}{N`{{BEb{BB`}}}}{Hh{GdGd}}{Ch{{Gl{Gd}}}}{Ch{{N`{BLf}}}}{Ch{DHb}}Gdd{Ch{{Gl{Ab}}}}{Ch{{Hh{Dd{N`{Bl}}}}}}CHh}{{A`{CAfn}}}}{CE`BKj}{c{{CAd{c}}}BLh}{c{{CAj{c}}}{C@nC@n}}{c{{BMn{c}}}{}}{c{{N`{c}}}{}}{{BC`BC`BC`}CJh}{{}CJj}{BC`BLl}{{Dd{Gl{Oj}}{BMn{{N`{BMl}}}}c}CBjBO`}{{AGhGd{Gl{{Cn{Cl}}}}{Ch{Id}}}BGl}{{EnJj}Mj}{{DdAGhd}BB`}{e{{N`{c}}}{}{{ABd{{f{{D@d{c}}}}}{{Ad{c}}}}}}{{ge}{{N`{ce}}}{}BMd{{ABd{{f{{D@d{ce}}}}}{{Ad{c}}}}}}{AGhBGl}{{{f{AJn}}GdGd}{{l{c}}}Dn}{{{f{BKn}}GdGd}Ab}{{{f{Bl}}}CFj}{{ce}{{N`{ce}}}{}BMd}{{HdDd}{{A`{Abn}}}}{DdCFj}{{AGhGd}BGl}{{{N`{{Bh{DAf}}}}}CCj}{{{N`{{Bh{DAf}}}}}CCn}{BfCFj}{{{f{{N`{c}}}}{f{DI`}}}CLh{CLjA@h}}{{}{{N`{{C@d{c}}}}}{}}{c{{N`{{C@d{e}}c}}}BMd{}}{Gd{{N`{{Bh{{C@d{c}}}}}}}{}}{{Gdc}{{N`{{Bh{{C@d{e}}}}c}}}BMd{}}{DIbCCj}{DIbCCn}5432{{{f{DfDId}}}Ch}{{{f{DfDEf}}}Ch}{{{f{BMh}}DIf}{{A`{{Ch{AB`}}n}}}}{{{f{DfCAn}}Gd}{{A`{{Ch{{Gl{AB`}}}}n}}}}{{{f{DfC@h}}Gd}{{A`{{Ch{{Gl{AB`}}}}n}}}}{{{f{DfCAf}}Gd}{{A`{{Ch{{Gl{AB`}}}}n}}}}{{{f{BC`}}{f{Df{BHj{{f{BC`}}}}}}}b}{{BC`{f{Df{BHj{BC`}}}}}b}{BC`BC`}0{BMbBMb}{{{f{{AIh{}{{Cj{c}}}}}}e}c{}{}}0{HdBC`}`{{}ABb}{{}A@j}`{{{f{BKn}}}Gd}{BG`BG`}7`````{{{f{Df{CAd{c}}}}}{{A`{Gdn}}}BLh}{{{f{DfCAh}}}{{A`{Gdn}}}}````{{{f{AIj}}}{{A`{{Hf{Hd}}n}}}}{{BMfc}BMf{{If{{Bh{BC`}}}}}}````{{BG`{f{Df{BKd{BKb}}}}{f{Df{BKd{BKf}}}}}{{A`{BK`n}}}}`{{BC`c}BC`{{BAj{BC`}}}}{{{f{BKn}}}{{A`{Mjn}}}}{{{f{CNl}}}{{l{O`}}}}{{{f{CNn}}}{{l{O`}}}}{{{f{CCf}}}{{A`{{l{O`}}n}}}}{{{f{CCf}}}{{A`{{l{Kl}}n}}}}{{CG`c}BC`{{BAj{BC`}}}}{{CGdc}BC`{{BAj{BC`}}}}`{{BC`e}BC`{{BAj{BC`}}Jf}{{If{{Bh{c}}}}}}{{BC`e{Ch{{Hh{eFb}}}}CKd}BC`{{BAj{BC`}}Jf}{{If{{Bh{c}}}}}}{{{f{Df{BEb{En}}}}{f{{BEb{En}}}}}{{A`{bn}}}}```{{{f{Bl}}}BH`}{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}}{{L`{KnKl}}}}{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}}{{L`{LnLb}}}}{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}Ld}{{L`{LfLb}}}}``{{{f{BH`}}{f{BH`}}}{{Ch{BA`}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}{{Ch{BA`}}}{DE`A@h}BMd}```{{}BC`}{c{{CMl{{N`{c}}}}}{}}{{ce}{{CMl{{N`{ce}}}}}{}BMd}````{{BC`c}BC`{{BAj{BC`}}}}`{{DGb{f{Bl}}}BC`}0{{{f{AB`}}{f{AB`}}d}{{A`{{Hh{{AAl{{Gl{Jl}}{Gl{A@j}}}}{AAl{{Gl{ABb}}{Gl{A@j}}}}}}n}}}}`{{{f{DHf}}}Mj}{BC`BC`}{BG`{{A`{{Hh{AB`AB`}}n}}}}`{{{f{BGl}}}BGl}{{{f{{N`{c}}}}{f{DfDIh}}}b{ALnA@h}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}dA@hBMd}{{{f{{N`{CMf}}}}{f{CMh}}DIj}{{CMl{{Cn{CMj}}}}}}{{{f{{N`{CMf}}}}{f{CMh}}}{{CMl{{Cn{CMj}}}}}}{{{f{{N`{CMf}}}}{f{CMh}}DIl}{{CMl{{Cn{CMj}}}}}}{{{f{{N`{CMf}}}}{f{CMh}}DIjDIn}{{CMl{{Cn{CMj}}}}}}`{{{f{Bl}}BC`A@`}BC`}{{BG`BC`A@`}BG`}{{{f{AJl}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{BC`BC`A@`}BC`}{{{f{DHh}}AjA@`}{{A`{Mjn}}}}{{{f{BKn}}AjA@`}{{A`{Mjn}}}}{{{f{CNl}}}{{l{Of}}}}{{{f{CNn}}}{{l{Of}}}}{{{f{CCf}}}{{A`{{l{Of}}n}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BDf}}}DAd{}}````{{{f{DJ`}}CFb{Ch{Kf}}}Ab}{{BC`CFb{Ch{Kf}}}BC`}{{{f{Df{N`{AFn}}}}{f{Df{Bh{Bf}}}}}{{A`{GdBDf}}}}{{{f{Df{N`{AFn}}}}DJb}{{A`{bBDf}}}}{{{f{Df}}{f{Df{Bh{Bf}}}}}{{A`{b}}}}{{{CAd{c}}CHh}{{CAd{c}}}BLh}{{CAhCHh}CAh}{{{f{Df{N`{AFn}}}}{f{Df{Gl{Bf}}}}}{{A`{GdBDf}}}}{{{f{Df{N`{AFn}}}}{f{DfEl}}}{{A`{GdBDf}}}}{{{f{Df}}}{{A`{cBDf}}}DJd}{{{f{Df{N`{AFn}}}}{f{Df{Bh{DJf}}}}}{{A`{GdBDf}}}}{{{f{CLl}}}d}{{{f{BKn}}}Ab}{{{f{CCj}}}d}{{{f{CCn}}}d}````{{{f{BKn}}}{{Ch{Id}}}}{{{f{{N`{c}}}}{f{CLh}}{f{DJh}}}b{CLjA@h}}{{{f{{N`{c}}}}{f{CLh}}{f{CLh}}}b{CLjA@h}}{{ce}BC`{{Eb{FhFh}{{Ad{{A`{{Ch{Fh}}n}}}}}}InJ`}{{If{{Bh{BC`}}}}}}{{{f{{N`{c}}}}{f{D@h}}}DJj{CLjA@h}}{{{f{AK`}}}Ab}0{{{BLj{}{{Ad{c}}}}{f{Ab}}}c{}}{{BC`BC`}}{{{f{BLn}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBMb}}BMb}b}{{{f{{Bh{Bf}}}}}{{A`{{f{{Bh{Bf}}}}n}}}}{{{f{DfBKn}}Dd}b}{{BG`eid}BG`{{If{Bl}}}{{Ib{}{{Cj{c}}}}}{{If{Bl}}}{{Ib{}{{Cj{g}}}}}}{{{f{{N`{CMf}}}}{f{CMh}}{f{CMh}}}{{CMl{{Cn{CMj}}}}}}{{BKle}BC`{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}}1{{cBC`}BC`{{BAj{BC`}}}}{{{f{Ab}}{f{{l{Fd}}}}}{{A`{{l{Ah}}n}}}}{{BC`c}BC`{{BAj{BC`}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{C@f}}{f{Bl}}{f{Bl}}}{{A`{{l{Bj}}n}}}}{{BC`cc}BC`{{BAj{BC`}}}}1{{{f{BNj}}{Ch{En}}}{{A`{Ojn}}}}{{{f{C@f}}{f{Bl}}{f{Bl}}Gd}{{A`{{l{Bj}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Ch{En}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Ch{En}}}{{A`{Abn}}}}{{BC`cc{Ch{c}}{Ch{En}}}BC`{{BAj{BC`}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bl}}}}{f{{l{Bj}}}}CLf}{{A`{{L`{LfLb}}n}}}}{{BC`{f{{Bh{Hd}}}}}BC`}{{{f{ANh}}}DAf}`{{{f{AKb}}}AKb}{{{f{BKn}}}Ab}{BNfBC`}{BG`BG`}{BNhBC`}{BC`BC`}`{{BMfc}BMf{{If{{Bh{BC`}}}}}}{{{f{DEj}}{Gl{Fh}}{f{BGd}}}{{A`{{Hh{Fh{Gl{Fh}}Cb}}n}}}}{{BG`BC`cBGd}BM`{{If{{Bh{BC`}}}}}}{{BC`BGd}BC`}{{{f{AKd}}{f{Eb}}A@b}{{A`{Abn}}}}{{BC`{N`{Eb}}{BMn{{N`{BMl}}}}A@b}BC`}{{{f{BKn}}{f{Eb}}A@b}{{A`{Abn}}}}{{BC`Gdc}BC`{{Af{{f{Df{l{Eh}}}}}{{Ad{{Ch{Aj}}}}}}InJ`Ed}}{{{f{DJl}}A@b}{{A`{Abn}}}}{{BC`A@b}BC`}{{{f{DJl}}{f{Ab}}CDb}{{A`{Abn}}}}{{BC`BC`CDb}BC`}32102032103{{BC`A@`AjA@b}BC`}2{{BC`BC`A@`AjCDb}BC`}543254325432{{{f{DJn}}{f{{l{Bj}}}}{Ch{{f{AMl}}}}}{{A`{DJnn}}}}{{{f{CCd}}Jl}{{A`{Abn}}}}{{BC`Jl}BC`}{{{f{CDl}}Hd{Ch{{f{AMl}}}}}{{A`{Hdn}}}}0{{{f{CCd}}Nn}{{A`{Abn}}}}{{BC`Nn}BC`}2```{{{f{CLl}}}{{Ch{{f{DHb}}}}}}{{{f{CCj}}}{{Ch{{f{DHb}}}}}}{{{f{CCn}}}{{Ch{{f{DHb}}}}}}``````{{{f{DG`}}{l{Ah}}}{{l{Ah}}}}{{}{{BMn{{N`{BMl}}}}}}{{BC`BC`dd{Ch{Kf}}}BC`}0{{{f{BMh}}DIf}{{A`{AB`n}}}}{{cCCl}{{A`{BG`n}}}{{If{ANh}}}}{{{N`{{Bh{DAf}}}}CCl}{{A`{BG`n}}}}{{DIbCCl}{{A`{BG`n}}}}{{cCD`}{{A`{BG`n}}}{{If{ANh}}}}{{{N`{{Bh{DAf}}}}CD`}{{A`{BG`n}}}}{{DIbCD`}{{A`{BG`n}}}}{{DK`{f{{Bh{Jl}}}}e}{{A`{Abn}}}Ed{{Ib{}{{Cj{{Ch{c}}}}}}}}{{{f{AKf}}c{Ch{e}}}{{A`{AKfn}}}{{Ib{}{{Cj{Jl}}}}}{}}{{{f{AKf}}ci}{{A`{AKfn}}}{{Ib{}{{Cj{Jl}}}}}{}{}{{Eb{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}{{{f{Df{DAl{c}}}}}{{A`{{N`{{BEb{BB`}}}}n}}}BLh}{{{f{Df{BNl{c}}}}}{{A`{{BEb{En}}n}}}BNn}{{{f{BMh}}{Ch{Gd}}}{{A`{{N`{{BEb{En}}}}n}}}}{{{f{CAf}}}{{f{{N`{{BEb{BB`}}}}}}}}{{{f{Df{CAd{c}}}}}{{A`{{N`{{BEb{BB`}}}}n}}}BLh}{{{f{DfCAh}}}{{A`{{N`{{BEb{BB`}}}}n}}}}{{{f{CJ`}}}{{f{DKb}}}}```````{{}BMb}`{{{f{DfBG`}}{f{Df{BKd{BKb}}}}{f{Df{BKd{BKf}}}}}{{A`{{N`{{BEb{En}}}}n}}}}`{{{f{DF`}}}{{l{Of}}}}{{{f{CNn}}}{{l{Of}}}}{{{f{CCf}}}{{A`{{l{Of}}n}}}}`{{{f{CO`}}}{{l{Lb}}}}`{{{f{Df{N`{AFn}}}}DKd}{{A`{KfBDf}}}}{{BG`c}BG`{{If{{Bh{BC`}}}}}}0{{BG`BG`cc}BG`{{BAj{BC`}}}}``{{{f{CDb}}c}A`A@f}{{{f{BF`}}c}A`A@f}{{{f{BGd}}c}A`A@f}{{{f{BH`}}c}A`A@f}{{{f{CDf}}c}A`A@f}{{{f{CDh}}c}A`A@f}{{{f{CDj}}c}A`A@f}{{{f{BKj}}c}A`A@f}{{{f{CDn}}c}A`A@f}{{{f{CE`}}c}A`A@f}{{{f{CEb}}c}A`A@f}{{{f{CEd}}c}A`A@f}{{{f{CEf}}c}A`A@f}{{{f{CEh}}c}A`A@f}{{{f{CEj}}c}A`A@f}{{{f{CEl}}c}A`A@f}{{{f{CEn}}c}A`A@f}{{{f{CF`}}c}A`A@f}{{{f{CFb}}c}A`A@f}{{{f{CFd}}c}A`A@f}{{{f{CFf}}c}A`A@f}{{{f{CFh}}c}A`A@f}{{{f{CFj}}c}A`A@f}{{{f{CFl}}c}A`A@f}{{{f{BOn}}c}A`A@f}{{{f{CGf}}c}A`A@f}{{{f{CGh}}c}A`A@f}{{{f{CGj}}c}A`A@f}{{{f{BC`}}c}A`A@f}{{{f{CGl}}c}A`A@f}{{{f{CH`}}c}A`A@f}{{{f{CHb}}c}A`A@f}{{{f{CHd}}c}A`A@f}{{{f{CHf}}c}A`A@f}{{{f{CHh}}c}A`A@f}{{{f{{CHj{c}}}}e}A`{DKfJf}A@f}{{{f{CHl}}c}A`A@f}{{{f{CHn}}c}A`A@f}{{{f{CBb}}c}A`A@f}{{{f{CI`}}c}A`A@f}{{{f{{BMn{{N`{CL`}}}}}}c}A`A@f}{{{f{{BMn{Ab}}}}c}A`A@f}{{{f{{BMn{{N`{BMl}}}}}}c}A`A@f}{{{f{{BMn{{N`{CBd}}}}}}c}A`A@f}{{{f{{BMn{{N`{BO`}}}}}}c}A`A@f}{{{f{CIb}}c}A`A@f}{{{f{CId}}c}A`A@f}{{{f{CIf}}c}A`A@f}{{{f{CIh}}c}A`A@f}{{{f{CIj}}c}A`A@f}{{{f{CIl}}c}A`A@f}{{{f{CIn}}c}A`A@f}{{{f{CJb}}c}A`A@f}{{{f{{N`{c}}}}e}A`{DKfA@h}A@f}{{{f{CJd}}c}A`A@f}{{{f{CJf}}c}A`A@f}{{{f{BNb}}c}A`A@f}{{{f{CJl}}c}A`A@f}{{{f{CJn}}c}A`A@f}{{{f{CK`}}c}A`A@f}{{{f{CKb}}c}A`A@f}{{{f{CKd}}c}A`A@f}{{{f{CKf}}c}A`A@f}{{{f{CKh}}c}A`A@f}{{{f{BLl}}c}A`A@f}{{{f{CKj}}c}A`A@f}{{{f{A@b}}c}A`A@f}{{{f{BGj}}c}A`A@f}{{{f{CKl}}c}A`A@f}{{{f{CKn}}c}A`A@f}{{{f{CL`}}c}A`A@f}{{{f{Mj}}c}A`A@f}{{{f{BB`}}c}A`A@f}{{{f{A@`}}c}A`A@f}{{{f{BJ`}}c}A`A@f}{{{f{CLb}}c}A`A@f}{{{f{CLd}}c}A`A@f}{{{f{CLf}}c}A`A@f}``{{{f{AKf}}{f{{l{An}}}}{Ch{c}}}{{A`{AKfn}}}{}}{{{f{DfBMb}}BMbd}b}{{{f{BG`}}{BKd{BKb}}{BKd{BKf}}}b}{{{CAd{c}}d}{{CAd{c}}}BLh}{{{f{Df{CAd{c}}}}{N`{CJ`}}}bBLh}{{{CAj{c}}d}{{CAj{c}}}C@n}{{{DAl{c}}d}{{DAl{c}}}BLh}{{{BNl{c}}d}{{BNl{c}}}BNn}{{{DBb{c}}d}{{DBb{c}}}BLh}5{{CAhd}CAh}{{DAhd}DAh}{{BC`Mb}BC`}{{{f{DfBGl}}{Ch{Id}}}b}{{{f{AKh}}Hd}{{l{c}}}Dn}{{{f{BKn}}Hd}Ab}{{BNfBC`}BC`}{{BG`c}BG`{{BAj{BC`}}}}{{BNhBC`}BC`}{{BC`BC`}BC`}{{{f{AKj}}Hdc}{{l{e}}}{}Dn}{{BG`ce}BG`{{BAj{BC`}}}{{BAj{BC`}}}}{{BC`ce}BC`{{BAj{BC`}}}{{BAj{BC`}}}}{{{f{BKj}}}d}{BC`BC`}{{{f{DfACh}}}b}{{{f{DfBKn}}}b}{{BC`{Ch{Kf}}}BC`}{{BG`cCGf}{{A`{bn}}}{{If{ANh}}}}{{BG`cCH`}{{A`{bn}}}{{If{ANh}}}}{{BG`cCHd}{{A`{bn}}}{{If{ANh}}}}{{BG`cCHn}{{A`{bn}}}{{If{ANh}}}}{{{f{CMd}}}{{l{Fd}}}}````{{{f{BKn}}HdGd}Ab}{{BG`HdJl}BG`}{{BNhBC`BC`}BC`}={{{f{DfBGl}}GdGd}b}0`{{{f{AKl}}GdGd}AKl}{{fGdGd}c{}}1022{{BGlGdGd}BGl}0`{{{f{AI`}}d}{{l{c}}}Dn}{{BNfFb}BC`}{{BG`cFj}BG`{{BGh{Dd}}}}{{BNhFb}BC`}{{BC`Fb}BC`}{{BC`eFj}BC`{{BAj{BC`}}Jf}{{If{{Bh{c}}}}}}{{BG`cFj}BG`{{If{{Bh{BC`}}}}}}{{{f{AI`}}Fb}{{l{c}}}Dn}{{{f{BKn}}Fb}{{A`{Abn}}}}{{{f{{N`{c}}}}}{{Ch{{f{ALn}}}}}{ALnA@h}}{{{f{CLl}}}{{f{DIb}}}}{{{f{CCj}}}{{f{DIb}}}}{{{f{CCn}}}{{f{DIb}}}}{{{f{{N`{c}}}}{DKh{b}}}{{A`{bDKj}}}{DKlA@h}}{{{f{{N`{c}}}}{DKn{b}}}{{A`{bDKj}}}{DL`A@h}}{{{f{C@f}}{f{{l{Bj}}}}}{{l{Ah}}}}{{{f{BKn}}Hd}{{Hh{AbAb}}}}{{{f{BGl}}Gd}{{Hh{{Cn{Cl}}{Cn{Cl}}}}}}0{{{f{C@f}}{f{{l{Bj}}}}Gd}{{A`{{l{j}}n}}}}0{{{f{{l{Bj}}}}{f{{l{Bj}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{Eb{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}4{{{f{{l{Bj}}}}{f{{l{Bj}}}}Gded}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{Eb{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}2{BC`BC`}`{{{f{CMd}}{f{{Bh{Bf}}}}}{{l{An}}}}{{{f{CMd}}{f{{l{Bd}}}}}{{l{An}}}}`{{{f{{N`{c}}}}}{{A`{bDKj}}}{DL`A@h}}{{{f{{N`{c}}}}}{{A`{bDKj}}}{DKlA@h}}{{BNfBf}BC`}{{BG`Bf}BG`}{{BNhBf}BC`}{{{f{AKn}}Bf}{{Ch{Aj}}}}{{BC`Bf}BC`}{{{f{BKn}}Bf}{{Ch{Aj}}}}{{{f{DLb}}Bf}Mj}{{{f{BKn}}Bf}{{A`{Mjn}}}}{{JlJl}A@j}{BC`DLd}{{{f{C@f}}}{{l{Bj}}}}{{{f{C@f}}{f{Fh}}}{{A`{{l{Bj}}n}}}}{{{f{{l{Bj}}}}{f{Bl}}d}{{l{Bj}}}}{{{f{C@f}}}{{l{Fd}}}}03{{{f{C@f}}{f{Fh}}{f{Fh}}}{{A`{{l{Bj}}n}}}}3`{{{f{CCf}}{f{Bl}}}{{A`{Abn}}}}`{{BC`En}BC`}`{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Bj}}}}606060{{{f{C@f}}{f{{l{Bj}}}}}{{l{Bj}}}}10{{{f{{N`{ce}}}}}GdA@hBMd}{BC`BKl}{{{BLj{}{{Ad{c}}}}{f{Ab}}}c{}}{{BC`BC`}}{{BLlBLl}}{{BMbBMb}BMb}{{{f{DfBMb}}BMb}b}{{{f{BLn}}{f{Ab}}}{{A`{Abn}}}}{{BMfc}BMf{{BAj{Dd}}}}{{DGb{f{Bl}}}BC`}{{{f{BKj}}}{{f{Dd}}}}`1{{{f{Bl}}}BC`}{BNfBC`}{BG`BG`}{BNhBC`}{{{f{AHh}}}{{Ch{c}}}{}}{BC`BC`}{{{f{DHf}}}Mj}{{{f{BKn}}}{{A`{Mjn}}}}{{}{{BMn{{N`{BMl}}}}}}{CBbCBb}?{{{f{Df}}g}{{A`{eBDf}}}{}{}{{ABd{{f{Dfc}}}{{Ad{e}}}}}}{{BG`Jl}BG`}{{BM`{Ch{Gd}}}BG`}{{BNhBC`}BC`}{{BC`{Ch{Gd}}}BC`}{{{f{AL`}}{f{c}}}{{A`{AL`n}}}A@h}{{{f{BKn}}{f{{l{Fd}}}}}{{A`{Abn}}}}{{{f{DLf}}{f{{Bh{A@j}}}}Mb}DLf}{{{f{DLf}}{f{{Bh{A@j}}}}}DLf}{{{f{BKn}}{f{{Bh{Jl}}}}}{{A`{Abn}}}}{{{f{BKn}}{f{{Bh{Jl}}}}}Ab}{{{f{ALb}}{f{c}}}ALbA@h}{{{f{BKn}}{f{{l{Fd}}}}}Ab}{{{f{DfBGl}}}{{Ch{Id}}}}{{BC`BC`BC`}BC`}{{CFnc}CG`{{BAj{BC`}}}}{{CGbc}CGd{{BAj{BC`}}}}`{{BC`BC`BH`CDf}BC`}```{{{f{CCf}}Ld}{{A`{{l{Lb}}n}}}}{BG`{{A`{DLhn}}}}{CL`{{A`{DLhn}}}}1{{{f{CKj}}}{{Ch{Jj}}}}{{BNhGd}BC`}{{{f{DCl}}B@f}{{BEb{BB`}}}}{{{f{BGl}}}{{Cn{Cl}}}}{{{f{ALd}}}{{Gl{{f{{Bh{Bf}}}}}}}}{{{f{BG`}}d}{{A`{Eln}}}}{{{f{DLj}}{Ch{{f{Bl}}}}d}{{A`{AB`n}}}}{{{f{BLb}}{Ch{{f{Bl}}}}d}{{A`{AB`n}}}}{{{f{BC`}}{f{{BEb{En}}}}DEb}{{A`{Ojn}}}}{{{f{C@f}}{f{{l{Fd}}}}d}{{A`{{l{Lb}}n}}}}{BNfBC`}{{{f{C@f}}}{{l{Bj}}}}{DGbBC`}{{{f{ABb}}}{{Ch{Jl}}}}{fc{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BC`BC`}{{{f{BNj}}}{{A`{Ojn}}}}{{{f{CCf}}{f{Bl}}}{{A`{Abn}}}}{fEl}000000000000{{{f{DfDCl}}{f{{BEb{En}}}}}{{A`{dn}}}}`887{{{f{CH`}}c}{{CA`{c}}}C@n}{{{f{CHn}}c}{{CAj{c}}}C@n}{{{f{DfBMb}}BMb}b}``{{BG`JlcFj}BG`{{If{{Bh{BC`}}}}}}{{{f{BGl}}{f{BGl}}}Id}{{{f{BGl}}f}Id}10{{{f{Ab}}}{{A`{Abn}}}}0{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}g{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{f{DLl}}{Ch{{f{AMl}}}}{f{{l{Bj}}}}}{{A`{DLln}}}}{{{f{BH`}}Hd{Ch{{f{AMl}}}}ceg}{{A`{Hdn}}}{{Eb{Hd}{{Ad{Hd}}}}}{{Eb{Hd}{{Ad{AMj}}}}}{{Eb{AMj}{{Ad{Hd}}}}}}{{{f{BH`}}Hd{Ch{{f{AMl}}}}}{{A`{Hdn}}}}{{{f{CDl}}Hd{Ch{{f{AMl}}}}}{{A`{Hdn}}}}10`10{g{{A`{ANde}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}{e{{A`{BGlc}}}{}{{Ib{}{{Cj{{A`{bc}}}}}}}}{e{{A`{BGlc}}}{}{{Ib{}{{Cj{{A`{{Ch{b}}c}}}}}}}}2{{AGhg}{{A`{ANfe}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGhe}{{A`{BGlc}}}{}{{Ib{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{{AGhe}{{A`{BGlc}}}{}{{Ib{}{{Cj{{A`{bc}}}}}}}}{{{f{{N`{c}}}}CLh}d{CLjA@h}}{BAb{{A`{eg}}}{}{{ANd{c}}ALj}{}}0{{BAbAGh}{{A`{eg}}}{}{{ANf{c}}ALj}{}}0{{AEbDd}{{A`{{l{c}}e}}}Dn{}}{{AEd{f{{l{c}}}}}{{A`{{l{c}}e}}}Dn{}}10{{AEdDdEn}{{A`{{l{c}}e}}}Dn{}}0{c{{A`{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{N`{{Bh{c}}e}}}{{A`{{N`{{AAd{c}}e}}}}}{}BMd}1111111111111111111111111111111{DLn{{A`{CJ`BDb}}}}{{{f{DCl}}{f{Bl}}}{{A`{Ojn}}}}{{}{{A`{c}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CFd{Ch{DAf}}}{{A`{{BLd{AFn}}n}}}}{{{f{BNj}}c}{{A`{Ojn}}}{{ABd{{f{En}}}{{Ad{{A`{Enn}}}}}}}}{{{f{BNj}}c}{{A`{Ojn}}}{{ABd{{f{{Bh{{f{En}}}}}}}{{Ad{{A`{Enn}}}}}}}}{{BC`c}{{A`{BC`n}}}{{Af{BC`}{{Ad{{A`{BC`n}}}}}}}}{{{f{BNj}}c}{{A`{Ojn}}}{{ABd{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}}}{{DHjGd}{{A`{Gdn}}}}{Bf{{A`{CIbn}}}}{Jl{{A`{CIfn}}}}{Nn{{A`{CIhn}}}}{c{{A`{{N`{c}}DM`}}}{}}{{AGhGd{Gl{{Cn{Cl}}}}{Ch{Id}}}{{A`{BGln}}}}{{ce}{{A`{{N`{ce}}DM`}}}{}BMd}{{}{{A`{{N`{{C@d{c}}}}DM`}}}{}}{c{{A`{{N`{{C@d{e}}c}}DM`}}}BMd{}}10`{c{{A`{{CMl{{N`{c}}}}DM`}}}{}}{{ce}{{A`{{CMl{{N`{ce}}}}DM`}}}{}BMd}{{{f{BO`}}{f{Df{Gl{Bf}}}}}{{A`{bn}}}}{{{f{CBd}}{f{Df{Gl{Bf}}}}}{{A`{bn}}}}{{{f{BMl}}{f{Df{Gl{Bf}}}}}{{A`{bn}}}}{{{f{DfAb}}Gd{f{{CC`{GdMbA@n}}}}}b}{f{{A`{GnBCf}}}}000000000000{{{N`{ce}}}{{A`{c{N`{ce}}}}}{}BMd}{fAAn}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bl}}}}`{{BMbBMb}BMb}{{{f{AIb}}}{{A`{AIbn}}}}{BNfBC`}{{BG`{Ch{{Gl{El}}}}BEh}BG`}{BNhBC`}{BC`BC`}{{{f{BKn}}}{{A`{Abn}}}}{{BG`{Ch{e}}BEh}BG`{{BAj{BLl}}Jf}{{If{{Bh{c}}}}}}5{{BG`{Ch{{Gl{Dd}}}}BEh}BG`}431{{BG`e}BG`{{BAj{BLl}}Jf}{{If{{Bh{c}}}}}}{{{N`{{AGd{c}}}}}{{A`{cb}}}In}{{{N`{ce}}}cJfBMd}{{{f{DfMj}}Jj}b}{{{f{DfCFd}}{f{DMb}}}b}8{{{f{DMd}}c{f{Bl}}BH`}{{A`{AB`n}}}{{BGh{Dd}}}}0{{{CAd{c}}d}{{CAd{c}}}BLh}{{CAhd}CAh}```{{BMfCEb}BMf}`{{{f{BGl}}}{{Ch{{f{Id}}}}}}0{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}Gd}cJf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{Mj}}}{{f{Jj}}}}{{{f{D@j}}ddDdd}{{A`{AB`n}}}}{{BC`dd{f{Bl}}d}BC`}``3{{{f{BGl}}}{{f{{Bh{{Cn{Cl}}}}}}}}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}}gJf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{BGl}}}DFh}{{BNfBf}BC`}{{BG`Bf}BG`}{{BNhBf}BC`}{{{f{AKn}}Bf}{{Ch{Aj}}}}{{BC`Bf}BC`}{{{f{BKn}}Bf}{{Ch{Aj}}}}{{{f{DLb}}Bf}Mj}{{{f{BKn}}Bf}{{A`{Mjn}}}}``{{{f{DMf}}A@n{f{Df{Gl{Kf}}}}}{{A`{bn}}}}{{{f{DMf}}A@n{f{Df{Bh{Kf}}}}}{{A`{bn}}}}`{{{f{{N`{{AGd{c}}}}}}g}{{A`{eb}}}In{}{{ABd{{f{c}}}{{Ad{e}}}}}}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}GdA@hBMd}{{{f{CNl}}}{{l{Of}}}}{{{f{CNn}}}{{l{Of}}}}{{{f{CCf}}}{{A`{{l{Of}}n}}}}10{{{f{CDj}}}{{Ch{Jl}}}}{{{f{BH`}}}Hd}`{{{f{BH`}}}d}`{cCFn{{BAj{BC`}}}}{{CG`c}CGb{{BAj{BC`}}}}{{CGdc}CGb{{BAj{BC`}}}}```{{BMfBG`}BMf}{{CJhBC`}CJh}{{{CAd{c}}{f{{N`{{BEb{BB`}}}}}}{Ch{{f{{BEb{BB`}}}}}}d}{{A`{{CAd{c}}n}}}BLh}{{CAh{f{{N`{{BEb{BB`}}}}}}{Ch{{f{{BEb{BB`}}}}}}d}{{A`{CAhn}}}}{{CCn{Ch{{DFb{Gd}}}}}CCn}{{{C@j{c}}{DFb{Gd}}}{{C@j{c}}}C@n}{{{DBb{c}}{DFb{Gd}}}{{DBb{c}}}BLh}{{CCjd}CCj}{Gdc{}}0{{{CMn{c}}{Ch{{DFb{Gd}}}}}{{CMn{c}}}BLh}{{CFdGd}CFd}{{CCj{Ch{CLn}}}CCj}{{CCn{Ch{CLn}}}CCn}{{BG`d}BG`}{{BKjCDn}BKj}1{{BG`BC`}BG`}{{BG`c}BG`{{If{{Bh{BC`}}}}}}{{{DAl{c}}{Ch{{Gl{El}}}}}{{DAl{c}}}BLh}{{{BNl{c}}{Ch{{Gl{El}}}}}{{BNl{c}}}BNn}{{{CAd{c}}{Ch{{Gl{El}}}}}{{CAd{c}}}BLh}{{CFd{Ch{{N`{{Bh{Dd}}}}}}}CFd}`4{{CCj{Ch{Dd}}}CCj}{{CFf{Ch{c}}}CFf{{BAj{CFj}}}}{{{DAn{c}}B@f}{{DAn{c}}}{}}{{{CA`{c}}B@f}{{CA`{c}}}C@n}{{{DAn{c}}{Ch{CHb}}}{{DAn{c}}}{}}{{COb{Ch{CHb}}}COb}{{{CA`{c}}{Ch{CHb}}}{{CA`{c}}}C@n}{{{CAj{c}}CI`}{{CAj{c}}}C@n}{{BG`c}BG`{{If{{Bh{BG`}}}}}}{{{CAj{c}}{Ch{Gd}}}{{CAj{c}}}C@n}{{{C@j{c}}{Ch{El}}}{{C@j{c}}}C@n}0{{CJhBC`}CJh}{{CJjBC`}CJj}{{CCjd}CCj}{{CFfd}CFf}{{{f{BNj}}En}{{A`{Ojn}}}}{{CCj{Ch{{N`{{BEb{En}}}}}}}CCj}{{CFd{Ch{{N`{{Gl{En}}}}}}}CFd}{{CCjCFh}CCj}{{CFfCFh}CFf}{{CCjBf}CCj}{{CFfBf}CFf}{{CObDAf}COb}{{BKl{Gl{BC`}}}{{A`{BC`n}}}}{{{C@j{c}}{Ch{Gd}}}{{C@j{c}}}C@n}{{{C@j{c}}{Ch{d}}}{{C@j{c}}}C@n}{{CJjBC`BC`BC`}CJj}=={{CFdd}CFd}{{{DAl{c}}{Ch{{Gl{Ab}}}}}{{DAl{c}}}BLh}{{{CAd{c}}{Ch{{Gl{Ab}}}}}{{CAd{c}}}BLh}{{CAh{Ch{{Gl{Ab}}}}}CAh}{{CJhBC`BC`BC`}CJh}5{{CJhBC`}CJh}{{CJjBC`}CJj}{{CCjd}CCj}{{CCnd}CCn}{{{DBb{c}}d}{{DBb{c}}}BLh}{{{CMn{c}}d}{{CMn{c}}}BLh}:{{{DAl{c}}{Ch{{Hh{Dd{N`{Bl}}}}}}}{{DAl{c}}}BLh}{{{CAd{c}}{Ch{{Hh{Dd{N`{Bl}}}}}}}{{CAd{c}}}BLh}{{CAh{Ch{{Hh{Dd{N`{Bl}}}}}}}CAh}{{CCj{Ch{Dd}}}CCj}{{CCn{Ch{Dd}}}CCn}{{CCj{Ch{Gd}}}CCj}{{CCn{Ch{{DFb{Gd}}}}}CCn}{{CFd{Ch{Gd}}}CFd}{{{DB`{c}}DMh}{{DB`{c}}}C@n}{{{DBb{c}}DMh}{{DBb{c}}}BLh}{{{C@j{c}}El}{{C@j{c}}}C@n}>{{CFdd}CFd}{{BB`{DMj{DdDd}}}BB`}{{CJhBC`}CJh}{{CJjBC`}CJj}010{{CCjd}CCj}{{CFfd}CFf}3{{CLlc}CLl{{BAj{{Ch{Gd}}}}}}{{CCjc}CCj{{BAj{{Ch{Gd}}}}}}={{CCnc}CCn{{BAj{{Ch{Gd}}}}}}{{CCn{Ch{Gd}}}CCn}{{{DAl{c}}{Ch{Gd}}}{{DAl{c}}}BLh}{{{BNl{c}}{Ch{Gd}}}{{BNl{c}}}BNn}{{{CMn{c}}{Ch{Gd}}}{{CMn{c}}}BLh}{{CFd{Ch{Gd}}}CFd}10:>{{CCj{Ch{CFl}}}CCj}{{CFf{Ch{CFl}}}CFf}{{BG`BMb}BG`}{{CFdCFf}CFd}{{{CMn{c}}{Ch{e}}}{{CMn{c}}}BLh{{BAj{DAf}}}}{{CFd{Ch{c}}}CFd{{BAj{DAf}}}}{{CLl{N`{{Bh{DAf}}}}}CLl}{{{CMn{c}}{Ch{{N`{BLf}}}}}{{CMn{c}}}BLh}{{{CAd{c}}{Ch{{N`{BLf}}}}}{{CAd{c}}}BLh}{{CAh{Ch{{N`{BLf}}}}}CAh}{{CGnc}CGn{{BAj{{Ch{{N`{BLf}}}}}}}}{{BG`d}BG`}{{{DAl{c}}{Ch{{Gl{Gd}}}}}{{DAl{c}}}BLh}{{{BNl{c}}{Ch{{Gl{Gd}}}}}{{BNl{c}}}BNn}{{{DBb{c}}{Ch{{Gl{Dd}}}}}{{DBb{c}}}BLh}{{{CMn{c}}{Ch{{N`{{Bh{Dd}}}}}}}{{CMn{c}}}BLh}{{{CAd{c}}{Ch{{Gl{Gd}}}}}{{CAd{c}}}BLh}{{CAh{Ch{{Gl{Gd}}}}}CAh}{{CFd{Ch{{N`{{Gl{Gd}}}}}}}CFd}{{CGn{Ch{{N`{{Bh{Dd}}}}}}}CGn}8{{CCj{Ch{Bf}}}CCj}{{{C@j{c}}Bf}{{C@j{c}}}C@n}{{CFf{Ch{Bf}}}CFf}{{{C@j{c}}CGj}{{C@j{c}}}C@n}{{CCjd}CCj}{{CFdd}CFd}{{CLld}CLl}2{{CCnd}CCn}{{{CMn{c}}d}{{CMn{c}}}BLh}3{{BG`d}BG`}{{{CAj{c}}{Ch{Gd}}}{{CAj{c}}}C@n}{{CLlc}CLl{{BAj{{Ch{DHb}}}}}}{{BG`c{Ch{Jl}}}BG`{{BAj{Dd}}}}{{CCj{Ch{DHb}}}CCj}{{CCjc}CCj{{BAj{{Ch{DHb}}}}}}{{CCnc}CCn{{BAj{{Ch{DHb}}}}}}{{CCn{Ch{DHb}}}CCn}{{{DAl{c}}{Ch{DHb}}}{{DAl{c}}}BLh}{{{BNl{c}}{Ch{DHb}}}{{BNl{c}}}BNn}{{{CMn{c}}{Ch{{f{DfDHb}}}}}{{CMn{c}}}BLh}{{{CAd{c}}{Ch{DHb}}}{{CAd{c}}}BLh}{{CAh{Ch{DHb}}}CAh}{{CFd{Ch{DHb}}}CFd}{{CGnc}CGn{{BAj{{Ch{DHb}}}}}}{{CGnc}CGn{{BAj{{Ch{Gd}}}}}}{{{f{BNj}}}{{A`{Ojn}}}}{{CCj{Ch{{N`{{BEb{En}}}}}}}CCj}{{CCn{Ch{{N`{{BEb{En}}}}}}}CCn}{{{DBb{c}}{N`{{BEb{En}}}}}{{DBb{c}}}BLh}{{{CMn{c}}{N`{{BEb{En}}}}}{{CMn{c}}}BLh}{{CFd{Ch{{N`{{BEb{En}}}}}}}CFd}{{CCjc}{{A`{CCjn}}}{{Eb{{BEb{En}}}{{Ad{{A`{{BEb{En}}n}}}}}}}}4{{{DBb{c}}{f{{BEb{En}}}}}{{DBb{c}}}BLh}{{{CMn{c}}{f{{BEb{En}}}}}{{CMn{c}}}BLh}3{{CJhBC`}CJh}{{CJjBC`}CJj}{{CCjBf}CCj}{{{C@j{c}}Bf}{{C@j{c}}}C@n}{{CFfBf}CFf}{{BG`d}BG`}{{CCjGd}CCj}{{CFdGd}CFd}10{{{CAd{c}}{Ch{{Hh{GdGd}}}}}{{CAd{c}}}BLh}{{CAh{Ch{{Hh{GdGd}}}}}CAh}4{{CLlDIb}CLl}{{CCjDIb}CCj}{{CCnDIb}CCn}{{{CAj{c}}CId}{{CAj{c}}}C@n}{{BKj{Ch{Dd}}}BKj}{{{C@j{c}}{Ch{El}}}{{C@j{c}}}C@n}{{CJhLd}CJh}{{CJh{Ch{Dd}}}CJh}{{CCjd}CCj}{{CFfd}CFf}10>{{{f{BGl}}{Ch{Id}}}{{Cn{Cl}}}}{{BGl{Ch{Id}}}BGl}{{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}{Ch{Id}}}{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}1{{CJjBC`}CJj}{{CJhBC`}CJh}{BG`BG`}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}e{}{}{}}10{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}210213210210{{{f{Df{N`{AFn}}}}{f{{Bh{Bf}}}}}{{A`{GdBDf}}}}{{{f{Df}}{f{{Bh{Bf}}}}}{{A`{b}}}}{{{f{CH`}}AB`c}{{A`{bn}}}C@n}{{{f{CHn}}AB`c}{{A`{bn}}}C@n}{{{f{DfAB`}}{f{ANh}}e{f{g}}Gd}{{A`{bn}}}{{BAj{Dd}}}{{Ib{}{{Cj{c}}}}}{DMlInJ`}}{{{f{Df}}c}{{A`{GdBDf}}}DJd}{{{f{Df{N`{AFn}}}}{f{{Bh{DMn}}}}}{{A`{GdBDf}}}}{{BC`c}BC`{{BAj{BC`}}}}{{{f{BKn}}}{{A`{Mjn}}}}{{{f{CNl}}}{{l{Kl}}}}{{{f{CNn}}}{{l{Kl}}}}{{{f{CCf}}}{{A`{{l{Kl}}n}}}}``{{{f{ALf}}{f{{l{An}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dn}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Id}}}Aj}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{{BEb{BB`}}}}{f{{BEb{BB`}}}}}{{A`{bn}}}}{cc{}}{{}Gd}{{}DN`}{{}c{}}{{{Ch{{f{BLf}}}}{f{CNd}}{f{{BEb{BB`}}}}}{{A`{dn}}}}{{{f{DN`}}Aj{f{AGh}}}d}{{{Gl{{Hh{{f{COn}}DNb}}}}BB`{Ch{DNd}}}{{A`{{Cn{Cl}}n}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6``{{{f{BHh}}c}Ab{{Eb{{Hh{Jl{f{{BHj{Jl}}}}}}}{{Ad{Ch}}}}InJ`}}{{{f{BHh}}c}Ab{{Eb{{Hh{Jl{f{{BHj{Jl}}}}}}}{{Ad{}}}}InJ`}}{{{f{{Bh{{AAd{Jl}}}}}}c}Ab{{Eb{{AAd{Jl}}}{{Ad{Ch}}}}InJ`}}{{{f{{Bh{{AAd{Jl}}}}}}c}Ab{{Eb{{AAd{Jl}}}{{Ad{}}}}InJ`}}{{{f{{Bh{c}}}}e{Ch{BJ`}}}{{AMb{c}}}{BJbBJd}{{D`{}{{Cj{{Hh{JlJl}}}}}}Jh}}{{{f{{Bh{c}}}}{f{Id}}e{Ch{BJ`}}}{{AMb{c}}}{BJbBJd}{{D`{}{{Cj{{Hh{JlJl}}}}}}Jh}}{{{f{{l{c}}}}JlJl}{{l{c}}}Dn}{{{f{{Gl{{AAd{Jl}}}}}}{f{{Bh{{Cn{Cl}}}}}}}d}{{{f{BJf}}{f{Cb}}}Ab}{{BJhBJh}BJh}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DnDn{{Eb{ff}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}{{Eb{f}{{Ad{}}}}}Dn}{{{l{c}}{l{e}}gik}{{l{m}}}DnDn{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}{{Eb{}{{Ad{}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DnDn{{ALh{ChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}g}bDnDn{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bj}}}DnDn{{Af{{f{DfEl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDn{}{{Af{}{{Ad{g}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDn{ClALj}{{Af{ff}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DnDnCl{{Af{}{{Ad{g}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDn{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DnDnDn{{ALl{ChChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDnClALn{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{I`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DnDnClALn{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DnDnALn{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DnDnDn{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{ClALj}ALn{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dn{}{{I`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dn{{AM`{Ch}}}Dn}{{{f{{l{c}}}}e}{{l{g}}}DnAM`Dn}{{{f{{l{c}}}}g}{{l{i}}}DnCl{{Af{f}{{Ad{e}}}}}{{Dn{}{{I`{e}}}}}}{{{l{c}}g}{{l{i}}}DnCl{{Af{}{{Ad{e}}}}}{{Dn{}{{I`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dn{ClALj}{{Af{f}{{Ad{e}}}}}{{Dn{}{{I`{e}}}}}}0``{{{f{DNf}}}{{l{Fd}}}}0{{{f{DNf}}{f{{l{Lb}}}}d}{{A`{Abn}}}}{{{f{DNf}}{f{{l{Bj}}}}d}{{A`{Abn}}}}{{{f{DNf}}}Ab}{{{f{DNf}}}{{A`{Abn}}}}1{{{f{DNf}}}{{A`{{l{Fd}}n}}}}{{{f{DNf}}}{{l{C`}}}}{{{f{DNf}}{f{Ab}}}{{A`{Abn}}}}{{{f{DNf}}Fb}{{A`{{l{C`}}n}}}}{{{f{DNf}}Bf}{{A`{Abn}}}}5{{{f{DNf}}}{{A`{{l{Ah}}n}}}}01{{{f{DNh}}}{{f{{l{C`}}}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CB`BC`}BC`}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}3{cc{}}{{}Gd}{{}c{}}{CB`BC`}7{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}4`````````````````````{{{f{DfDNj}}{f{{Bh{Bf}}}}ddd}{{A`{bn}}}}{{{f{DfDNj}}d}b}>>>>====;;;;::::9999{{{f{DNj}}}En}99998888{{{f{{Bh{Gd}}}}Gd{f{{BEb{En}}}}{Ch{Bf}}CFhd}{{A`{{Gl{DNj}}n}}}}8888{DNj{{A`{Abn}}}}7777666655559999````````````{{fh}b}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{DNl}}}DNl}{{f{f{Dfc}}}b{}}{fb}{{}DNn}{Gd{{f{c}}}{}}000{Gd{{f{Dfc}}}{}}000{Gdb}000{{{f{DNl}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}0{DO`DNn}{DNbDNn}{DObDNn}33{{{f{DOd}}{Nj{Gd}}}{{A`{DNbn}}}}{{{f{DOb}}{Nj{Gd}}}{{A`{DNbn}}}}{{{f{DO`}}{Nj{Gd}}}{{A`{DNbn}}}}{{{f{DNn}}{Nj{Gd}}}{{A`{DNbn}}}}{{{f{DOd}}{f{{Bh{{Nj{Gd}}}}}}}{{A`{{Gl{DNb}}n}}}}{{{f{DOb}}{f{{Bh{{Nj{Gd}}}}}}}{{A`{{Gl{DNb}}n}}}}{{{f{DO`}}{f{{Bh{{Nj{Gd}}}}}}}{{A`{{Gl{DNb}}n}}}}{{{f{DNn}}{f{{Bh{{Nj{Gd}}}}}}}{{A`{{Gl{DNb}}n}}}}{{{f{DOd}}}{{A`{Gdn}}}}{{{f{DOb}}}{{A`{Gdn}}}}{{{f{DO`}}}{{A`{Gdn}}}}{{{f{DNn}}}{{A`{Gdn}}}}{{}Gd}000{{}c{}}000{fc{}}{{{f{DNl}}{f{Bl}}{Ch{{f{CLn}}}}}{{A`{DNnn}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{fAAn}000{{{f{DNn}}}{{f{Bl}}}}6666````````{{{f{BOd}}{Ch{{f{Bl}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BOd}}{Ch{{f{Bl}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BOd}}{Ch{{f{Bl}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOd}}{Ch{{f{Bl}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOd}}{Ch{{f{Bl}}}}d}{{A`{{L`{LnLb}}n}}}}`{{{f{CNl}}}{{l{Of}}}}{{{f{CNn}}}{{l{Of}}}}{{{f{CO`}}}{{l{Lb}}}}`{{{f{DF`}}}{{l{Of}}}}21{{{f{CNl}}}{{l{An}}}}{{{f{CNn}}}{{l{An}}}}{{{f{CNl}}}{{l{Kl}}}}{{{f{CNn}}}{{l{Kl}}}}55`46576{{{f{DF`}}}{{l{Kl}}}}16{{{f{CNl}}}{{l{O`}}}}{{{f{CNn}}}{{l{O`}}}}{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}}{{L`{KnKl}}}}{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}}{{L`{LnLb}}}}{{Dd{f{{Bh{{f{Bl}}}}}}{f{Bl}}Ld}{{L`{LfLb}}}}=<{{{f{DJl}}A@b}{{A`{Abn}}}}{{{f{DJl}}{f{Ab}}CDb}{{A`{Abn}}}}101010101010<>=`?>>`98````````{{fh}b}{{{f{BOd}}{Ch{{f{Bl}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BOd}}{Ch{{f{Bl}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BOd}}{Ch{{f{Bl}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOd}}{Ch{{f{Bl}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bj}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{DOf}}}{{f{{l{Bj}}}}}}{{{f{BOd}}{Ch{{f{Bl}}}}d}{{A`{{L`{LnLb}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DOh}}}DOh}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{DOh}}{f{DOh}}}d}{{f{f{c}}}d{}}00{{{f{DOh}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{DOh}}{f{Dfc}}}bAE`}`{{}Gd}{{}c{}}{{{f{DOh}}{f{Bl}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}5````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{DOj{c}}}}}{{DOj{c}}}{JfAl}}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{cc{}}{{{f{Bl}}}{{Ch{DOh}}}}{{}Gd}{{}c{}}`{{{f{Df{DOj{c}}}}{f{Bl}}}ChAl}{{{f{DfDOl}}{f{{Bh{Bf}}}}{Ch{Ld}}}{{Ch{c}}}{}}{{{f{Df{DOj{Lb}}}}{f{{Bh{Bf}}}}{Ch{Ld}}}{{Ch{Hd}}}}{{{f{Df{DOj{Kl}}}}{f{{Bh{Bf}}}}{Ch{Ld}}}{{Ch{Nn}}}}`{fc{}}{c{{A`{e}}}{}{}}{{c{Ch{Ld}}}{{A`{{E@`{}{{DOn{e}}}}n}}}{}{}}{{DOh{Ch{Ld}}}{{A`{{DOj{Kl}}n}}}}{{DOh{Ch{Ld}}}{{A`{{DOj{Lb}}n}}}}{{}{{A`{c}}}{}}{fAAn};`````````````````````````````````{{fh}b}00{{{f{E@b}}}{{f{Bl}}}}{f{{f{c}}}{}}00000{{{f{Df}}}{{f{Dfc}}}{}}00000`{{{f{CLn}}{f{Bl}}}{{A`{{`{CMf}}n}}}}0{{{f{Bl}}{Ch{{f{CLn}}}}d}{{A`{{Hh{E@d{N`{CMf}}}}n}}}}{{{f{E@b}}}E@b}{{{f{CLn}}}CLn}{{{f{E@f}}}E@f}{{f{f{Dfc}}}b{}}00{fb}00`{{}E@d}{{}CLn}{Gd{{f{c}}}{}}00000{Gd{{f{Dfc}}}{}}00000{c{{A`{E@b}}}ADn}{c{{A`{CLn}}}ADn}{{{f{E@f}}{f{CMh}}{f{Dfc}}}{{A`{bn}}}{E@hE@j}}{{{f{DfE@l}}}b}{Gdb}00000{{{f{E@b}}{f{E@b}}}d}{{{f{E@d}}{f{E@d}}}d}{{{f{CLn}}{f{CLn}}}d}{{{f{E@n}}{f{E@n}}}d}{{f{f{c}}}d{}}00000{{{f{Df}}c}{{A`{{f{Dfe}}BDf}}}DAd{}}``{{{f{Df}}}{{A`{b}}}}{{{f{DfE@l}}}{{A`{bBDf}}}}{{{f{E@b}}{f{DfHl}}}{{A`{bHn}}}}{{{f{E@d}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CLn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{E@f}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}00000{{{f{Bl}}}{{A`{E@b}}}}{{{f{Bl}}}{{A`{E@n}}}}{{{f{Bl}}g}{{A`{CLnn}}}{{If{Bl}}}{{BAj{El}}}{{Ib{}{{Cj{{Hh{ce}}}}}}}}{{{f{EA`}}d}{{A`{E@dn}}}}{{{f{E@f}}{f{CMh}}}{{A`{EAbn}}}}{{{f{E@f}}{f{CMh}}{Nj{Gd}}}{{A`{EAbn}}}}{{{f{E@f}}{f{CMh}}{f{{Bh{{Nj{Gd}}}}}}}{{A`{{Gl{EAb}}n}}}}{{{f{Bl}}{Ch{{f{CLn}}}}}{{A`{{Gl{El}}n}}}}{{{f{E@b}}{f{Dfc}}}bAE`}{{{f{CLn}}{f{Dfc}}}bAE`}{{{f{E@f}}{f{CMh}}}{{A`{EAdn}}}}{{}Gd}00000{{}c{}}00000`{{{f{Bl}}{Ch{{f{CLn}}}}}{{A`{E@ln}}}}{{{f{Bl}}d}{{A`{E@dn}}}}{{{N`{CMf}}}E@f}{{{N`{CMf}}CMh}{{A`{E@ln}}}}{{{f{Bl}}}{{A`{CMhn}}}}``{{{f{Df}}c}{{A`{{f{Dfe}}BDf}}}DAd{}}`{{{f{E@b}}c}A`A@f}{{{f{CLn}}c}A`A@f}{{{f{Df}}g}{{A`{eBDf}}}{}{}{{ABd{{f{Dfc}}}{{Ad{e}}}}}}{fc{}}00{c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{fAAn}00000======{{CLne}CLn{{BAj{El}}}{{Ib{}{{Cj{{Hh{E@bc}}}}}}}}{{CLn{Ch{EAf}}}CLn}{{CLnGd}CLn}{{{f{DfE@l}}{f{{Bh{Bf}}}}}{{A`{GdBDf}}}}{{{f{Df}}{f{{Bh{Bf}}}}}{{A`{b}}}}{{{f{Df}}c}{{A`{GdBDf}}}DJd}`````````{{fh}b}0{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{EAf}}}EAf}{{{f{EAh}}}EAh}{{f{f{Dfc}}}b{}}0{fb}0{Gd{{f{c}}}{}}000{Gd{{f{Dfc}}}{}}000{c{{A`{EAf}}}ADn}{Gdb}000{{{f{EAj}}{f{EAj}}}d}{{{f{EAf}}{f{EAf}}}d}{{{f{EAh}}{f{EAh}}}d}{{f{f{c}}}d{}}00000000{{{f{EAj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{EAf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{EAh}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{EAlEAj}{EAnEAj}222{cEAf{{Eb{}{{Ad{{CMl{{Cn{CMj}}}}}}}}InJ`}}{EB`EAf}{{{EBd{EBb}}}EAf}{{{f{EAf}}{f{Dfc}}}bAE`}{{{f{EAh}}{f{Dfc}}}bAE`}{{}Gd}000{{}c{}}000{EBf{{N`{EBh}}}}{EAf{{N`{EBh}}}}{EAh{{N`{EBh}}}}``{{{f{EAf}}c}A`A@f}{fc{}}0`{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{fAAn}0008888```````````````````````````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{Bh{Bf}}}}}{{Ch{EBj}}}}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{cc{}}{{}Gd}{{}c{}}{{{f{{Bh{Bf}}}}{f{Df{Gl{Bf}}}}}{{A`{{f{{Bh{Bf}}}}n}}}}<;:1`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eANd{}{{Ib{}{{Cj{c}}}}}}0{{AGhe}ANf{}{{Ib{}{{Cj{c}}}}}}0{{{f{ANl}}}{{f{En}}}}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}}{{Ch{{f{{Bh{c}}}}}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{AN`}}{f{AN`}}c}{{A`{AN`n}}}AOl}{{{f{AOn}}{f{En}}}{{A`{Abn}}}}{{{f{AOn}}{f{En}}G`}{{A`{Abn}}}}`{BAbe{}{{ANd{c}}ALj}}0{{BAbAGh}e{}{{ANf{c}}ALj}}0{{{AOh{Bl}}}En}{{{f{AOn}}}{{f{En}}}}``{{AOl{f{{l{Fd}}}}{f{{l{Fd}}}}}{{A`{{l{Fd}}n}}}}{{{Gl{c}}AGh}{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{Gl{c}}AGh}{{ALj{}{{ANn{e}}{AO`{c}}{AOb{g}}}}}{AOd{AOf{e}}}Jf{{Hb{}{{Cj{e}}}}JhInJ`}}{{GdcAGh}{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{GdAGh}{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}Gd}{{Ch{c}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{AOn}}Gd}{{A`{Jjn}}}}{{{f{AOn}}Gd}Jj}{{}En}{{{f{BBj}}Gd}Jj}4{{BBlEn}{{A`{Mjn}}}}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}}{{AH`{cgAGn}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}}{{Ch{c}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{{{f{AN`}}{f{AN`}}}{{A`{{Hh{AN`AN`}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hh{{l{Ah}}{l{Ah}}}}n}}}}{{{f{En}}{f{En}}}{{A`{Enn}}}}`{{}c{}}0{g{{A`{ANde}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGhg}{{A`{ANfe}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{BAb{{A`{eg}}}{}{{ANd{c}}ALj}{}}0{{BAbAGh}{{A`{eg}}}{}{{ANf{c}}ALj}{}}0{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}Gd}cJf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}0{{{f{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}}}gJf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}{Gdc{}}0{{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}{Ch{Id}}}{{ALj{}{{ANn{c}}{AO`{e}}{AOb{g}}}}}Jf{AOd{AOf{c}}}{{Hb{}{{Cj{c}}}}JhInJ`}}```````````{{{f{AN`}}{f{AN`}}c}{{A`{AN`n}}}AOl}{{AOl{f{{l{Fd}}}}{f{{l{Fd}}}}}{{A`{{l{Fd}}n}}}}=<`````````{{}b}0{{}d}`{{{f{{L`{LfLb}}}}{f{{l{Bj}}}}CLf{Gh{Hd}{{Ad{AMj}}}}{Gh{AMj}{{Ad{Hd}}}}{f{AMl}}{f{AMl}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bl}}}}{Gh{Hd}{{Ad{AMj}}}}{Gh{AMj}{{Ad{Hd}}}}{f{AMl}}{f{AMl}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bl}}}}{f{{l{Bj}}}}CLf}{{A`{{L`{LfLb}}n}}}}```{{c{Ch{Id}}}DCn{}}{{{DD`{Hd}}{DD`{Bf}}{Ch{Id}}}DDb}{{{DD`{Hd}}{DD`{Bf}}{Ch{Id}}}DDd}`{D@fBC`}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{D@fLd}BC`}3{{D@fBC`Ld}BC`}{{D@fDd}BC`}555{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}8{cc{}}9{{}Gd}{{}c{}};;;;;;;;;;{{D@f{Ch{Dd}}BC`CLf}BC`}{{D@fBC`}BC`}={{D@f{f{Bl}}}BC`}>;0>>>>>>>1{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6{D@fBC`}0?0`{{{f{BJj}}{f{AB`}}{f{Cb}}}{{A`{Abn}}}}{{{f{BJj}}}{{A`{{f{Dd}}n}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}EBl}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{EBl{Ch{{f{AGh}}}}}{{A`{AF`n}}}}{cc{}}{{}Gd}{{}c{}}{{{f{EBl}}}d}{{GdGd}EBl}{{{f{DfEBl}}{Cn{Cl}}}b}{{{f{DfEBl}}}b}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}7`{{{f{{l{c}}}}}GdAl}0``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{EBn}}}EBn}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{c{{A`{EBn}}}ADn}{Gdb}{{{f{EBn}}{f{EBn}}}d}{{{f{EBn}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}{{{f{EBn}}{f{Dfc}}}bAE`}{{}Gd}{{}c{}}{{{f{EBn}}c}A`A@f}{fc{}}{fEl}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GnBCf}}}}{fAAn}7````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{EC`}}}EC`}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{c{{A`{EC`}}}ADn}{Gdb}{{{f{EC`}}{f{EC`}}}d}{{{f{EC`}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}{{{f{EC`}}{f{Dfc}}}bAE`}{{}Gd}{{}c{}}{{{f{EC`}}c}A`A@f}{fc{}}{fEl}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GnBCf}}}}{fAAn}7{{MbMb}Mb}{{{f{{l{Fd}}}}Jl}{{A`{bn}}}}{{{f{{AMb{Jl}}}}Jl}{{A`{bn}}}}```{{{f{Ab}}CEl}Ab}{{{f{Fh}}{f{Fh}}d}{{A`{Fhn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}ChM`{{Eb{}{{Ad{}}}}Ed}}{{{f{Ab}}{f{Cb}}}Ab}0{{{f{Ab}}Dd}Ab}0`{{fh}b}{{{f{ECb}}}{{f{AGj}}}}{{{f{DfECb}}}{{Cn{Cl}}}}{{{f{DfECb}}}{{f{DfAGj}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{ECb}}}ECb}{{f{f{Dfc}}}b{}}{fb}{{}ECb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{ECb}}}{{f{AGh}}}}{{{f{DfECb}}Gd}b}{{{f{ECb}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{}Gd}{{}c{}}{{{f{ECb}}}Gd}{GdECb}{{{f{DfECb}}}b}70{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}{{{f{ECb}}}{{Ch{{f{ECd}}}}}}8```````{{fh}b}{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{DH`}}{f{Df{Bh{Fh}}}}}{{A`{{Ch{Fh}}n}}}}{{{f{EB`}}AB`}{{A`{AB`n}}}}{{{f{EB`}}}EB`}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}00{Gd{{f{Dfc}}}{}}00{c{{A`{EB`}}}ADn}{Gdb}00{{{f{EB`}}{f{EB`}}}d}{{f{f{c}}}d{}}00{{{f{EB`}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}0{{{EBd{EBb}}}EB`}1{{{f{ECf}}{f{{BEb{En}}}}DEb{f{{Bh{Oj}}}}}{{A`{Ojn}}}}{{}Gd}00{{}c{}}00{{{EBd{EBb}}{Ch{En}}dd}DH`}{{{Ch{En}}}ECf}{{{f{EB`}}c}A`A@f}{fc{}}{{{f{{Bh{Bf}}}}}{{A`{EB`n}}}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{{{f{DH`}}{f{Df{Gl{Bf}}}}}{{A`{bn}}}}{{{f{ECf}}{f{Df{Gl{Bf}}}}}{{A`{bn}}}}{{{f{EB`}}}{{A`{{Gl{Bf}}n}}}}{fAAn}00;;;{{{f{{Bh{Fh}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{AMdn}}}}{{{f{{Bh{Fh}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{Kb{Hd}}n}}}}{{Dd{f{{Bh{Fh}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{l{Ff}}n}}}}{{Dd{f{{Bh{Ab}}}}}{{A`{{l{Ff}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bh{Ab}}}}}{{A`{AMdn}}}}{{{f{{Bh{Ab}}}}}{{A`{{l{Ff}}n}}}}00`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DMb}}}DMb}{{f{f{Dfc}}}b{}}{fb}{{}DMb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{{BEj{EnA@n}}}}}En}{{{f{DMb}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{DMb}}}Gd}{{{f{DMb}}}{{N`{{BEb{En}}}}}}{{{f{Bl}}dd}En}{{{f{DEh}}Bf{Ch{Gd}}d{Ch{{f{{BEb{En}}}}}}GdGd{Ch{{f{CFj}}}}{Ch{Bf}}Bf{Ch{{f{CFl}}}}dd{f{Df{Ch{Gd}}}}d}{{A`{{Hh{{BEb{En}}GdGd}}n}}}}{{}Gd}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{{f{DEh}}{f{CFd}}}{{A`{DMbn}}}}{{}{{A`{c}}}{}}{fAAn}5{{DMb{N`{{BEb{En}}}}}DMb}````{{{f{{l{c}}}}eAMfd}{{Gl{Jl}}}Dn{{D`{}{{Cj{Ch}}}}}}{{{f{{Bh{f}}}}cJle}{{Gl{Jl}}}{{D`{}{{Cj{Ch}}}}}{{Eb{fGdf}{{Ad{d}}}}}}``{{{f{ECh}}}{{f{Ab}}}}{{{f{CCf}}}{{A`{{l{Kl}}n}}}}{{{f{CCf}}}{{A`{{l{Of}}n}}}}0{{{f{CCf}}}{{A`{{l{An}}n}}}}22112{{{f{CCf}}}{{A`{{l{O`}}n}}}}322{{{f{CCf}}{f{Bl}}}{{A`{Abn}}}}{{{f{CCf}}Ld}{{A`{{l{Lb}}n}}}}1445`{{Gd{f{Df{Gl{d}}}}}b}```{{{f{AKl}}GdGd}AKl}0{{Gd{f{{Bh{Fh}}}}{f{DfFj}}}{{A`{{AMh{{l{Fd}}}}n}}}}```````````11```{{{f{C@b}}}{{f{{l{Bj}}}}}}{{{f{C@f}}}{{A`{{l{Bj}}n}}}}{{{f{C@f}}}{{l{Bj}}}}{{{f{C@f}}{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{C@f}}{f{Bl}}d}{{A`{{l{An}}n}}}}{{{f{C@f}}{f{{l{Bj}}}}dd}{{A`{{l{An}}n}}}}{{{f{C@f}}{f{Bl}}}{{A`{{l{An}}n}}}}{{{f{C@f}}{f{Bl}}d}{{A`{{l{Fd}}n}}}}{{{f{C@f}}{f{{l{Bj}}}}d}{{A`{{l{Fd}}n}}}}{{{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{Bl}}}El}{{{f{C@f}}{f{{l{Bj}}}}Gd}{{A`{{l{Bj}}n}}}}{{{f{C@f}}{f{Bl}}}{{A`{{l{Ah}}n}}}}{{{f{C@f}}{f{{l{Bj}}}}}{{A`{{l{Ah}}n}}}}{{{f{C@f}}{f{Bl}}{f{En}}}{{A`{Abn}}}}7{{{f{C@f}}{f{{l{Bj}}}}dd}{{A`{{l{Fd}}n}}}}{{{f{C@f}}{f{Bl}}}{{A`{{l{Fd}}n}}}}?>{{{f{{Bh{{f{{l{Bj}}}}}}}}{f{Bl}}d}{{A`{{l{Bj}}n}}}}{{{f{C@f}}{f{Bl}}{f{Bl}}}{{A`{{l{Bj}}n}}}}0{{{f{C@f}}{f{Bl}}{f{Bl}}Gd}{{A`{{l{Bj}}n}}}}1{{{f{C@f}}{f{{l{Bj}}}}}{{l{Ah}}}}{{{f{C@f}}{f{{l{Bj}}}}Gd}{{A`{{l{j}}n}}}}0{{{f{{l{Bj}}}}{f{{l{Bj}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{Eb{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}2{{{f{{l{Bj}}}}{f{{l{Bj}}}}Gded}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bl}}}}}}}{{Eb{{f{Bl}}{f{Bl}}}{{Ad{c}}}}}}2{{{f{C@f}}}{{l{Bj}}}}{{{f{C@f}}{f{Fh}}}{{A`{{l{Bj}}n}}}}{{{f{{l{Bj}}}}{f{Bl}}d}{{l{Bj}}}}{{{f{C@f}}}{{l{Fd}}}}03{{{f{C@f}}{f{Fh}}{f{Fh}}}{{A`{{l{Bj}}n}}}}3{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Bj}}}}404040{{{f{C@f}}{f{{l{Bj}}}}}{{l{Bj}}}}10{{{f{C@f}}{f{{l{Fd}}}}d}{{A`{{l{Lb}}n}}}}777````````{{eGdGd}{{ECj{Hd}}}{{If{Bl}}}{{D`{}{{Cj{c}}}}}}{{eGdGd}{{Kb{Hd}}}{{If{{Bh{Bf}}}}}{{D`{}{{Cj{c}}}}}}``````````````{{fh}b}0{{{f{BKn}}}Aj}{{Dd{Gl{{Cn{Cl}}}}{f{AGh}}}{{A`{Abn}}}}{{Dd{Gl{{Cn{Cl}}}}{f{AGh}}{Ch{{f{{DMj{DdDd}}}}}}}{{A`{Abn}}}}{{AbAb}}{{{f{Ab}}c}{}{B`Mh}}{{Abc}{}{B`Mh}}{{{f{Ab}}{f{Ab}}}}`{{{f{BKn}}}{{A`{Mjn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}}{{Ch{Gd}}}}0{{{f{BKn}}Fb}{{l{Fd}}}}{{{f{BKn}}}{{A`{{l{Fd}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{C`}}}}n}}}}{{{f{Ab}}Gd}{{f{{Cn{Cl}}}}}}{{{f{BKn}}}{{f{AGj}}}}{{{f{DfBKn}}}{{f{DfAGj}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DfBKn}}}{{f{Df{l{c}}}}}Dn}{{{f{BKn}}}{{f{{l{c}}}}}Dn}{{{f{Ab}}}{{f{BKn}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DfBKn}}}{{A`{Gdn}}}}{{{f{DfAb}}}{{A`{Gdn}}}}{{{f{Ab}}}{{A`{{f{{l{Bd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{BKn}}{f{Ab}}}{{A`{Abn}}}}00{{{f{Ab}}}{{A`{{f{{l{An}}}}n}}}}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{BKn}}}{{Ch{{Cn{Fn}}}}}}{{{f{BKn}}{f{En}}G`}{{A`{Abn}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}0{{{f{Ab}}{f{En}}G`}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{AN`}}n}}}}8{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}Bb}{{{f{BKn}}}{{Gj{{Gf{{Cn{Cl}}}}{Gh{{f{{Cn{Cl}}}}}{{Ad{Gd}}}}}}}}{{{f{Ab}}}{{`{{D`{}{{Cj{Gd}}}}}}}}{{{f{BKn}}}{{f{{Gl{{Cn{Cl}}}}}}}}{{{f{DfBKn}}}{{f{Df{Gl{{Cn{Cl}}}}}}}}{{{f{DfAb}}}{{f{Df{Gl{{Cn{Cl}}}}}}}}{{{f{Ab}}}Ab}{{{f{Mb}}}Mb}1{{{f{BKn}}}{{N`{BKn}}}}{{f{f{Dfc}}}b{}}0{fb}0{{{f{DfAb}}}b}{{{f{Ab}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Ab}{Gd{{f{c}}}{}}00{{{f{Ab}}}f}1{Gd{{f{Dfc}}}{}}000{c{{A`{Mb}}}ADn}{c{{A`{Ab}}}ADn}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{B`Mh}}{{Abc}{}{B`Mh}}{{AbAb}}{Gdb}000{{{f{BKn}}}Ab}{{{f{BKn}}}{{f{En}}}}{{{f{Ab}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Mb}}{f{Mb}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AIh{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}c}{}BAl}{{{f{Ab}}{f{Bl}}}{{A`{{l{An}}n}}}}<2{{{f{Ab}}{f{Bl}}}}2=44{{f{f{c}}}d{}}00{{{f{Ab}}}Gd}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}JjGd}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Ej}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{BKn}}}{{E`{Oj}}}}{{{f{Ab}}AIf}{{A`{Abn}}}}{{{f{BKn}}{f{{l{An}}}}}{{A`{Abn}}}}{{{f{BKn}}}Mj}{{{f{Mb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Ab}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{Ab}}}El}{cc{}}00{{{L`{LfLb}}}Ab}1{EClAb}{{{L`{KnKl}}}Ab}{{{L`{LnLb}}}Ab}{{{l{c}}}AbDn}{{{L`{LlLb}}}Ab}{{Dd{f{{Bh{Jj}}}}d}{{A`{Abn}}}}{{Dd{f{{Bh{Jj}}}}{f{En}}d}{{A`{Abn}}}}{{Dd{Cn{Cl}}}{{A`{Abn}}}}{{Dd{Gl{{Cn{Cl}}}}}{{A`{Abn}}}}{{Dd{Gl{{Cn{Cl}}}}{f{En}}}Ab}{cAb{{Ib{}{{Cj{{Ch{Kf}}}}}}}}{cAb{{Ib{}{{Cj{{f{Oh}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Bf}}}}}}}}{cAb{{Ib{}{{Cj{Bf}}}}}}{cAb{{Ib{}{{Cj{{f{Bf}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Nh}}}}}}}}{cAb{{Ib{}{{Cj{Nh}}}}}}{cAb{{Ib{}{{Cj{{f{Nh}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Jl}}}}}}}}{cAb{{Ib{}{{Cj{El}}}}}}{cAb{{Ib{}{{Cj{{Ch{El}}}}}}}}{cAb{{Ib{}{{Cj{Jl}}}}}}{cAb{{Ib{}{{Cj{{f{Bl}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{{f{Bl}}}}}}}}}}{cAb{{Ib{}{{Cj{{f{d}}}}}}}}{cAb{{Ib{}{{Cj{d}}}}}}{cAb{{Ib{}{{Cj{{f{Jl}}}}}}}}{cAb{{Ib{}{{Cj{Oh}}}}}}{cAb{{Ib{}{{Cj{{f{Aj}}}}}}}}{cAb{{Ib{}{{Cj{Aj}}}}}}{cAb{{Ib{}{{Cj{{Ch{Aj}}}}}}}}{cAb{{Ib{}{{Cj{{f{Kd}}}}}}}}{cAb{{Ib{}{{Cj{Kd}}}}}}{cAb{{Ib{}{{Cj{{Ch{Kd}}}}}}}}{cAb{{Ib{}{{Cj{{f{Hd}}}}}}}}{cAb{{Ib{}{{Cj{Hd}}}}}}{cAb{{Ib{}{{Cj{Kf}}}}}}{cAb{{Ib{}{{Cj{{f{Kf}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Hd}}}}}}}}{cAb{{Ib{}{{Cj{{f{Nn}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Oh}}}}}}}}{cAb{{Ib{}{{Cj{Nn}}}}}}{cAb{{Ib{}{{Cj{{Ch{Nn}}}}}}}}{cAb{{Ib{}{{Cj{{f{Ob}}}}}}}}{cAb{{Ib{}{{Cj{Ob}}}}}}{cAb{{Ib{}{{Cj{{Ch{Ob}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{d}}}}}}}}{{Dd{Gl{Aj}}}Ab}{{Dd{Gl{Hd}}}Ab}{{Dd{Gl{Kd}}}Ab}{{Dd{Gl{Kf}}}Ab}{{Dd{Gl{Oh}}}Ab}{{Dd{Gl{Jl}}}Ab}{{Dd{Gl{Nh}}}Ab}{{Dd{Gl{Ob}}}Ab}{{Dd{Gl{Bf}}}Ab}{{Dd{Gl{Od}}}Ab}{{Dd{Gl{Nn}}}Ab}{{DdGd{f{En}}}Ab}{{{f{Ab}}GdGd}Ab}{{{f{BKn}}Gd}{{A`{Jjn}}}}{{{f{Ab}}}Gd}{{{f{Ab}}}Jn}{{{f{Ab}}}Ab}{{{f{BKn}}}{{Ch{{Nb{Fn}}}}}}{{{f{BKn}}Gd}{{Ch{{f{K`}}}}}}{{{f{BKn}}GdGd}{{Ch{{f{K`}}}}}}{{{f{BKn}}Gd}Jj}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}BAl}{{{f{Ab}}{f{Bl}}}}201{{{f{BKn}}}d}{{{f{Mb}}{f{Dfc}}}bAE`}{{{f{Ab}}{Ch{Gd}}}Ab}{{{f{Ab}}}{{A`{{f{{l{O`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Of}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fd}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Gd}000{{}c{}}000{{}Fh}{AbAB`}2{BGbAb}{AbAb}>{{{f{Ab}}}{{A`{{l{An}}n}}}}000{{{f{BKn}}}{{l{An}}}}0{{}d}0{{{f{Ab}}}Mb}{{{f{Ab}}}ECn}{{{f{Ab}}}{{`{{D`{}{{Cj{Ab}}}}}}}}{{{f{BKn}}}Mj}{{{f{BKn}}}Gd}{{{f{Ab}}}Gd}{{{f{BKn}}Gd}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Ab}}}{{Hh{{Gl{{Hf{Hd}}}}{Gl{{Ch{Id}}}}}}}}{{{f{Ab}}}Ab}{AbBC`}{{{f{Ab}}{f{Bl}}}}{{{f{Ab}}c}{}BAl}{{{f{Ab}}{f{Ab}}}}021{{{f{Ab}}}{{A`{{Ch{c}}n}}}Mh}{{{f{BKn}}}{{A`{Mjn}}}}{{{f{BKn}}}{{Ch{Aj}}}}{{{f{Ab}}}Mj}1232{{AbAb}}5{{{f{Ab}}c}{}{B`Mh}}{{Abc}{}{B`Mh}}{{{f{BKn}}}Gd}{{{f{Ab}}}Gd}{{{f{BKn}}}{{A`{Gdn}}}}{{{f{BKn}}}{{f{Dd}}}}{{Ddc}Ab{{If{{Bh{{Ch{{f{Bl}}}}}}}}}}{{Ddc}Ab{{If{{Bh{Nh}}}}}}{{Ddc}Ab{{If{{Bh{Ob}}}}}}{{Ddc}Ab{{If{{Bh{Nn}}}}}}{{Ddc}AbBGb}{{Ddc}Ab{{If{{Bh{AMn}}}}}}{{Ddc}Ab{{If{{Bh{Jj}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{BBf}}}}}}}}{{Ddc}Ab{{If{{Bh{BBf}}}}}}{{Ddc}Ab{{If{{Bh{{Gl{Bf}}}}}}}}{{Ddc}Ab{{If{{Bh{Hd}}}}}}{{Ddc}Ab{{If{{Bh{Od}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{AMj}}}}}}}}{{Ddc}Ab{{If{{Bh{Oh}}}}}}{{Ddc}Ab{{If{{Bh{Kd}}}}}}{{Ddc}Ab{{If{{Bh{AMj}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{BBh}}}}}}}}{{Ddc}Ab{{If{{Bh{BBh}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{{E`{{Bh{Bf}}}}}}}}}}}}{{Ddc}Ab{{If{{Bh{{E`{{Bh{Bf}}}}}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{{f{{Bh{Bf}}}}}}}}}}}}{{Ddc}Ab{{If{{Bh{{f{{Bh{Bf}}}}}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{{E`{Bl}}}}}}}}}}{{Ddc}Ab{{If{{Bh{{E`{Bl}}}}}}}}{{Ddc}Ab{{If{{Bh{Aj}}}}}}{{Ddc}Ab{{If{{Bh{Jl}}}}}}{{Dd{f{Ab}}}Ab}{{Ddc}Ab{{If{{Bh{{f{Bl}}}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{AMn}}}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{Ab}}}}}}}}{{Ddc}Ab{{If{{Bh{Ab}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{{Gl{Bf}}}}}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{d}}}}}}}}{{Dd{Nj{Jl}}}Ab}{{Ddc}Ab{{If{{Bh{El}}}}}}{{Dd{Nj{Kf}}}Ab}{{Ddc}Ab{{If{{Bh{Kf}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{Bf}}}}}}}}{{Dd{Nj{Nn}}}Ab}{{Dd{Nj{Hd}}}Ab}{{Ddc}Ab{{If{{Bh{{Ch{Aj}}}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{Nh}}}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{Jl}}}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{Kf}}}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{Kd}}}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{Oh}}}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{Ob}}}}}}}}{{Ddc}Ab{{If{{Bh{d}}}}}}{{Ddc}Ab{{If{{Bh{Bf}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{Od}}}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{Nn}}}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{Hd}}}}}}}}{{Ddc}Ab{{If{{Bh{{Ch{El}}}}}}}}{{Dd{f{En}}}Ab}{{{f{BKn}}GdGd}Ab}{{DdGd}Ab}{{{f{DfECn}}}Ch}{{{f{{AIh{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}c}{}BAl}{{{f{Ab}}{f{Bl}}}{{A`{{l{An}}n}}}}{{{f{Ab}}{f{Ab}}}}302{{{f{Ab}}{f{Bl}}}}{{{f{Ab}}}{{A`{{f{ADj}}n}}}}{{{f{BKn}}}Gd}`{{{f{BKn}}}{{A`{Mjn}}}}{{{f{Ab}}}{{Cn{Jd}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{BKn}}AjA@`}{{A`{Mjn}}}}{{{f{BKn}}}Ab}{{{f{BKn}}}{{Ch{Id}}}}{{{f{Ab}}c}{}{B`Mh}}:{{Abc}{}{B`Mh}}{{{f{DfBKn}}Dd}b}{{{f{DfAb}}Dd}{{f{DfAb}}}}{{{f{Ab}}{f{{Bh{B@l}}}}}{{A`{Abn}}}}06{MbMb}{{{f{BKn}}{f{Eb}}A@b}{{A`{Abn}}}}{{{f{Ab}}Ajdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gddd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gd}Ab}{{{f{Mb}}c}A`A@f}{{{f{Ab}}c}A`A@f}{{{f{DfAb}}Mb}b}{{{f{BKn}}Hd}Ab}{{{f{DfBKn}}}b}{{{f{DfAb}}}b}{{{f{Ab}}{Ch{Kf}}}Ab}{{{f{ECn}}}{{Hh{Gd{Ch{Gd}}}}}}{{{f{BKn}}HdGd}Ab}{{{f{Ab}}HdGd}Ab}{{{f{Ab}}Fb}{{A`{Abn}}}}{{{f{BKn}}Fb}{{A`{Abn}}}}{{{f{BKn}}Hd}{{Hh{AbAb}}}}{{{f{Ab}}Hd}{{Hh{AbAb}}}}{{{f{BKn}}Bf}{{Ch{Aj}}}}{{{f{BKn}}Bf}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{{f{{l{Bj}}}}n}}}}{{{f{Ab}}Gd}{{A`{{E`{Bl}}n}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{{f{Ab}}c}{}{B`Mh}}{{Abc}{}{B`Mh}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{{f{Ab}}}{{A`{cn}}}Mh}{{{f{BKn}}}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{Ab}}{Ch{Gd}}}Ab}{{{f{BKn}}{f{{l{Fd}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bh{A@j}}}}Mb}Ab}{{{f{Ab}}{f{{Bh{A@j}}}}}Ab}{{{f{BKn}}{f{{Bh{Jl}}}}}{{A`{Abn}}}}{{{f{BKn}}{f{{Bh{Jl}}}}}Ab}{{{f{BKn}}{f{{l{Fd}}}}}Ab}{{{f{Ab}}{f{{Bh{Jl}}}}}Ab}{{{f{Ab}}}{{A`{{f{{L`{LnLb}}}}n}}}}{{{f{Ab}}GdB@f}{{Cn{Cl}}}}{{{f{Ab}}{Ch{{f{Bl}}}}d}{{A`{AB`n}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}{fc{}}0{{{f{Ab}}}{{E`{Ab}}}}{fEl}{{AbAb}{{A`{Abn}}}}{{{f{Ab}}}{{Ch{{f{{l{C`}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Bd}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Ff}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{An}}}}}}}}{{{f{Ab}}}{{Ch{{f{AN`}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Ej}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Eh}}}}}}}}{c{{A`{e}}}{}{}}000{{{Hh{Dd{Gl{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hh{Dd{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hh{{f{BB`}}{Gl{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hh{{f{BB`}}{Cn{Cl}}}}}{{A`{Abn}}}}{{{f{Ab}}}{{Ch{{f{{l{O`}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Of}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Fd}}}}}}}}{{}{{A`{c}}}{}}000{{{f{Ab}}}{{Ch{{f{{l{Ah}}}}}}}}{{AbAb}{{A`{Abn}}}}{{Ddc}{{A`{Ab}}}{}}{{{f{Ab}}}{{Ch{{f{ADj}}}}}}{{{f{DfAb}}{Kh{c}}}dDn}{{{f{Ab}}}{{Ch{{f{{l{Bj}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{j}}}}}}}}5{{{f{Ab}}}{{Ch{{f{{L`{LnLb}}}}}}}}{f{{A`{GnBCf}}}}{{{f{Ab}}}{{Ch{{f{{l{Nf}}}}}}}};{{{f{Ab}}}{{Ch{{f{{l{Nl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Nd}}}}}}}}{fAAn}000{{{f{Ab}}}{{A`{{f{{l{Nf}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{BKn}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BKn}}}{{A`{{f{{l{c}}}}n}}}Dn}{{{f{BKn}}Bf}{{Ch{Aj}}}}{{{f{BKn}}Bf}{{A`{Mjn}}}}{{}c{}}000{{AbDd}Ab}{{{f{Ab}}c}Ab{B`Mh}}{{{f{BKn}}}{{A`{Mjn}}}}{{{f{Ab}}{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}``{{fh}b}{{{f{Ef}}}{{f{Ab}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ef}}}Ef}{{f{f{Dfc}}}b{}}{fb}{{{f{Ef}}}Ab}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{cc{}}{{}Gd}{{}c{}}{{{ED`{Ab}}}Ef}{{{f{DfEf}}{f{Df{Cn{Cl}}}}}b}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6{{{f{DfEf}}{f{Df{Cn{Cl}}}}e}c{}{{Eb{{f{Ef}}}{{Ad{c}}}}}}```````````{{fh}b}{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BLj{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BLn}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bn}}}}{f{Ab}}}{{A`{Abn}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{EDb}}}EDb}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}987{Gdb}{{{f{EDb}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{EDb}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{}Gd}{{}c{}}?>=?>=?>={fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}4``{{{f{CCh}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Gb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{CCh}}c}{{A`{Abn}}}Bb}{{{f{{l{Gb}}}}c}{{A`{Abn}}}Bb}```{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{D@b}}}D@b}{{f{f{Dfc}}}b{}}{fb}{{}D@b}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{c{{A`{D@b}}}ADn}{Gdb}{{{f{D@b}}{f{D@b}}}d}{{f{f{c}}}d{}}00{{{f{D@b}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{D@b}}{f{Dfc}}}bAE`}{{}Gd}{{}c{}}{{{f{D@b}}c}A`A@f}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}5","D":"AEKnCHl","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",12753],[5,"StructType",2027,12754],[5,"ChunkedArray",17,12755],[6,"PolarsError",3646,12756],[6,"Result",12757],[5,"Series",12173,12758],[17,"Output"],[10,"FnMut",12759],[5,"ListType",2027,12754],[1,"f64"],[10,"PolarsNumericType",2027,12754],[5,"BooleanType",2027,12754],[10,"Num",12760],[10,"ToPrimitive",12761],[5,"BinaryType",2027,12754],[1,"u8"],[1,"slice"],[5,"StringType",2027,12754],[1,"str"],[10,"NumOpsDispatchInner",12671,12762],[5,"FixedSizeListType",2027,12754],[6,"GroupsProxy",4311,12763],[5,"ObjectType",2027,12754],[10,"PolarsObject",1567,12764],[6,"Option",12765],[17,"Item"],[10,"Array",12766],[5,"Box",12767],[10,"Iterator",12768],[5,"AmortizedListIter",12769],[5,"PlSmallStr",2027,12770],[0,"mut"],[17,"IsNested"],[5,"FalseT",2027,12754],[17,"IsObject"],[10,"PolarsDataType",2027,12754],[6,"Cow",12771],[10,"Fn",12759],[10,"Copy",12772],[5,"AmortSeries",12647,12773],[5,"Float64Type",2027,12754],[5,"Float32Type",2027,12754],[5,"String",12774],[6,"DataType",2027,12775],[5,"View",12776],[5,"SortOptions",1697,12777],[5,"UInt32Type",2027,12754],[5,"BinaryOffsetType",2027,12754],[6,"Column",4033,12778],[5,"SortMultipleOptions",1697,12777],[10,"PolarsIntegerType",2027,12754],[10,"MetadataTrait",1281,12779],[6,"CastOptions",1173,12780],[10,"NumOpsDispatchCheckedInner",12718,12781],[1,"usize"],[5,"Iter",12782],[1,"fn"],[5,"Map",12783],[5,"Vec",12784],[5,"CompactString",12785],[5,"MetadataProperties",1281,12786],[10,"DoubleEndedIterator",12787],[1,"i64"],[5,"OffsetsBuffer",12788],[1,"tuple"],[17,"HasViews"],[5,"Formatter",12789],[5,"Error",12789],[17,"Array"],[10,"IntoIterator",12790],[5,"Bitmap",12791],[10,"AsRef",12792],[10,"PolarsAsRef",12793],[10,"Borrow",12794],[10,"IntoParallelIterator",12795],[10,"Send",12772],[10,"Sync",12772],[10,"NoOption",12796],[10,"ExactSizeIterator",12797],[10,"Clone",12798],[10,"TrustedLen",12799],[6,"AnyValue",2027,12800],[1,"u32"],[5,"MetadataFlags",1281,12786],[10,"PolarsObjectSafe",1567,12764],[5,"BinaryArray",12801],[1,"f32"],[1,"u64"],[5,"Metadata",1281,12786],[5,"RwLockWriteGuard",12802],[5,"Int32Type",2027,12754],[5,"DateType",2027,12754],[5,"Logical",2027,12803],[5,"Int64Type",2027,12754],[6,"TimeUnit",2027,12804],[5,"DatetimeType",2027,12754],[5,"Int128Type",2027,12754],[5,"DecimalType",2027,12754],[5,"DurationType",2027,12754],[5,"TimeType",2027,12754],[10,"PolarsFloatType",2027,12754],[6,"IsSorted",12173,12805],[10,"PolarsIterator",1224,12806],[6,"ChunkedArrayLayout",17,12755],[10,"NumCast",12761],[5,"Scalar",4680,12807],[6,"MetadataReadGuard",1281,12808],[5,"IMMetadata",1281,12809],[5,"Arc",4680,12810],[5,"RwLockReadGuard",12802],[5,"UInt8Type",2027,12754],[5,"UInt16Type",2027,12754],[1,"u16"],[5,"Range",12811],[5,"UInt64Type",2027,12754],[1,"i32"],[5,"Int16Type",2027,12754],[1,"i16"],[1,"i128"],[5,"Int8Type",2027,12754],[1,"i8"],[5,"Field",2027,12812],[10,"ParallelIterator",12795],[10,"IndexedParallelIterator",12795],[6,"QuantileMethod",4680,12813],[5,"RollingOptionsFixedWindow",4680,12814],[10,"PolarsOpsNumericType",12815],[10,"Serializer",12816],[10,"Sized",12772],[5,"ChunkId",4680,12817],[17,"IsStruct"],[5,"RandomState",12818],[5,"BytesHash",12819],[5,"OwnedRepr",12820],[1,"array"],[5,"Dim",12821],[5,"ArrayBase",12822],[5,"ViewRepr",12822],[6,"Either",12823],[5,"TypeId",12824],[5,"DataFrame",3747,12825],[5,"NullableIdxSize",4680,12817],[10,"FnOnce",12759],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",867,12826],[5,"AnonymousListBuilder",895,12827],[5,"AnonymousOwnedListBuilder",895,12827],[5,"ListBooleanChunkedBuilder",895,12828],[5,"ListPrimitiveChunkedBuilder",895,12829],[10,"ListBuilderTrait",895,12830],[10,"ChunkedBuilder",895,12831],[5,"ListStringChunkedBuilder",895,12832],[5,"ListBinaryChunkedBuilder",895,12832],[5,"ListNullChunkedBuilder",895,12833],[5,"BinViewChunkedBuilder",895,12834],[10,"ViewType",12835],[5,"BooleanChunkedBuilder",895,12836],[5,"NullChunkedBuilder",895,12837],[5,"PrimitiveChunkedBuilder",895,12838],[5,"NullChunked",12839],[10,"NewChunkedArray",895,12831],[10,"Deserializer",12840],[10,"Hasher",12841],[10,"ChunkedCollectInferIterExt",1204,12842],[10,"ChunkedCollectIterExt",1204,12842],[10,"Canonical",1218,12843],[10,"ChunkedCollectParIterExt",1220,12844],[10,"FromParIterWithDtype",1220,12844],[5,"BooleanArray",12845],[5,"BoolIterNoNull",1224,12806],[5,"FixedSizeListArray",12846],[5,"FixedSizeListIterNoNull",1224,12806],[5,"SomeIterator",1224,12806],[5,"MetadataEnv",1281,12847],[10,"MetadataCollectable",1281,12848],[5,"Iter",12849],[5,"IterNames",12849],[5,"File",12850],[5,"Mutex",12851],[6,"MetadataMerge",1281,12786],[5,"RwLock",12802],[5,"ObjectArray",1567,12764],[6,"ArrowDataType",2027,12852],[10,"Any",12824],[10,"Debug",12789],[5,"BitmapIter",12853],[6,"ZipValidity",12854],[5,"ObjectChunkedBuilder",1644,12855],[10,"AnonymousObjectBuilder",1668,12856],[5,"ObjectRegistry",1668,12856],[10,"ChunkAgg",1697,12857],[17,"FuncRet"],[10,"ChunkApply",1697,12857],[10,"ChunkApplyKernel",1697,12857],[10,"ChunkSort",1697,12857],[10,"ChunkUnique",1697,12857],[10,"ChunkCast",1697,12857],[6,"FillNullStrategy",1697,12857],[10,"ChunkCompareEq",12173,12857],[10,"ChunkExplode",1697,12857],[10,"ChunkFillNullValue",1697,12857],[10,"ChunkFilter",1697,12857],[10,"ChunkFull",1697,12857],[10,"ChunkFullNull",1697,12857],[10,"ChunkAnyValue",1697,12857],[10,"ChunkCompareIneq",1697,12857],[10,"IsFirstDistinct",1697,12857],[10,"IsLastDistinct",1697,12857],[10,"ChunkQuantile",1697,12857],[10,"ChunkExpandAtIndex",1697,12857],[10,"Reinterpret",1697,12857],[10,"ChunkReverse",1697,12857],[10,"ChunkRollApply",1697,12857],[10,"ChunkSet",1697,12857],[10,"ChunkShift",1697,12857],[10,"ChunkShiftFill",1697,12857],[10,"SlicedArray",1697,12858],[10,"ChunkVar",1697,12857],[10,"ChunkTake",1697,12857],[10,"ChunkTakeUnchecked",1697,12857],[10,"ChunkBytes",1697,12857],[10,"ChunkZip",1697,12857],[10,"BinaryFnMut",1913,12859],[10,"StaticArray",2027,12860],[10,"TernaryFnMut",1913,12859],[10,"Error",12861],[10,"UnaryFnMut",1913,12859],[5,"PrimitiveArray",12862],[5,"RowsEncoded",12863],[6,"SearchSortedSide",1963,12864],[5,"NoNull",4680,12865],[5,"NaiveDateTime",12866],[6,"Tz",12867],[5,"NaiveTime",12868],[5,"CategoricalChunked",2027,12869],[5,"CategoricalChunkedBuilder",2027,12870],[10,"ArrayFromIter",2027,12871],[10,"ArrayFromIterDtype",2027,12871],[5,"Path",12872],[5,"OsStr",12873],[10,"AsRefDataType",2027,12775],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",12874],[10,"From",12792],[5,"BinaryViewArrayGeneric",12835],[6,"RevMapping",2027,12875],[10,"CategoricalMergeOperation",2027,12876],[10,"LogicalType",2027,12803],[6,"CategoricalOrdering",2027,12875],[5,"OwnedObject",2027,12800],[6,"UnknownKind",2027,12775],[5,"CompatLevel",2027,12775],[5,"CategoricalType",2027,12754],[5,"Dimension",2027,12877],[6,"ReshapeDimension",2027,12877],[6,"ArrowTimeUnit",2027],[6,"Ordering",12878],[10,"ArrayCollectIterExt",2027,12871],[5,"GlobalRevMapMerger",2027,12876],[1,"char"],[10,"FromIterator",12790],[10,"Into",12792],[10,"NumericNative",2027,12754],[6,"SerializableDataType",12879],[5,"ArrowField",4680],[6,"IntegerType",12880],[6,"PrimitiveType",12881],[5,"TimeDelta",12882],[5,"NaiveDate",12883],[10,"GetAnyValue",2027,12800],[10,"IntoScalar",2027,12884],[5,"CatIter",2027,12869],[6,"Expr",4680,12885],[1,"u128"],[6,"PhysicalType",12880],[6,"ToCompactStringError",12785],[5,"Arguments",12789],[5,"StringCacheHolder",3607,12886],[5,"EnumChunkedBuilder",3626,12887],[5,"ErrString",3646,12756],[6,"PolarsWarning",3646,12888],[6,"ParquetError",12889],[5,"TryReserveError",12890],[5,"Error",12891],[6,"Error",12892],[6,"Error",12893],[5,"Utf8Error",12894],[5,"Error",12895],[10,"Display",12789],[5,"Schema",12896],[10,"IntoColumn",4033,12778],[6,"NullStrategy",3747,12825],[6,"UniqueKeepStrategy",3747,12825],[5,"HashSet",12897],[5,"Row",4568,12898],[5,"GroupBy",4311,12899],[5,"DynamicGroupOptions",4680,12900],[5,"RangeFull",12811],[5,"RangeToInclusive",12811],[5,"RangeTo",12811],[5,"RangeFrom",12811],[5,"RangeInclusive",12811],[5,"RecordBatchIter",3747,12825],[5,"PhysRecordBatchIter",3747,12825],[5,"LazyFrame",4680,12901],[10,"IntoSeries",12173,12902],[5,"RollingGroupOptions",4680,12900],[10,"RangeBounds",12811],[10,"IntoVec",4680,12865],[6,"IndexOrder",4680,12903],[5,"StructArray",4680,12904],[5,"RecordBatchT",12905],[5,"Duration",4680,12906],[5,"ScalarColumn",4033,12907],[6,"BitRepr",12173,12805],[5,"UnpivotArgsIR",4280,12908],[5,"GroupsIdx",4311,12763],[5,"UnitVec",12909],[6,"GroupByMethod",4311,12899],[5,"SlicedGroups",4311,12763],[5,"GroupsProxyParIter",4311,12763],[10,"UnindexedConsumer",12910],[6,"GroupsIndicator",4311,12763],[6,"IRAggExpr",12911],[10,"IntoGroupsProxy",4311,12912],[5,"Copied",12913],[5,"Zip",12914],[5,"GroupsProxyIter",4311,12763],[6,"RollingFnParams",4680,12915],[10,"IsFloat",12916],[10,"NativeType",12917],[10,"AggList",4552,12918],[10,"TakeExtremum",4552,12919],[10,"PhysicalAggExpr",4565,12920],[6,"AnyValueBuffer",4568,12921],[6,"AnyValueBufferTrusted",4568,12921],[5,"Node",12922],[6,"IR",12923],[5,"Arena",12922],[6,"AExpr",12911],[10,"JoinDispatch",4680,12924],[5,"JoinArgs",4680,12925],[5,"StructNameSpace",4680,12926],[10,"SeriesTrait",12173,12805],[10,"DfTake",4680,12927],[10,"DataFrameOps",4680,12928],[5,"CsvReader",4680,12929],[10,"PhysicalIoExpr",12930],[10,"MmapBytesReader",12931],[10,"LhsNumOps",12671,12762],[6,"Selector",4680,12932],[10,"NumOpsDispatch",12671,12762],[5,"LazyGroupBy",4680,12901],[5,"OptFlags",4680,12933],[10,"Allocator",12934],[5,"JoinBuilder",4680,12901],[10,"AnonymousScan",4680,12935],[5,"ScanArgsAnonymous",4680,12936],[10,"FunctionOutputField",4680,12937],[5,"SpecialEq",4680,12937],[6,"VisitRecursion",12938],[6,"FunctionExpr",4680,12939],[10,"ArgAgg",4680,12940],[5,"ArrayNameSpace",4680,12941],[5,"ListNameSpace",4680,12942],[5,"FieldsMapper",4680,12943],[5,"IpcStreamReader",4680,12944],[10,"Read",12945],[10,"ColumnsUdf",4680,12937],[10,"AsBinary",4680,12946],[10,"StringMethods",10765,12947],[5,"BorrowedFd",12948],[10,"AsFd",12948],[10,"AsList",4680,12949],[10,"AsRawFd",12950],[6,"AggExpr",4680,12885],[10,"SeriesSealed",4680,12951],[10,"AsString",4680,12952],[20,"MaybeUninit",12953],[10,"StringNameSpaceImpl",4680,12954],[5,"OwnedBatchedCsvReader",4680,12955],[5,"CsvWriter",4680,12956],[5,"BatchedWriter",12956],[10,"Write",12945],[5,"IpcWriter",4680,12957],[5,"BatchedWriter",12957],[5,"ParquetReader",4680,12958],[5,"BatchedParquetReader",4680,12959],[5,"ParquetAsyncReader",4680,12958],[5,"ParquetWriter",4680,12960],[5,"BatchedWriter",12961],[5,"BatchedCsvReader",4680,12955],[5,"BinaryNameSpace",10589,12962],[6,"Operator",4680,12885],[10,"RenameAliasFn",4680,12937],[10,"Service",12963],[5,"Request",12964],[5,"UserDefinedFunction",4680,12965],[10,"ColumnBinaryUdf",4680,12937],[5,"InProcessQuery",4680,12966],[5,"HashMap",12967],[5,"CategoricalNameSpace",4680,12968],[10,"RoundSeries",4680,12969],[10,"TemporalMethods",12063,12970],[10,"NumOpsDispatchChecked",12718,12781],[5,"LazyCsvReader",4680,12971],[5,"ScanArgsIpc",4680,12972],[5,"LazyJsonLineReader",4680,12973],[5,"ScanArgsParquet",4680,12974],[5,"RollingOptionsDynamicWindow",4680,12975],[5,"Bounds",4680,12976],[6,"ClosedWindow",4680,12977],[6,"Label",4680,12977],[6,"StartBy",4680,12977],[5,"Window",4680,12978],[6,"JoinCoalesce",4680,12925],[6,"JoinType",4680,12925],[6,"JoinValidation",4680,12925],[5,"AsOfOptions",4680,12979],[6,"AsofStrategy",4680,12979],[6,"InequalityOperator",4680,12980],[5,"IEJoinOptions",4680,12980],[6,"InterpolationMethod",4680,12981],[6,"ClosedInterval",4680,12982],[6,"RankMethod",4680,12983],[5,"RankOptions",4680,12983],[5,"CsvReadOptions",4680,12984],[5,"CsvParseOptions",4680,12984],[6,"CsvEncoding",4680,12984],[6,"CommentPrefix",4680,12984],[6,"NullValues",4680,12984],[5,"When",4680,12985],[5,"Then",4680,12985],[5,"ChainedWhen",4680,12985],[5,"ChainedThen",4680,12985],[5,"CsvWriterOptions",4680,12986],[5,"SerializeOptions",4680,12986],[6,"QuoteStyle",4680,12986],[5,"IpcScanOptions",4680,12987],[5,"IpcReadOptions",4680,12988],[5,"IpcWriterOptions",4680,12957],[6,"IpcCompression",4680,12957],[5,"JsonWriterOptions",4680,12989],[5,"ParquetOptions",4680,12990],[6,"ParallelStrategy",4680,12990],[6,"LazySerde",4680,12885],[6,"Excluded",4680,12885],[5,"ParquetWriteOptions",4680,12991],[6,"ParquetCompression",4680,12991],[5,"GzipLevel",4680,12991],[5,"StatisticsOptions",4680,12992],[5,"BrotliLevel",4680,12991],[5,"ZstdLevel",4680,12991],[6,"BooleanFunction",4680,12993],[6,"CategoricalFunction",4680,12994],[6,"TemporalFunction",4680,12995],[5,"FileMetadata",4680,12996],[6,"PowFunction",4680,12997],[6,"StringFunction",4680,12998],[6,"StructFunction",4680,12999],[5,"DatetimeArgs",4680,13000],[5,"DurationArgs",4680,13000],[5,"RollingCovOptions",4680,13001],[5,"StrptimeOptions",4680,13001],[5,"JoinOptions",4680,13001],[6,"WindowType",4680,13001],[6,"WindowMapping",4680,13001],[6,"NestedType",4680,13001],[5,"UnpivotArgsDSL",4680,13001],[6,"LiteralValue",4680,13002],[5,"AnonymousScanOptions",4680,13003],[5,"UnionArgs",4680,13003],[6,"DslPlan",4680,13004],[5,"RollingVarParams",4680,12915],[5,"RollingQuantileParams",4680,12915],[6,"NonExistent",4680,13005],[5,"Id",13006],[10,"Subscriber",13007],[10,"LazyFileListReader",4680,13008],[5,"CloudOptions",10901,13009],[10,"Ord",12878],[6,"ColumnOrder",13010],[10,"BinaryNameSpaceImpl",4680,13011],[10,"ObjectStore",12893],[5,"Path",13012],[10,"Future",13013],[5,"Pin",13014],[5,"JsonLineReader",4680,13015],[5,"IpcReaderAsync",4680,12988],[5,"FileMetadata",13016],[5,"RowGroupMetadata",13017],[10,"CrossJoin",4680,13018],[10,"ExprEvalExtension",4680,13019],[5,"Current",13006],[10,"DateMethods",10765,13020],[10,"DatetimeMethods",10765,13021],[10,"DurationMethods",10765,13022],[5,"IpcStreamWriterOption",4680,12944],[10,"BinaryUdfOutputField",4680,12937],[10,"Default",13023],[5,"CStr",13024],[10,"Stream",13025],[5,"ParquetStatistics",4680],[5,"ColumnChunkMetadata",13026],[10,"Deserialize",12840],[6,"NullBehavior",12724,13027],[5,"Weak",12810],[5,"DateLikeNameSpace",11546,13028],[5,"Metadata",13029],[10,"SeriesMethods",4680,13030],[10,"PartialEq",12878],[10,"Scalar",13031],[10,"ListNameSpaceExtension",4680,13032],[5,"Event",13033],[10,"Command",13034],[5,"PathBuf",12872],[10,"SerReader",4680,13035],[10,"SerWriter",4680,13035],[5,"IpcReader",4680,12987],[5,"IpcStreamWriter",4680,12944],[5,"JsonWriter",4680,12989],[5,"JsonReader",4680,12989],[10,"UdfSchema",4680,13036],[5,"MutableStatistics",13037],[6,"ArrayFunction",13038],[6,"ListFunction",13039],[6,"RangeFunction",13040],[6,"BinaryFunction",13041],[1,"never"],[5,"OsString",12873],[10,"ToOwned",12771],[5,"CString",13042],[5,"MutableStructArray",13043],[5,"GrowableStruct",13044],[10,"SchemaExt",4680,13045],[10,"FromData",11540,13046],[5,"Buffer",13047],[10,"FromDataUtf8",11540,13046],[10,"FromDataBinary",11540,13046],[5,"ListArray",13048],[6,"Ambiguous",4680,13005],[10,"NamedFromOwned",4680,13049],[10,"DataFrameJoinOps",4680,13050],[5,"FunctionOptions",13003],[10,"PartialOrd",12878],[6,"Context",13004],[5,"GetOptions",12893],[5,"BoundsIter",4680,12978],[6,"ReaderBytes",12931],[10,"PolarsTemporalGroupby",4680,12900],[10,"Hash",12841],[10,"SeriesJoin",4680,13051],[10,"TimeMethods",10765,13052],[5,"NonZero",13053],[10,"IntoListNameSpace",4680,13032],[5,"BatchedParquetIter",12959],[5,"StructValueIter",13054],[17,"DataType"],[10,"SchemaNamesAndDtypes",4680,13045],[10,"AsofJoinBy",4680,13055],[10,"ListNameSpaceImpl",4680,13056],[5,"ExprNameNameSpace",4680,13057],[5,"KeyValue",13058],[10,"IntoLazy",4680,12901],[10,"Literal",4680,13002],[5,"Null",4680,13002],[10,"CloneToUninit",12798],[5,"SuperTypeOptions",13059],[5,"PythonUdfExpression",11956,13060],[5,"RowIndex",13061],[5,"LevelFilter",13029],[10,"ChunkAggSeries",4680,13062],[10,"QuantileAggSeries",4680,13063],[10,"IndexToUsize",4680,13064],[10,"NamedFrom",4680,13049],[6,"RowGroupFetcher",12959],[5,"Attributes",13006],[6,"ScanSources",13065],[5,"SplitNChars",4680,13066],[5,"AnonymousScanArgs",4680,12935],[5,"Request",12861],[5,"PutPayload",13067],[5,"PutMultipartOpts",12893],[5,"PutOptions",12893],[10,"SeriesRank",4680,12983],[5,"BorrowedCursor",13068],[10,"VarInt",13069],[5,"IoSliceMut",12945],[5,"Record",13006],[5,"Interest",13007],[10,"SeriesOpsTime",10765,13070],[10,"PolarsRound",4680,13071],[10,"ChunkedSet",4680,12815],[5,"SchemaDescriptor",13072],[6,"SeekFrom",12945],[10,"Serialize",12816],[5,"LocalFutureObj",13073],[5,"SpawnError",13074],[10,"LocalSpawn",13074],[5,"FutureObj",13073],[10,"Spawn",13074],[10,"VarAggSeries",4680,13075],[5,"StringNameSpace",13076],[10,"TakeChunked",4680,12927],[5,"IRPlan",12923],[10,"ToDummies",4680,13077],[10,"PolarsTruncate",4680,13078],[5,"FileMetaData",13058],[5,"AllocError",12934],[5,"SchemaInferenceResult",12030,13079],[10,"PolarsUpsample",4680,13080],[10,"VecHash",4680,13081],[6,"JsonFormat",4680,12989],[5,"BTreeMap",13082],[10,"WriteDataFrameToFile",13035],[5,"IoSlice",12945],[6,"PrefilterMaskSetting",10499,12959],[5,"MemSlice",13083],[6,"Filter",13084],[10,"ArrayNameSpace",10570,13085],[10,"AsArray",10570,13086],[6,"Buffer",10606,13087],[6,"DynByteSourceBuilder",10683,13088],[6,"DynByteSource",10683,13088],[5,"ObjectStoreByteSource",10683,13088],[5,"MemSliceByteSource",10683,13088],[10,"ByteSource",10683,13088],[10,"AsString",10831,12947],[6,"Pattern",10831,13089],[5,"DatetimeInfer",10870,13090],[10,"StrpTimeParser",10870,13090],[17,"Error"],[10,"TryFromWithUnit",10870,13090],[6,"AmazonS3ConfigKey",10901,13091],[5,"CloudLocation",10901,13092],[5,"PolarsObjectStore",10901,13093],[10,"AsyncWrite",13094],[10,"Unpin",12772],[5,"CloudWriter",10901,13095],[6,"CloudType",10901,13009],[5,"Url",13096],[5,"Bytes",13097],[5,"ObjectMeta",12893],[6,"PlCredentialProvider",11082,13098],[5,"CredentialProviderFunction",11082,13098],[5,"AwsCredential",11082,13099],[5,"InstanceCredentials",13099],[5,"SessionCredentials",13099],[5,"PythonFunction",11956,13100],[5,"PyAny",13101],[5,"Py",13102],[10,"IntoCredentialProvider",11082,13098],[10,"CredentialProvider",13103],[6,"SupportedCompression",11210,13104],[5,"AnonymousBuilder",11601,13105],[6,"RollingFunction",11845,13106],[6,"RollingFunctionBy",11878,13107],[5,"MutableNullArray",11925,13108],[5,"MutableBitmap",13109],[5,"PythonGetOutput",11956,13060],[10,"AsSeries",12063,12970],[5,"Utf8Array",13110],[5,"_SerdeSeries",12778],[5,"SeriesIter",12173,13111],[5,"Rc",13112],[6,"NumericListOp",12671,13113],[8,"FillNullLimit",1697],[10,"InitHashMaps",2027],[10,"InitHashMaps2",2027],[5,"TrueT",2027],[8,"PolarsResult",3646],[15,"IO",10479],[15,"Context",10479],[15,"Count",10473],[15,"Slice",10474],[8,"OpaqueColumnUdf",4680],[8,"QuantileInterpolOptions",4680],[8,"ChunkJoinOptIds",4680],[10,"ListFromIter",4680],[15,"Quantile",10354],[15,"Min",10354],[15,"Max",10354],[15,"IsBetween",11798],[15,"Any",11798],[15,"All",11798],[15,"GroupBy",10364],[15,"Union",10364],[15,"Sort",10364],[15,"Scan",10364],[15,"ExtContext",10364],[15,"DataFrameScan",10364],[15,"IR",10364],[15,"Select",10364],[15,"HStack",10364],[15,"MapFunction",10364],[15,"Cache",10364],[15,"Filter",10364],[15,"Distinct",10364],[15,"Slice",10364],[15,"Sink",10364],[15,"Join",10364],[15,"HConcat",10364],[15,"PythonScan",10364],[15,"SortBy",10416],[15,"Filter",10416],[15,"Cast",10416],[15,"Sort",10416],[15,"Gather",10416],[15,"RenameAlias",10416],[15,"Ternary",10416],[15,"Function",10416],[15,"Window",10416],[15,"AnonymousFunction",10416],[15,"Slice",10416],[15,"BinaryExpr",10416],[15,"Round",11801],[15,"RoundSF",11801],[15,"Clip",11801],[15,"BackwardFill",11801],[15,"ForwardFill",11801],[15,"Random",11801],[15,"GatherEvery",11801],[15,"ValueCounts",11801],[15,"Rank",11801],[15,"ReplaceStrict",11801],[15,"CumCount",11801],[15,"CumSum",11801],[15,"CumProd",11801],[15,"CumMin",11801],[15,"CumMax",11801],[15,"Range",10476],[15,"ConcatHorizontal",11823],[15,"ConcatVertical",11823],[15,"ExtractGroups",11823],[15,"SplitExact",11823],[15,"Contains",11823],[15,"Find",11823],[15,"Replace",11823],[15,"DatetimeFunction",11837],[5,"Utf8Field",10606],[5,"CategoricalField",10606],[5,"DatetimeField",10606],[15,"Datetime",10680],[6,"ObjectStoreCredential",11082],[10,"Utf8FromIter",12169],[10,"BinaryFromIter",12169]],"r":[[1,13114],[2,13114],[3,13114],[4,13114],[6,12886],[7,13114],[8,13114],[9,13114],[13,13114],[14,13114],[16,12886],[17,12755],[18,12755],[19,12755],[24,13115],[116,12755],[140,12755],[141,12755],[169,12755],[171,12755],[226,12755],[279,12755],[424,12755],[471,12755],[579,12755],[582,12755],[736,12755],[867,12826],[895,12827],[896,12827],[897,12834],[898,12834],[899,12836],[900,12831],[901,12832],[902,12828],[903,12830],[904,12833],[905,12829],[906,12832],[907,12831],[908,12837],[909,12838],[910,12834],[1047,12831],[1063,12830],[1091,12831],[1156,12827],[1157,12827],[1158,12832],[1159,12828],[1160,12830],[1161,12833],[1162,12829],[1163,12832],[1171,12830],[1173,12780],[1204,12842],[1205,12842],[1218,12843],[1220,12844],[1221,12844],[1224,12806],[1225,12806],[1226,12806],[1227,12806],[1263,12806],[1279,13116],[1280,13116],[1286,12809],[1291,12786],[1292,12848],[1293,12847],[1294,12786],[1295,12786],[1296,12786],[1297,12808],[1298,12779],[1567,12764],[1568,12764],[1569,12764],[1570,12764],[1582,12764],[1613,12764],[1614,13117],[1644,12855],[1668,12856],[1669,12856],[1670,12856],[1671,12856],[1684,12856],[1685,12856],[1686,12856],[1689,12856],[1691,12856],[1698,12857],[1699,12857],[1700,12857],[1701,12857],[1702,12857],[1703,12857],[1704,12857],[1705,12857],[1706,12857],[1707,12857],[1708,12857],[1709,12857],[1710,12857],[1711,12857],[1712,12857],[1713,12857],[1714,12857],[1715,12857],[1716,12857],[1717,12857],[1718,12857],[1719,12857],[1720,12857],[1721,12857],[1722,12857],[1723,12857],[1724,12857],[1725,12857],[1728,12857],[1729,12857],[1739,12857],[1740,12858],[1742,12777],[1743,12777],[1757,12857],[1805,12857],[1808,12857],[1817,12857],[1820,12857],[1862,12857],[1865,12857],[1874,12857],[1911,12857],[1913,12859],[1917,12859],[1918,12859],[1919,12859],[1920,12859],[1921,12859],[1922,12859],[1923,12859],[1924,12859],[1925,12859],[1926,12859],[1927,12859],[1928,12859],[1929,12859],[1930,12859],[1931,12859],[1932,12859],[1933,12859],[1934,12859],[1935,12859],[1936,12859],[1937,12859],[1938,12859],[1939,12859],[1940,12859],[1941,12859],[1942,12859],[1943,12859],[1944,12859],[1945,12859],[1946,12859],[1947,12859],[1948,12859],[1949,13118],[1950,13118],[1951,13119],[1952,13119],[1953,13119],[1954,13120],[1955,13120],[1956,13120],[1957,13120],[1958,13120],[1959,13120],[1960,13120],[1961,13120],[1962,13120],[1966,12864],[1968,12864],[1988,12864],[1995,12858],[1996,13121],[1997,13121],[1998,13121],[1999,13121],[2002,13122],[2003,12858],[2004,12777],[2005,12777],[2016,13123],[2017,13124],[2018,13124],[2019,13124],[2020,13123],[2021,13123],[2022,13125],[2023,13123],[2024,13124],[2025,13124],[2026,13124],[2028,12800],[2032,12754],[2033,12871],[2034,12871],[2035,12871],[2036,12852],[2038,12775],[2042,12754],[2044,12754],[2045,12754],[2047,12754],[2052,12754],[2053,12754],[2054,12869],[2057,12869],[2058,12870],[2059,12876],[2060,12875],[2062,12754],[2063,12775],[2064,12775],[2065,12775],[2066,12775],[2071,13126],[2072,12754],[2075,13127],[2077,12754],[2082,13128],[2083,12754],[2085,12877],[2089,13129],[2090,12754],[2097,12754],[2098,12812],[2099,12812],[2102,12754],[2108,12754],[2109,12754],[2113,12754],[2114,12754],[2115,12800],[2117,12876],[2121,13130],[2122,13064],[2123,13130],[2124,13130],[2126,13131],[2127,13130],[2129,12754],[2130,12754],[2134,12754],[2135,12754],[2139,12754],[2140,12754],[2144,12754],[2145,12754],[2149,12754],[2150,12754],[2152,12884],[2163,12754],[2164,12754],[2166,12803],[2167,12803],[2179,12754],[2182,12754],[2184,12754],[2185,12800],[2189,13131],[2190,13131],[2191,13130],[2192,13131],[2193,13131],[2194,13131],[2195,12770],[2196,12754],[2197,12754],[2198,12754],[2199,12754],[2201,12877],[2202,12875],[2205,12860],[2209,12754],[2211,12754],[2216,12754],[2221,13132],[2222,12754],[2223,12804],[2224,12775],[2227,12754],[2231,12754],[2232,12754],[2236,12754],[2237,12754],[2241,12754],[2242,12754],[2246,12754],[2247,12754],[2251,12775],[2434,12876],[2447,12803],[2579,12775],[2769,12803],[3174,12876],[3175,12876],[3180,12775],[3584,12869],[3585,12869],[3586,12870],[3587,12876],[3588,12875],[3590,12876],[3594,12875],[3595,12876],[3597,12876],[3598,12876],[3599,12869],[3600,12869],[3601,12875],[3606,12875],[3607,12886],[3613,12886],[3616,12886],[3624,12886],[3626,12887],[3652,12756],[3659,12756],[3660,12756],[3661,12888],[3678,12756],[3691,12756],[3708,12888],[3715,12756],[3717,12756],[3718,12756],[3719,12756],[3720,12756],[3721,12888],[3722,12756],[3744,13133],[3745,13133],[3746,13133],[3748,12825],[3753,12825],[3754,12825],[3756,12825],[3757,12825],[3800,12825],[3840,12825],[3872,12825],[3944,12825],[4033,12778],[4034,12778],[4036,12907],[4280,12908],[4311,12763],[4314,12899],[4315,12899],[4317,12763],[4318,12763],[4319,12763],[4320,12763],[4321,12763],[4322,12763],[4325,12763],[4327,12912],[4339,12763],[4348,12899],[4419,12899],[4429,12899],[4552,12918],[4553,12919],[4554,12919],[4555,12919],[4556,12919],[4557,12919],[4558,12919],[4559,12919],[4560,12919],[4561,12919],[4565,12920],[4570,12921],[4571,12921],[4591,12898],[4625,12898],[4646,12898],[4660,12898],[4661,12898],[4662,12898],[4678,13134],[4679,13135],[4683,12885],[4690,12933],[4692,13005],[4695,12935],[4696,12935],[4697,13003],[4704,12800],[4705,12810],[4706,12940],[4709,12826],[4714,12754],[4715,12871],[4717,12871],[4718,12871],[4719,12941],[4720,12766],[4721,12852],[4723,13136],[4725,12946],[4726,12949],[4728,12979],[4729,12775],[4730,12952],[4732,12979],[4733,13055],[4734,12979],[4737,13137],[4743,12955],[4744,12959],[4749,12754],[4750,12834],[4753,13011],[4755,12754],[4756,12754],[4758,12754],[4759,12937],[4766,12754],[4767,12836],[4768,12993],[4769,12754],[4770,12763],[4773,12976],[4774,12978],[4776,12991],[4787,12869],[4791,12869],[4792,12870],[4793,12994],[4794,12876],[4795,12968],[4796,12875],[4798,12754],[4802,12985],[4803,12985],[4804,12857],[4805,13062],[4806,12857],[4807,12857],[4808,12857],[4809,12857],[4810,12857],[4811,12857],[4812,12857],[4813,12857],[4814,12857],[4815,12857],[4816,12857],[4817,12857],[4818,12857],[4819,12817],[4820,12925],[4821,12857],[4822,12857],[4823,12857],[4824,12857],[4825,12857],[4826,12857],[4827,12857],[4828,12857],[4829,12857],[4830,12857],[4831,12857],[4832,12857],[4833,12755],[4834,12831],[4835,12842],[4836,12842],[4837,12815],[4839,12982],[4840,12977],[4843,12778],[4845,12937],[4849,12937],[4851,12984],[4852,12775],[4864,13018],[4865,12984],[4866,12984],[4867,12984],[4868,12929],[4869,12956],[4870,12986],[4877,12775],[4878,12775],[4879,12825],[4880,13050],[4881,12928],[4885,12775],[4893,13126],[4894,13020],[4896,12754],[4900,13000],[4901,13127],[4903,13021],[4905,12754],[4912,13128],[4913,12754],[4917,12927],[4920,12877],[4925,13004],[4929,12906],[4935,13000],[4936,13129],[4937,13022],[4938,12754],[4939,12900],[4953,12885],[4957,12885],[4958,13019],[4959,13057],[4968,13137],[4969,13137],[4970,12754],[4971,12812],[4975,12812],[4976,12943],[4977,13057],[4978,12996],[4979,13138],[4981,12857],[4982,12857],[4992,12754],[5000,12754],[5001,12754],[5006,12754],[5007,12754],[5015,13046],[5016,13046],[5017,13046],[5021,12939],[5022,12937],[5026,12800],[5028,12937],[5030,12876],[5031,12899],[5033,12899],[5035,12763],[5036,12763],[5037,12763],[5038,12763],[5039,12763],[5040,12763],[5047,12991],[5058,13130],[5060,12980],[5061,13137],[5067,13064],[5068,13130],[5069,12763],[5070,12817],[5071,13130],[5074,12966],[5076,12903],[5077,13064],[5078,12980],[5080,13131],[5081,13130],[5083,12925],[5086,12754],[5087,12754],[5092,12754],[5093,12754],[5098,12754],[5099,12754],[5104,12754],[5105,12754],[5110,12754],[5111,12754],[5115,12981],[5117,12778],[5118,12912],[5119,12901],[5120,13032],[5121,12884],[5122,12902],[5123,12865],[5125,12957],[5126,12988],[5127,12987],[5128,12988],[5129,12987],[5130,12944],[5131,12944],[5132,12944],[5133,12957],[5134,12957],[5137,12857],[5141,12857],[5156,12925],[5157,12901],[5158,12925],[5159,12924],[5160,13001],[5162,12925],[5163,12925],[5166,12989],[5167,13015],[5169,12989],[5170,12989],[5171,12989],[5175,12977],[5177,13139],[5179,13139],[5180,13139],[5186,12971],[5187,13008],[5188,12901],[5189,12901],[5190,12973],[5191,12885],[5198,12925],[5203,12762],[5210,12832],[5211,12828],[5212,12830],[5213,12754],[5215,13140],[5216,12942],[5217,13032],[5218,13056],[5219,12829],[5220,12832],[5221,12754],[5222,13002],[5224,13002],[5226,12803],[5229,12803],[5282,13002],[5287,13049],[5288,13049],[5301,13001],[5303,12831],[5305,12865],[5306,13005],[5317,13002],[5325,12984],[5326,12817],[5327,12817],[5328,12762],[5329,12781],[5330,12754],[5333,12754],[5335,12754],[5340,12885],[5341,12885],[5342,12933],[5351,12955],[5352,12800],[5354,13141],[5357,12990],[5358,12958],[5359,12991],[5360,12990],[5361,12958],[5363,12991],[5364,12960],[5367,13131],[5368,13131],[5369,13130],[5370,13131],[5371,13131],[5372,13131],[5373,12770],[5375,12754],[5376,12756],[5377,12754],[5378,12754],[5379,12806],[5380,12754],[5381,12764],[5382,12756],[5383,13071],[5384,12900],[5385,13078],[5387,13080],[5389,12997],[5392,12838],[5397,13063],[5398,12813],[5399,12813],[5401,12986],[5410,12983],[5411,12983],[5412,12857],[5414,12937],[5423,12877],[5424,12875],[5434,13001],[5437,12915],[5438,12900],[5439,12975],[5440,12814],[5441,12915],[5442,13142],[5443,12915],[5448,12969],[5449,13143],[5457,12807],[5461,12936],[5462,12972],[5463,12974],[5464,13045],[5465,13045],[5468,13045],[5469,13045],[5470,12864],[5474,12932],[5477,13035],[5478,13035],[5479,12986],[5480,12758],[5483,13051],[5484,13030],[5485,13070],[5486,12983],[5487,12951],[5488,12805],[5501,12858],[5502,12763],[5508,12777],[5509,12777],[5510,12937],[5515,13066],[5517,12977],[5519,12860],[5520,12992],[5528,12886],[5530,12754],[5531,12834],[5533,12998],[5534,12947],[5535,12954],[5537,12754],[5544,13001],[5548,12904],[5549,13115],[5552,12999],[5553,12926],[5555,12754],[5565,12927],[5567,12995],[5568,12970],[5570,12985],[5578,13132],[5579,13052],[5581,12754],[5582,12804],[5583,12775],[5587,13077],[5601,12754],[5608,12754],[5609,12754],[5614,12754],[5615,12754],[5620,12754],[5621,12754],[5626,12754],[5627,12754],[5628,13144],[5629,13036],[5633,13003],[5635,12825],[5638,12775],[5639,13001],[5640,12908],[5643,12965],[5653,13075],[5654,13081],[5658,12985],[5660,12978],[5663,13001],[5664,13001],[5674,12991],[5772,13145],[5777,13146],[5778,13145],[5791,13147],[5802,12899],[5804,13148],[5807,13149],[5821,13149],[5832,13150],[5838,13151],[5841,13152],[5854,13153],[5859,13153],[5862,12857],[5872,13154],[5898,13155],[5902,13156],[5906,13157],[5915,13151],[5917,12985],[6193,13158],[6195,13144],[6204,12876],[6209,13156],[6220,13151],[6234,13159],[6237,13160],[6239,13160],[6241,13160],[6539,13161],[6547,13149],[6551,13162],[6552,13148],[6554,13163],[6567,13148],[6576,13144],[6580,13163],[6582,13164],[6585,13163],[6586,13163],[6587,13164],[6588,13164],[6597,13140],[6598,13165],[6606,13166],[6607,13167],[6609,13167],[6610,13166],[6611,12775],[6613,12959],[6618,13168],[6620,13149],[6621,13168],[6623,13168],[6625,13168],[6627,13149],[6628,13168],[6634,13114],[6636,13152],[6637,13154],[6638,13000],[6640,13152],[6641,13152],[6642,13124],[6643,13124],[6644,13124],[6712,13140],[6713,12924],[6988,13037],[7068,13114],[7070,13169],[7223,13170],[7224,13151],[7233,13148],[7234,13148],[7236,13000],[7245,12906],[7246,12906],[7247,13045],[7515,13171],[7516,13171],[7526,13141],[7527,13141],[7528,13141],[7534,12899],[7555,12857],[7593,13151],[7598,13140],[7602,12857],[7607,13172],[7715,12899],[7719,13149],[7723,13164],[7962,12857],[7972,13151],[7974,12857],[8000,13141],[8013,13137],[8025,12977],[8026,12977],[8111,13173],[8122,13174],[8123,13175],[8124,13175],[8126,13176],[8138,13148],[8141,13064],[8142,13079],[8283,13152],[8284,13152],[8285,13177],[8286,12981],[8288,13177],[8289,13178],[8447,12982],[8449,13141],[8457,13179],[8463,13180],[8466,13181],[8475,13156],[8478,13156],[8485,13165],[8521,13151],[8530,13166],[8531,13166],[8539,13151],[8551,13002],[8599,12876],[8600,12876],[8605,13150],[8616,13151],[8619,13151],[8629,13182],[8630,13137],[8632,13156],[8644,13156],[8650,13156],[8660,12775],[8671,13156],[8692,13154],[8730,13154],[8741,13183],[8742,13184],[8790,13185],[8815,13156],[8820,13151],[8821,13140],[8858,13137],[8876,12756],[8877,12756],[8878,12756],[8879,12756],[8884,13050],[8897,13151],[8898,13156],[8934,13149],[8942,12989],[8948,13186],[8949,13187],[8951,13188],[8958,13188],[8959,13188],[8961,13175],[8963,13141],[9018,12857],[9057,13158],[9061,12857],[9153,13159],[9206,12857],[9228,13066],[9230,13066],[9251,13173],[9261,13154],[9262,13189],[9264,13189],[9266,13189],[9268,13189],[9270,13189],[9285,13156],[9310,12985],[9314,13152],[9464,13166],[9465,13166],[9780,12959],[9925,13151],[9951,13140],[10120,12985],[10343,13190],[10352,12857],[10502,12959],[10505,12959],[10509,13182],[10514,13191],[10516,13192],[10521,12918],[10522,12919],[10523,12919],[10524,12919],[10525,12919],[10526,12919],[10527,12919],[10528,12919],[10529,12919],[10530,12919],[10534,12859],[10538,12859],[10539,12859],[10540,12859],[10541,12859],[10542,12859],[10543,12859],[10544,12859],[10545,12859],[10546,12859],[10547,12859],[10548,12859],[10549,12859],[10550,12859],[10551,12859],[10552,12859],[10553,12859],[10554,12859],[10555,12859],[10556,12859],[10557,12859],[10558,12859],[10559,12859],[10560,12859],[10561,12859],[10562,12859],[10563,12859],[10564,12859],[10565,12859],[10566,12859],[10567,12859],[10568,12859],[10569,12859],[10570,13085],[10571,13086],[10589,12962],[10607,13087],[10609,13087],[10612,13087],[10626,13087],[10658,13087],[10683,13088],[10685,13088],[10686,13088],[10688,13088],[10691,13088],[10764,12968],[10765,13020],[10766,13021],[10767,13022],[10768,12975],[10769,13070],[10770,12947],[10771,13052],[10824,13193],[10831,12947],[10837,13089],[10838,12947],[10861,12947],[10870,13090],[10872,13090],[10873,13090],[10884,13090],[10902,13091],[10908,13092],[10909,13009],[10910,13009],[10911,13095],[10925,13093],[10926,13093],[10953,13194],[10963,13195],[11020,13092],[11041,13194],[11042,13195],[11083,13099],[11084,13098],[11086,13098],[11088,13098],[11089,13098],[11180,13091],[11186,13009],[11187,13009],[11211,13104],[11223,13104],[11229,12800],[11233,12754],[11234,12871],[11235,12871],[11236,12871],[11237,12852],[11239,12775],[11243,12754],[11245,12754],[11246,12754],[11248,12754],[11253,12754],[11254,12754],[11255,12869],[11258,12869],[11259,12870],[11260,12876],[11261,12875],[11263,12754],[11264,12775],[11265,12775],[11266,12775],[11267,12775],[11272,13126],[11273,12754],[11276,13127],[11278,12754],[11283,13128],[11284,12754],[11286,12877],[11290,13129],[11291,12754],[11296,12754],[11297,12812],[11298,12812],[11301,12754],[11307,12754],[11308,12754],[11312,12754],[11313,12754],[11314,12800],[11316,12876],[11320,13130],[11321,13064],[11322,13130],[11323,13130],[11325,13131],[11326,13130],[11328,12754],[11329,12754],[11333,12754],[11334,12754],[11338,12754],[11339,12754],[11343,12754],[11344,12754],[11348,12754],[11349,12754],[11351,12884],[11362,12754],[11363,12754],[11365,12803],[11366,12803],[11378,12754],[11381,12754],[11383,12754],[11384,12800],[11388,13131],[11389,13131],[11390,13130],[11391,13131],[11392,13131],[11393,13131],[11394,12770],[11395,12754],[11396,12754],[11397,12754],[11398,12754],[11400,12877],[11401,12875],[11404,12860],[11408,12754],[11410,12754],[11415,12754],[11420,13132],[11421,12754],[11422,12804],[11423,12775],[11426,12754],[11430,12754],[11431,12754],[11435,12754],[11436,12754],[11440,12754],[11441,12754],[11445,12754],[11446,12754],[11450,12775],[11463,12876],[11466,12803],[11471,12775],[11474,12803],[11489,12876],[11490,12876],[11491,12775],[11509,12869],[11510,12869],[11511,12870],[11512,12876],[11513,12875],[11515,12876],[11519,12875],[11520,12876],[11522,12876],[11523,12876],[11524,12869],[11525,12869],[11526,12875],[11531,12875],[11532,12886],[11533,12886],[11534,12886],[11535,12886],[11536,12887],[11537,13175],[11538,13175],[11539,13175],[11540,13046],[11541,13046],[11542,13046],[11546,13028],[11598,12920],[11601,13105],[11621,13118],[11622,13118],[11637,12993],[11640,12994],[11680,12939],[11723,12997],[11756,12998],[11764,12999],[11769,12995],[11794,12939],[11795,12939],[11796,12939],[11797,12939],[11839,12994],[11843,12997],[11849,13106],[11882,13107],[11911,13119],[11912,13119],[11913,13119],[11914,12981],[11917,12981],[11918,13178],[11919,13196],[11920,13197],[11921,13197],[11922,13197],[11923,13197],[11924,13197],[11925,13108],[11956,13060],[11957,13060],[11958,13198],[11960,13100],[11961,13060],[11962,13060],[12021,13120],[12022,13120],[12023,13120],[12024,13120],[12025,13120],[12026,13120],[12027,13120],[12028,13120],[12029,13120],[12030,13079],[12041,13079],[12046,13079],[12047,13079],[12060,12864],[12061,12864],[12062,12864],[12063,12970],[12064,12970],[12085,12858],[12086,13121],[12087,13121],[12088,13121],[12089,13121],[12092,13122],[12093,12858],[12094,12777],[12095,12777],[12106,12952],[12107,13066],[12108,12954],[12118,13171],[12119,13171],[12129,13173],[12137,13066],[12139,13066],[12143,13173],[12149,13189],[12151,13189],[12153,13189],[12155,13189],[12157,13189],[12163,12965],[12169,13199],[12170,13199],[12174,12805],[12175,12857],[12177,12902],[12178,12805],[12182,12758],[12183,13111],[12184,13111],[12185,12805],[12196,12758],[12203,12758],[12395,12758],[12519,12758],[12647,12773],[12648,12773],[12674,12762],[12676,12762],[12677,12762],[12678,13113],[12683,12762],[12689,12762],[12718,12781],[12719,12781],[12726,13027]],"b":[[29,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[30,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[31,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[32,"impl-Add-for-ChunkedArray%3CStringType%3E"],[33,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[34,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[35,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[36,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[37,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[38,"impl-Add-for-ChunkedArray%3CT%3E"],[39,"impl-Add-for-%26ChunkedArray%3CT%3E"],[40,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[42,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[43,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[44,"impl-AggList-for-ChunkedArray%3CT%3E"],[45,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[46,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[47,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[48,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[49,"impl-AggList-for-ChunkedArray%3CListType%3E"],[52,"impl-ChunkedArray%3CFixedSizeListType%3E"],[53,"impl-ChunkedArray%3CListType%3E"],[54,"impl-ChunkedArray%3CListType%3E"],[55,"impl-ChunkedArray%3CFixedSizeListType%3E"],[59,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[60,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[61,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[62,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[63,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[64,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[66,"impl-ChunkedArray%3CListType%3E"],[67,"impl-ChunkedArray%3CFixedSizeListType%3E"],[69,"impl-ChunkedArray%3CFloat64Type%3E"],[70,"impl-ChunkedArray%3CFloat32Type%3E"],[73,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[74,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[76,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[77,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[78,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[79,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[80,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[81,"impl-ChunkedArray%3CBinaryType%3E"],[82,"impl-ChunkedArray%3CT%3E"],[83,"impl-ChunkedArray%3CStringType%3E"],[85,"impl-ChunkedArray%3CListType%3E"],[86,"impl-ChunkedArray%3CFixedSizeListType%3E"],[87,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[88,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[89,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[90,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[91,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[92,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[93,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[94,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[95,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[96,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[97,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[98,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[100,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[101,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[102,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[103,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[104,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[105,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[106,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[107,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[108,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[109,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[110,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[118,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[119,"impl-ChunkedArray%3CStringType%3E"],[123,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[124,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[127,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[128,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[129,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[130,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[131,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[132,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[133,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[134,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[153,"impl-ChunkedArray%3CStructType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[161,"impl-Container-for-ChunkedArray%3CT%3E"],[162,"impl-ChunkedArray%3CT%3E"],[182,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[183,"impl-Div-for-%26ChunkedArray%3CT%3E"],[184,"impl-Div-for-ChunkedArray%3CT%3E"],[185,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[192,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[193,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[194,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[195,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[196,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[197,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[198,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[199,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[200,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[201,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[202,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[203,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[204,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[205,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[206,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[207,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[208,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[209,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[210,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[211,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[212,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[213,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[217,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[218,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[219,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[220,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[221,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[222,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[223,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[227,"impl-Debug-for-ChunkedArray%3CListType%3E"],[228,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[229,"impl-Debug-for-ChunkedArray%3CT%3E"],[230,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[231,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[232,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[233,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[235,"impl-ChunkedArray%3CFixedSizeListType%3E"],[236,"impl-ChunkedArray%3CListType%3E"],[245,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[246,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[247,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[248,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[249,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[250,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[251,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[252,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[253,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[254,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[255,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[256,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[257,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[258,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[259,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[260,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[261,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[262,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[263,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[264,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[265,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[266,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[267,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[268,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[269,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[270,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[271,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[272,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[273,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[274,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[275,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[276,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[277,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[278,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[280,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[281,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[282,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[283,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[284,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[285,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[286,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[287,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[290,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[291,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[292,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[293,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[294,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[295,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[296,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[297,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[298,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[299,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[300,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[301,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[304,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[305,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[306,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[307,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[308,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[309,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[310,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[311,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[312,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[313,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[317,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[318,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[319,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[320,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[322,"impl-ChunkedArray%3CListType%3E"],[323,"impl-ChunkedArray%3CFixedSizeListType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[339,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[340,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[341,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[342,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[343,"impl-ChunkedArray%3CListType%3E"],[344,"impl-ChunkedArray%3CFixedSizeListType%3E"],[348,"impl-ChunkedArray%3CListType%3E"],[349,"impl-ChunkedArray%3CFixedSizeListType%3E"],[357,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[358,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[359,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[360,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[361,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[362,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[363,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[365,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[366,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[367,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[368,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[370,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[371,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[372,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[373,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[374,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[375,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[376,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[377,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[378,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[379,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[380,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[381,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[382,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[383,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[389,"impl-ChunkedArray%3CListType%3E"],[390,"impl-ChunkedArray%3CFixedSizeListType%3E"],[400,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[401,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[402,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[407,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[409,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[410,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ChunkedArray%3CT%3E"],[436,"impl-Container-for-ChunkedArray%3CT%3E"],[441,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[442,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[443,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[444,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[445,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[446,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[447,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[448,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[449,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[450,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[451,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[452,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[453,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[454,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[455,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[456,"impl-ChunkedArray%3CBooleanType%3E"],[458,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[459,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[460,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[461,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[462,"impl-ChunkedArray%3CBooleanType%3E"],[463,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[464,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[465,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[466,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[467,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[468,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[469,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[477,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[478,"impl-ChunkedArray%3CBooleanType%3E"],[481,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[482,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[483,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[484,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[485,"impl-ChunkedArray%3CT%3E"],[486,"impl-ChunkedArray%3CBooleanType%3E"],[487,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[488,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[489,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[490,"impl-Mul-for-ChunkedArray%3CT%3E"],[493,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[494,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[495,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[497,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[498,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[499,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[500,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[501,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[502,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[503,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[504,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[505,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[506,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[507,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[508,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[509,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[510,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[511,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[512,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[513,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[514,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[515,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[516,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[517,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[518,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[520,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[521,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[522,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[523,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[524,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[525,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[526,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[527,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[528,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[529,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[530,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[531,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[532,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[533,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[534,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[535,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[536,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[537,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[538,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[540,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[541,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[542,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[543,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[544,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[545,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[546,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[547,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[548,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[554,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[555,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[556,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[557,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[558,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[559,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[560,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[561,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[562,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[563,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[564,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[565,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[566,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[567,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[568,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[569,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[570,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[571,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[572,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[573,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[574,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[575,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[580,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[581,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[583,"impl-ChunkedArray%3CStringType%3E"],[584,"impl-ChunkedArray%3CListType%3E"],[585,"impl-ChunkedArray%3CListType%3E"],[586,"impl-ChunkedArray%3CStringType%3E"],[589,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[590,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[591,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[592,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[593,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[594,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[603,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[604,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[605,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[625,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[626,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[627,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[628,"impl-Rem-for-ChunkedArray%3CT%3E"],[631,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[632,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[633,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[635,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[636,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[637,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[638,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[643,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[644,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[645,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[646,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[647,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[648,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[649,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[650,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[651,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[652,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[653,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[654,"impl-Serialize-for-ChunkedArray%3CStructType%3E"],[655,"impl-Serialize-for-ChunkedArray%3CT%3E"],[656,"impl-Serialize-for-ChunkedArray%3CStringType%3E"],[657,"impl-Serialize-for-ChunkedArray%3CBooleanType%3E"],[658,"impl-Serialize-for-ChunkedArray%3CListType%3E"],[659,"impl-Serialize-for-ChunkedArray%3CBinaryType%3E"],[660,"impl-Serialize-for-ChunkedArray%3CFixedSizeListType%3E"],[661,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[662,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[663,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[664,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[670,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[671,"impl-ChunkShift%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[672,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[673,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[674,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[675,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[676,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[677,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[678,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[679,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[680,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[681,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[682,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[683,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[684,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[685,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[686,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[688,"impl-ChunkedArray%3CT%3E"],[689,"impl-Container-for-ChunkedArray%3CT%3E"],[690,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[691,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[692,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[693,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[694,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[695,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[696,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[697,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[698,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[699,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[700,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[701,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[702,"impl-ChunkedArray%3CT%3E"],[703,"impl-Container-for-ChunkedArray%3CT%3E"],[705,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[706,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[707,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[709,"impl-Sub-for-ChunkedArray%3CT%3E"],[710,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[711,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[712,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[714,"impl-ChunkedArray%3CBooleanType%3E"],[715,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[716,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[717,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[718,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[720,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[721,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[724,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[725,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[726,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CListType%3E"],[727,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CListType%3E"],[728,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[729,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[730,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[731,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[732,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[733,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[734,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[735,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[740,"impl-ChunkedArray%3CListType%3E"],[741,"impl-ChunkedArray%3CFixedSizeListType%3E"],[742,"impl-ChunkedArray%3CListType%3E"],[743,"impl-ChunkedArray%3CT%3E"],[748,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[749,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[750,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[751,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[752,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[753,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[755,"impl-ChunkedArray%3CFixedSizeListType%3E"],[756,"impl-ChunkedArray%3CListType%3E"],[770,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[771,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[772,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[773,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[774,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[780,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[781,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[782,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[783,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[784,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[785,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[786,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[790,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[791,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[794,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[797,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[799,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[801,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[802,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[803,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[804,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[805,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[806,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[807,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[808,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[809,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[810,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[811,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[812,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[813,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[814,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[826,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[854,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[855,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[856,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[857,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[858,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[859,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[860,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[861,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[865,"impl-ChunkZip%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[866,"impl-ChunkZip%3CT%3E-for-ChunkedArray%3CT%3E"],[1042,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1043,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1319,"impl-Flags-for-MetadataProperties"],[1320,"impl-MetadataProperties"],[1321,"impl-Flags-for-MetadataFlags"],[1322,"impl-MetadataFlags"],[1386,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1387,"impl-Metadata%3CT%3E"],[1412,"impl-Octal-for-MetadataProperties"],[1413,"impl-UpperHex-for-MetadataProperties"],[1414,"impl-Debug-for-MetadataProperties"],[1415,"impl-LowerHex-for-MetadataProperties"],[1416,"impl-Binary-for-MetadataProperties"],[1417,"impl-UpperHex-for-MetadataFlags"],[1418,"impl-LowerHex-for-MetadataFlags"],[1419,"impl-Debug-for-MetadataFlags"],[1420,"impl-Octal-for-MetadataFlags"],[1421,"impl-Binary-for-MetadataFlags"],[1431,"impl-Flags-for-MetadataProperties"],[1432,"impl-MetadataProperties"],[1433,"impl-Flags-for-MetadataFlags"],[1434,"impl-MetadataFlags"],[1445,"impl-Metadata%3CT%3E"],[1446,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1489,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1490,"impl-Metadata%3CT%3E"],[1494,"impl-Metadata%3CT%3E"],[1495,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1573,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1574,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1609,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1610,"impl-ObjectArray%3CT%3E"],[1625,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1626,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1636,"impl-ObjectArray%3CT%3E"],[1637,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1638,"impl-ObjectArray%3CT%3E"],[1639,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1641,"impl-ObjectArray%3CT%3E"],[1642,"impl-Array-for-ObjectArray%3CT%3E"],[1645,"impl-ObjectChunkedBuilder%3CT%3E"],[1646,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1648,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1649,"impl-ObjectChunkedBuilder%3CT%3E"],[2329,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[2330,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[2331,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[2332,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[2438,"impl-Logical%3CDurationType,+Int64Type%3E"],[2439,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2441,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2442,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2443,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2444,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2445,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2758,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2759,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2760,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2761,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2762,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2774,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2775,"impl-PartialEq-for-DataType"],[2784,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2785,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2786,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2787,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2788,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2789,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2828,"impl-Debug-for-PlSmallStr"],[2829,"impl-Display-for-PlSmallStr"],[2833,"impl-Debug-for-AnyValue%3C\'a%3E"],[2834,"impl-Display-for-AnyValue%3C\'_%3E"],[2836,"impl-Display-for-DataType"],[2837,"impl-Debug-for-DataType"],[2840,"impl-Debug-for-TimeUnit"],[2841,"impl-Display-for-TimeUnit"],[2843,"impl-Debug-for-ReshapeDimension"],[2844,"impl-Display-for-ReshapeDimension"],[2847,"impl-From%3C%26str%3E-for-PlSmallStr"],[2848,"impl-From%3CString%3E-for-PlSmallStr"],[2849,"impl-From%3C%26String%3E-for-PlSmallStr"],[2851,"impl-From%3CCompactString%3E-for-PlSmallStr"],[2854,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2855,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2868,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2869,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2870,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2872,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2873,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2875,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2877,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2878,"impl-From%3CSerializableDataType%3E-for-DataType"],[2879,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2882,"impl-From%3C%26ArrowField%3E-for-Field"],[2883,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2909,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2910,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2919,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[2920,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[2921,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[2922,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[2923,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[2924,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[2925,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[2926,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[2946,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2947,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2948,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2949,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2950,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2953,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2954,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2955,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2956,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2957,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2995,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2996,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2997,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[2998,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[2999,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3000,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3113,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[3114,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[3115,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3116,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3117,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[3168,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3169,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3170,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3171,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3172,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3173,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3210,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3211,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3212,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3213,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3214,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3215,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3216,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3217,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3226,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3227,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3228,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3229,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3230,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3231,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3234,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3235,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3257,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3258,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3278,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3279,"impl-Logical%3CDurationType,+Int64Type%3E"],[3286,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3287,"impl-Logical%3CDateType,+Int32Type%3E"],[3288,"impl-Logical%3CTimeType,+Int64Type%3E"],[3304,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3305,"impl-Logical%3CDurationType,+Int64Type%3E"],[3358,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3359,"impl-Logical%3CDateType,+Int32Type%3E"],[3360,"impl-Logical%3CTimeType,+Int64Type%3E"],[3366,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3367,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3693,"impl-Debug-for-ErrString"],[3694,"impl-Display-for-ErrString"],[3695,"impl-Debug-for-PolarsError"],[3696,"impl-Display-for-PolarsError"],[3701,"impl-From%3CParquetError%3E-for-PolarsError"],[3702,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3703,"impl-From%3CError%3E-for-PolarsError"],[3704,"impl-From%3CError%3E-for-PolarsError"],[3705,"impl-From%3CError%3E-for-PolarsError"],[3706,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3707,"impl-From%3CError%3E-for-PolarsError"],[3849,"impl-Display-for-DataFrame"],[3850,"impl-Debug-for-DataFrame"],[3856,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3857,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3883,"impl-Index%3Cusize%3E-for-DataFrame"],[3884,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3885,"impl-Index%3C%26str%3E-for-DataFrame"],[3886,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3887,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3888,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3889,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3890,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3909,"impl-Container-for-DataFrame"],[3910,"impl-DataFrame"],[3918,"impl-DataFrame"],[3919,"impl-Container-for-DataFrame"],[3968,"impl-DataFrame"],[3969,"impl-Container-for-DataFrame"],[3973,"impl-Container-for-DataFrame"],[3974,"impl-DataFrame"],[3997,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3998,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CArrowField%3E)%3E-for-DataFrame"],[4040,"impl-Add-for-Column"],[4041,"impl-Add-for-%26Column"],[4042,"impl-Add%3CT%3E-for-%26Column"],[4043,"impl-Add%3CT%3E-for-Column"],[4067,"impl-BitAnd-for-%26Column"],[4068,"impl-BitAnd-for-Column"],[4069,"impl-Column"],[4070,"impl-BitOr-for-Column"],[4071,"impl-BitOr-for-%26Column"],[4072,"impl-BitXor-for-%26Column"],[4073,"impl-BitXor-for-Column"],[4102,"impl-Div-for-Column"],[4103,"impl-Div%3CT%3E-for-%26Column"],[4104,"impl-Div-for-%26Column"],[4105,"impl-Div%3CT%3E-for-Column"],[4130,"impl-From%3CSeries%3E-for-Column"],[4131,"impl-From%3CScalarColumn%3E-for-Column"],[4177,"impl-Mul-for-%26Column"],[4178,"impl-Mul%3CT%3E-for-Column"],[4179,"impl-Mul%3CT%3E-for-%26Column"],[4180,"impl-Mul-for-Column"],[4195,"impl-Rem-for-%26Column"],[4196,"impl-Rem-for-Column"],[4197,"impl-Rem%3CT%3E-for-Column"],[4198,"impl-Rem%3CT%3E-for-%26Column"],[4220,"impl-Sub%3CT%3E-for-Column"],[4221,"impl-Sub-for-Column"],[4222,"impl-Sub-for-%26Column"],[4223,"impl-Sub%3CT%3E-for-%26Column"],[4427,"impl-Debug-for-GroupByMethod"],[4428,"impl-Display-for-GroupByMethod"],[4434,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4436,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4469,"impl-IntoIterator-for-%26GroupsIdx"],[4470,"impl-IntoIterator-for-GroupsIdx"],[4472,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4473,"impl-IntoParallelIterator-for-GroupsIdx"],[5865,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5866,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5870,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5871,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5900,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5901,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5925,"impl-Flags-for-OptFlags"],[5926,"impl-OptFlags"],[6689,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[6690,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6691,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6693,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6694,"impl-Default-for-Arc%3CT%3E"],[6695,"impl-Default-for-Arc%3CCStr%3E"],[6696,"impl-Default-for-Arc%3Cstr%3E"],[7029,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[7030,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7031,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[7032,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[7033,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[7280,"impl-PartialEq-for-Expr"],[7281,"impl-Expr"],[7294,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[7295,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[7304,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[7305,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[7306,"impl-PartialEq-for-Arc%3CT,+A%3E"],[7320,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[7321,"impl-PartialEq-for-StructArray"],[7617,"impl-Display-for-Duration"],[7618,"impl-Debug-for-Duration"],[7628,"impl-Debug-for-JoinType"],[7629,"impl-Display-for-JoinType"],[7630,"impl-Debug-for-JoinValidation"],[7631,"impl-Display-for-JoinValidation"],[7648,"impl-Debug-for-Expr"],[7649,"impl-Display-for-Expr"],[7660,"impl-Debug-for-Operator"],[7661,"impl-Display-for-Operator"],[7668,"impl-Display-for-BooleanFunction"],[7669,"impl-Debug-for-BooleanFunction"],[7670,"impl-Display-for-CategoricalFunction"],[7671,"impl-Debug-for-CategoricalFunction"],[7672,"impl-Display-for-TemporalFunction"],[7673,"impl-Debug-for-TemporalFunction"],[7675,"impl-Debug-for-PowFunction"],[7676,"impl-Display-for-PowFunction"],[7677,"impl-Display-for-Arc%3CT,+A%3E"],[7678,"impl-Debug-for-Arc%3CT,+A%3E"],[7679,"impl-Pointer-for-Arc%3CT,+A%3E"],[7680,"impl-Debug-for-StringFunction"],[7681,"impl-Display-for-StringFunction"],[7682,"impl-Debug-for-StructFunction"],[7683,"impl-Display-for-StructFunction"],[7684,"impl-Display-for-FunctionExpr"],[7685,"impl-Debug-for-FunctionExpr"],[7697,"impl-LowerHex-for-OptFlags"],[7698,"impl-Binary-for-OptFlags"],[7699,"impl-Octal-for-OptFlags"],[7700,"impl-UpperHex-for-OptFlags"],[7701,"impl-Debug-for-OptFlags"],[7731,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7732,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7804,"impl-From%3Cf32%3E-for-Expr"],[7805,"impl-From%3Cu16%3E-for-Expr"],[7806,"impl-From%3Ci16%3E-for-Expr"],[7807,"impl-From%3Ci8%3E-for-Expr"],[7808,"impl-From%3CAggExpr%3E-for-Expr"],[7810,"impl-From%3Ci32%3E-for-Expr"],[7811,"impl-From%3Ci64%3E-for-Expr"],[7812,"impl-From%3Cu8%3E-for-Expr"],[7813,"impl-From%3C%26str%3E-for-Expr"],[7814,"impl-From%3Cbool%3E-for-Expr"],[7815,"impl-From%3Cu64%3E-for-Expr"],[7816,"impl-From%3Cu32%3E-for-Expr"],[7817,"impl-From%3Cf64%3E-for-Expr"],[7833,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7834,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7835,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7836,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7837,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7838,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7839,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7840,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7842,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7843,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7853,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7854,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7856,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7857,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[7858,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7859,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7860,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7861,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7863,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7864,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7865,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7866,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7867,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7868,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7869,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7870,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7873,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7874,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7876,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7877,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7888,"impl-From%3C%26str%3E-for-Selector"],[7889,"impl-From%3CString%3E-for-Selector"],[7890,"impl-From%3CPlSmallStr%3E-for-Selector"],[7891,"impl-From%3CExpr%3E-for-Selector"],[7899,"impl-From%3CMutableStructArray%3E-for-StructArray"],[7901,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[7906,"impl-From%3Cu16%3E-for-Scalar"],[7907,"impl-From%3Cu32%3E-for-Scalar"],[7908,"impl-From%3Ci8%3E-for-Scalar"],[7909,"impl-From%3Cf32%3E-for-Scalar"],[7910,"impl-From%3Ci16%3E-for-Scalar"],[7911,"impl-From%3Cu64%3E-for-Scalar"],[7912,"impl-From%3Ci32%3E-for-Scalar"],[7914,"impl-From%3Ci64%3E-for-Scalar"],[7915,"impl-From%3Cu8%3E-for-Scalar"],[7916,"impl-From%3Cf64%3E-for-Scalar"],[7925,"impl-OptFlags"],[7926,"impl-Flags-for-OptFlags"],[7931,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7932,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7940,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7941,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7954,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7955,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[9114,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[9115,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[9116,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[9117,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[9118,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[9195,"impl-Array-for-StructArray"],[9196,"impl-StructArray"],[9202,"impl-StructArray"],[9203,"impl-Array-for-StructArray"],[9479,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[9480,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[9484,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[9485,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[9954,"impl-StructArray"],[9955,"impl-Array-for-StructArray"],[10217,"impl-LazyFileListReader-for-LazyCsvReader"],[10218,"impl-LazyCsvReader"],[10219,"impl-LazyFileListReader-for-LazyJsonLineReader"],[10220,"impl-LazyJsonLineReader"],[10265,"impl-LazyCsvReader"],[10266,"impl-LazyFileListReader-for-LazyCsvReader"],[10267,"impl-LazyFileListReader-for-LazyJsonLineReader"],[10268,"impl-LazyJsonLineReader"],[10314,"impl-Array-for-StructArray"],[10315,"impl-StructArray"],[10720,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"],[10721,"impl-From%3CMemSlice%3E-for-DynByteSource"],[10722,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"],[10890,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[10891,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[10896,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[10897,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[11136,"impl-From%3CInstanceCredentials%3E-for-AwsCredential"],[11137,"impl-From%3CSessionCredentials%3E-for-AwsCredential"],[11864,"impl-Debug-for-RollingFunction"],[11865,"impl-Display-for-RollingFunction"],[11897,"impl-Debug-for-RollingFunctionBy"],[11898,"impl-Display-for-RollingFunctionBy"],[12192,"impl-Add-for-Series"],[12193,"impl-Add%3CT%3E-for-%26Series"],[12194,"impl-Add%3CT%3E-for-Series"],[12195,"impl-Add-for-%26Series"],[12212,"impl-SeriesSealed-for-Series"],[12213,"impl-AsSeries-for-Series"],[12268,"impl-Div-for-%26Series"],[12269,"impl-Div%3CT%3E-for-%26Series"],[12270,"impl-Div%3CT%3E-for-Series"],[12271,"impl-Div-for-Series"],[12282,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12283,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12284,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12286,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12287,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12288,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12305,"impl-Debug-for-Series"],[12306,"impl-Display-for-Series"],[12311,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[12313,"impl-From%3C_SerdeSeries%3E-for-Series"],[12314,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[12315,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[12316,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[12317,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[12323,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[12324,"impl-FromIterator%3C%26i8%3E-for-Series"],[12325,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[12326,"impl-FromIterator%3Cu8%3E-for-Series"],[12327,"impl-FromIterator%3C%26u8%3E-for-Series"],[12328,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[12329,"impl-FromIterator%3Cu16%3E-for-Series"],[12330,"impl-FromIterator%3C%26u16%3E-for-Series"],[12331,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[12332,"impl-FromIterator%3CString%3E-for-Series"],[12333,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[12334,"impl-FromIterator%3Cu32%3E-for-Series"],[12335,"impl-FromIterator%3C%26str%3E-for-Series"],[12336,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[12337,"impl-FromIterator%3C%26bool%3E-for-Series"],[12338,"impl-FromIterator%3Cbool%3E-for-Series"],[12339,"impl-FromIterator%3C%26u32%3E-for-Series"],[12340,"impl-FromIterator%3Ci8%3E-for-Series"],[12341,"impl-FromIterator%3C%26f64%3E-for-Series"],[12342,"impl-FromIterator%3Cf64%3E-for-Series"],[12343,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[12344,"impl-FromIterator%3C%26f32%3E-for-Series"],[12345,"impl-FromIterator%3Cf32%3E-for-Series"],[12346,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[12347,"impl-FromIterator%3C%26i64%3E-for-Series"],[12348,"impl-FromIterator%3Ci64%3E-for-Series"],[12349,"impl-FromIterator%3Cu64%3E-for-Series"],[12350,"impl-FromIterator%3C%26u64%3E-for-Series"],[12351,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[12352,"impl-FromIterator%3C%26i32%3E-for-Series"],[12353,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[12354,"impl-FromIterator%3Ci32%3E-for-Series"],[12355,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[12356,"impl-FromIterator%3C%26i16%3E-for-Series"],[12357,"impl-FromIterator%3Ci16%3E-for-Series"],[12358,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[12359,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[12360,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[12361,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[12362,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[12363,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[12364,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[12365,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[12366,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[12367,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[12368,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[12369,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[12370,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[12381,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12382,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12383,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12384,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12385,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12386,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12430,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12431,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12432,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12433,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12434,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12435,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12444,"impl-Mul-for-Series"],[12445,"impl-Mul-for-%26Series"],[12446,"impl-Mul%3CT%3E-for-%26Series"],[12447,"impl-Mul%3CT%3E-for-Series"],[12452,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[12453,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[12454,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[12455,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[12456,"impl-NamedFrom%3CT,+T%3E-for-Series"],[12457,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[12458,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[12459,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[12460,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[12461,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[12462,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[12463,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[12464,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[12465,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[12466,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[12467,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[12468,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[12469,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[12470,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[12471,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[12472,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[12473,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[12474,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[12475,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[12476,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[12477,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[12478,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[12479,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[12480,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[12481,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[12482,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[12483,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[12484,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[12485,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[12486,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[12487,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[12488,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[12489,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[12490,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[12491,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[12492,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[12493,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[12494,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[12495,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[12496,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[12497,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[12498,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[12499,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[12500,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[12501,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[12502,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[12503,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[12504,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[12510,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12511,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12512,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12514,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12515,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12516,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12526,"impl-Rem%3CT%3E-for-%26Series"],[12527,"impl-Rem-for-%26Series"],[12528,"impl-Rem%3CT%3E-for-Series"],[12559,"impl-Sub%3CT%3E-for-%26Series"],[12560,"impl-Sub%3CT%3E-for-Series"],[12561,"impl-Sub-for-%26Series"],[12562,"impl-Sub-for-Series"],[12599,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[12600,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[12601,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[12602,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAA0AEAAAAPwQRxGCEYURhhGHEYgRiRGOEZERlhGXEb0RFxU=","e":"OjAAAAEAAAAAACwlEAAAAGQ59f///wfww/4f/+sf3///r/7/xzv8//7/f/77v+b///8H/v9//v/f3/+f2f/7/zn4/9/j7i/8////wT///f////////j//33fD/f//3//8P//n////H///7hPDOKv+//1/////5/7////f/z////////8h///8f//////////////AcD//wHw7///////////f/z/2////+X/j+P8//9///s/AAX/v/9/+P9/+p9n/n8ABfz7BwCTh98H+X/A5//nj3/z///3XzX+/8u7+7eftffdkwAhYxkQPMAf///5z3/eNPw4YADavCj8fw4A/Vv09gP/////ze8BAN5/n/vp/w9TWP2Vad3/r7XWHjGpl//O63TDW2utlf////9/////vf////////////////8//v////////////////////vf////////////////////////////v5///////////f//lwHg1lkAAMAE/8j9/n79//9/8P/P//////+/AAAAAADA/+re6N+cl/938v8v/+//v+v/L/8/aPj/n57/////Z/z///////////////9/////////v/3///////+//de+0f1fn+/7/3///9P/8fv//4/8Py/4f//j//8A5goPAARq8P+BQwwBCwATyIBNA338+b+MD9AfAM/+//P////n/9kf//P+O/8//+///yf3//////79/7v/t/f+92/////f/////39/aDrxD/D/G7w5/f///8f/5/fv//////n/+/+Xxw//f/7kf/P9wv/m2/+l/x3874cEOGT4r/n/H//2w8cNfvtf3n+ddO73O46mz/+/7Pn4/////2maph+npLv/518xtY39//j9c//D2vddX3/fbquc989hf0/Su65///P//+7//8f+/+n8f48V/z38/c/7r3P4/f+fpmn6vA3/lz/3//////////////9//qD8CRQJP0QgAuD+a4f7Bv6fUvX//////////////////////////////////////////97uiKigBfD/////////f////9////////////////////////////////8Nx/F/+IICmItaDABDOPr5////P/z/////////////////////////////////////////////T9j/////////////6Mnv///////////////3////g2NR7//////7///3//8f/////////////////////////////79R0IookkCNfs+DGv////////////////8/BDAAAABAQAAACOD7B0D9GwAFAGwQHlH4O5AyYBz/bq5CIXsd/pgA9P//////////+FCfWkb+////////////////////f8IGAAAAAAAAAAAAAAAAAAAAgOmP3zutGQSae5YCOyA7juE8c8//HwSD/IjwgRBAYJdQITr8gf+gCPqwtf2aSIAsDPvAwch9AH2/4HXUByC7z3+/VBAMUQMAAAAICd5nAPV9tPr///////////+nPgJU8FCVgvv+1QQRxP85OcAAgHLvEv///////////////+f/j/H/tf///////////////////////+////////////////////9/9ID8//f///////////////////9fQKjAdyaC9f///////////////////z/wII1ZQAxBAIED+BgAFAXsoQIQGDWEAIg1aPz//wb7/33///////9T29//////////P/vP73+L3n74/7+d+P//+///hw///7/1//9/jv8//P/fHwAgADgAAAL/of/v/v9v/z+DAE+A/3/6/////3/+wN5+IIn9//9fj/7//////4Z/OPf/zxDwAO5d/j730/8fprD6yrTu/9daa4+Y1Mt/53W64a211sr///2T///9t/8a9mHAUQABgIf/6z////////////////////////////////////////+3////b///8/9//X/7//9/evz/////b/p/hwCABwD4iUGDP8H/Afx6Pz4TfLj/4+Ie/v8fm3EAHn32//////8fhS3Ywwdcwhnh5ff//////7MxxbN8rCIPArIB8A/fUHggL/5fff///7/+/5n}],["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNMHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRRPPPPPPPPPNMMMMMMMNMCNNNMMNNNNNNNMMNMCMMCNNCMMCMMMMNNNNNNMMNNNNNNMMMMNMNCMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHKFFNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGPFFJJGPPPFPFPPPPIFPFPPFPPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIPKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIFKKKKRGGPPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNFNNNNNNNNNNNNNNNNNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHNQQQQHHNNNNNNNNNNOOOOJJJEEEEEEEGPPNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGKPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFKSHHHNNNNNNNNNNNNNNNNNNNNNNNGFEKIFIEEPFFFKGKFEEEEEPPPEPTTPPPPPKKKPFPPPIIGKEEEPIIIPPEPPEEEKEEPPPPPKKPPEPGPPIFEKPPPFGEEIEPKIGPPGGFFFPPEPPEEPKFPEPEEPKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNNCNNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNOONNNNNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNHRTIKKIHNMNMNMNMNMNMNMNMNPPGEPPKGGPPPFFIKPNNNNNNNNNNCNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNNMNNNNNNNMMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNNNMNNNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNPPPKPKKGRPPNMMNNNNCNNNNNMMNNNNNNNNMMNNMMNNMMNNNNNNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNTTKKKKKFFFFFNNNHHHHHHHNNNHHEHNNNNNNNNNNNNNNNNNNMNNNNNNNNNHHNNNHHNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNMNNNNNNHHHHNNNNNNNNNNNNNNNNNNNMNNNNMNMHHMNNNNNNHENNNMHHHMHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_dtype_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","_sum_as_f64","add","","","","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","apply_to_slice","apply_values","apply_views","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","equal_missing","","extend","fill_null_with_values","filter","first","first_non_null","float","fmt","","for_each","for_each_amortized","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","","","from_iter_options","from_iter_trusted_length","","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","","gt_eq","","has_nulls","head","init","","init_rand","inner_dtype","interior_mut_metadata","into","","into_column","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","lt_eq","","max","","max_binary","max_reduce","mean","","median","median_reduce","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_binary","min_max","min_reduce","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","","not_equal_missing","","null_count","num_falses","num_trues","object","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","rechunk_and_trim_to_normalized_offsets","rechunk_validity","ref_field","rem","","","","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","","sort","sort_with","split_at","","std","std_reduce","sub","","","","subtract","sum","","sum_reduce","tail","take","","take_unchecked","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_null","","","","","append_option","","append_value","","","","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","deref","","","","deref_mut","","","","drop","","","","finish","","","","","","","","from","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","init","","","","into","","","","list","new","","","","shrink_to_fit","","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_values_iter","","borrow","","","","","","","borrow_mut","","","","","","","builder","default","","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","fast_explode","","","","","field","","","","","finish","","","","from","","","","","","","get_list_builder","init","","","","","","","inner_array","","","","","into","","","","","","","new","","","","","","","new_with_values_type","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","","borrow_mut","","deref","","deref_mut","","drop","","from","","init","","into","","into_iter","","new","next","","next_back","","par","size_hint","","try_from","","try_into","","type_id","","vzip","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","get_list_builder","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_list_builder","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_elementwise","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","row_encode","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","descending","","drop","","eq","","equivalent","","","","fmt","","from","","","","hash","","init","","into","","maintain_order","","multithreaded","","new","","nulls_last","","slice_typed","slice_typed_unchecked","to_owned","","try_from","","try_into","","type_id","","vzip","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_explode","add","","","","","","","","","","add_to","","","","","","","","","","","agg_list","","","","","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","","","","","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_kernel","","","apply_kernel_cast","","","apply_mut","","apply_to_inner","apply_to_slice","","","","","apply_values","","","","","apply_views","arg_sort","","","","arg_sort_multiple","","","","arg_unique","","","","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","","bitor","","bitxor","","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","call_categorical_merge_operation","cast","","","cast_leaf","cast_unchecked","","","","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","contains_categoricals","contains_objects","contains_views","create_enum_dtype","default","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","enum_","eq","","","","","","","","","","","eq_missing","equal","","","","","","equal_missing","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","explode_and_offsets","field","fill_null_with_values","","filter","","","finish","fmt","","","","","","","","","","","","","","","","","","","for_each_amortized","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_iter","","","","","","","","","from_iter_options","","","","from_iter_trusted_length","","","","","","","","","","from_iter_values","","","","from_par_iter","","","","","","","from_par_iter_with_dtype","from_slice","","","","from_slice_options","","","","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","","","","","","","full_null","","","","","","","full_null_with_dtype","get","","","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","get_inner","get_object","get_object_unchecked","get_or_infer","get_or_infer_with","get_str","get_unchecked","","get_values_size","","","group_tuples","","","","","","gt","","","","","gt_eq","","","","","hash","","","","","","","","hash_impl","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","into_decimal","into_decimal_unchecked","into_iter","","","","","","into_scalar","into_series","","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_enum","is_float","","is_integer","","is_known","is_list","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","last","leaf_dtype","lt","","","","","lt_eq","","","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","materialize_unknown","max","max_binary","max_reduce","","","mean","median","","median_reduce","","merge_dtypes","min","min_binary","min_reduce","","","mmap_slice","mul","multiply","","","","","","","","n_unique","","name","","new","","","","","","","","","","","","","","","","new_dimension","new_empty","new_from_index","","","","","","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","","not_equal","","","","","","not_equal_missing","","","","","","num_falses","num_trues","offsets","oldest","par_iter","","par_iter_indexed","","partial_cmp","","","physical","precision","","quantile","","quantile_reduce","","rand_bernoulli","rechunk_and_trim_to_normalized_offsets","remainder","","","","","","","","reverse","","","","","","revmap","scale","","scatter_single","","","scatter_with","","","set","","","set_fast_explode","set_inner_dtype","set_name","shift","","","","","","shift_and_fill","","","","","","sort","","","","sort_with","","","","std_reduce","","str_value","strict_cast","string_cache","sub","subtract","","","","","","","","sum","sum_reduce","","take_unchecked","","","","","","to_arrow","","","to_arrow_field","to_ascii","to_decimal","to_fixed_size_list","to_logical","to_logical_type","to_ndarray","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","","to_string","","","","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","try_zip_and_apply_amortized","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","","","","value","value_unchecked","value_within_range","values_iter","var_reduce","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","","with_nullable_idx","with_validity_typed","zero_sum","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","","append_null","append_value","arg_sort","borrow","","","","borrow_mut","","","","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drain_iter_and_finish","drop","","","","dtype","equal","","","equal_missing","","","finish","","","from","","","","from_cats_and_dtype_unchecked","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","","","gt_eq","","","init","","","","into","","","","into_column","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","","next","not_equal","","","not_equal_missing","","","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","","","","try_into","","","","type_id","","","","unique","uses_lexical_ordering","value_counts","vzip","","","","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","","borrow","","borrow_mut","","build_local","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","drop","","eq","find","fmt","","from","","get","get_categories","get_optional","init","","into","","is_global","is_local","len","same_src","to_owned","","try_from","","try_into","","type_id","","vzip","","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","borrow_mut","","constants","deref","","","deref_mut","","drop","","feature_gated","fmt","","","from","","","get_warning_function","init","","into","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","","try_into","","try_to_compact_string","type_id","","vzip","","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","add","","","align_chunks","align_chunks_par","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clear_columns","clone","","","clone_into","","","clone_to_uninit","","","column","","column_extend_unchecked","columns","default","","deref","","","","","deref_mut","","","","","div","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","len","materialized_column_iter","max_horizontal","mean_horizontal","min_horizontal","mul","","","n_chunks","","new","new_no_checks","new_no_checks_height_from_first","new_no_length_checks","new_with_broadcast","new_with_broadcast_len","new_with_broadcast_no_namecheck","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","","","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","set_height","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sub","","","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_var","append","apply_unary_elementwise","arg_sort","as_materialized_series","","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","bitxor","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","dtype","","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_data_ptr","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","init","","into","","into_column","","","into_frame","into_materialized_series","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","max_reduce","min_reduce","mul","","","","name","","new","","new_empty","","new_from_index","new_scalar","not_equal","not_equal_missing","null_count","phys_iter","product","rechunk","rem","","","","rename","","reshape_list","resize","reverse","sample_frac","sample_n","scalar","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","split_at","str","strict_cast","","sub","","","","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_apply_unary_elementwise","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_str","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Float32","","Float64","","Int32","","Int64","","Null","","Row","String","","UInt32","","UInt64","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","try_from","try_into","type_id","vec_hash","","vec_hash_combine","","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","Column","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","EMPTY","EMPTY_REF","Earliest","Equiprobable","","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoColumn","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","","Midpoint","","NamedFrom","NamedFromOwned","Nearest","","NewChunkedArray","NoData","NonExistent","Null","","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PlSmallStr","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","Quantile","QuantileAggSeries","QuantileInterpolOptions","QuantileMethod","Raise","","RevMapping","RollingFnParams","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgsIR","Var","VarAggSeries","VecHash","__clone_box","","","","","","","","","","","","allocator","as_fd","as_ptr","as_raw_fd","as_ref","","","","","as_str","assume_init","","borrow","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","","","","","","","","","","","","clone_into","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","cmp","","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","context","context_trace","convert_inner_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","default_arrays","deref","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","description","df","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","dtype","","eq","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","extract","finish","flush","fmt","","","","","","","","","","","","","","","","","fn_params","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_data_default","from_data_unchecked_default","","from_iter","","","","","","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_static","from_str","","from_string","from_vec","ge","get_mut","get_mut_unchecked","get_unchecked","gt","hash","","","","","","idx","increment_strong_count","increment_strong_count_in","indexes_to_usizes","init","","","","","","","","","","","","","","inner","inner_mut","into","","","","","","","","","","","","","","into_column","into_inner","into_raw","into_raw_with_allocator","into_series","into_string","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","iter_names_and_dtypes","le","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","","median_reduce","metadata","method","min_periods","min_reduce","","name","ne","negative_to_usize","new","","","new_cyclic","new_cyclic_in","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","","","partial_cmp","","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","","to_opt","to_owned","","","","","","","","","","","","to_string","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_to_compact_string","","","try_unwrap","type_id","","","","","","","","","","","","","","unwrap_or_clone","utf8","var_reduce","vzip","","","","","","","","","","","","","","weak_count","weights","window_size","with_metadata","wrap_msg","write","write_char","write_fmt","write_str","write_vectored","error","","msg","","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","fmt","from","","","","","","","","","","","init","into","into_column","into_series","is_nan","is_null","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","Schema","SchemaExt","SchemaNamesAndDtypes","SchemaRef","ensure_matching_schema","from","from_arrow_schema","","get_field","","iter_fields","","iter_names_and_dtypes","","materialize_unknown_dtypes","","to_arrow","","to_supertype","","try_get_field","","Ascending","","BitRepr","ChunkCompareEq","Descending","","IntoSeries","IsSorted","","Large","Not","","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","and_reduce","","append","arg_sort","","arg_unique","","arithmetic","array_ref","as_any","as_any_mut","","as_list","as_mut","as_ref","","as_single_ptr","","","binary","binary_offset","bitand","","bitor","","bitxor","","bool","borrow","","","","borrow_mut","","","","boxed_metadata","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","decimal","default","deref","","","","","deref_mut","","","","div","","","","dot","drop","","","","drop_nulls","","dtype","","eq","","equal","","","equal_missing","","","equals","equals_missing","equivalent","","estimated_size","explode","extend","extend_constant","f32","f64","field","","fill_null","filter","first","","fmt","","","fmt_list","from","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","","get_object","","get_object_chunked_unchecked","","get_unchecked","","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_column","into_frame","into_iter","into_series","","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","","is_sorted_flag","iter","iter_chunks","last","","len","","limit","","list","list_offsets_and_validities_recursive","list_rechunk_and_trim_to_normalized_offsets","lt","","","lt_eq","","","max","max_reduce","","mean","","mean_reduce","median","","median_reduce","","min","min_reduce","","mul","","","","n_chunks","","","n_unique","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","not_equal_missing","","","null","null_count","ops","or_reduce","","phys_iter","product","quantile_reduce","","rechunk","rechunk_validity","","rem","","","rename","","reshape_list","reverse","","rolling_map","","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","","shuffle","size_hint","slice","","sort","sort_with","","split_at","","std","","std_reduce","","str","str_value","strict_cast","sub","","","","sum","sum_reduce","","","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_logical_repr_unchecked","to_owned","","to_physical_repr","to_string","try_add_owned","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_sub_owned","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","","unique_stable","unpack","var","","var_reduce","","vzip","","","","with_name","wrapping_trunc_div_scalar","xor_reduce","","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Add","Div","FloorDiv","LhsNumOps","Mul","NumOpsDispatch","NumOpsDispatchInner","NumericListOp","Output","Rem","Sub","__clone_box","add","add_to","","","borrow","borrow_mut","checked","clone","clone_into","clone_to_uninit","deref","deref_mut","div","divide","","","drop","execute","fmt","from","init","into","mul","multiply","","","rem","remainder","","","sub","subtract","","","to_owned","try_from","try_into","type_id","vzip","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","","checked_div_num","","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ALLOW_IMPLODE_LIST","ALLOW_PRIMITIVE_TO_STRING","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeFlags","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","","","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all","allow_implode_list","allow_primitive_to_string","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","chunk_lengths","clone","","","clone_into","","","clone_to_uninit","","","coalesce_nulls","coalesce_nulls_columns","collect_reversed","collect_trusted","complement","concat_df","concat_df_unchecked","contains","default","","deref","","","","","","","deref_mut","","","","","","difference","drop","","","","","dtypes_to_schema","dtypes_to_supertype","empty","eq","","","equivalent","","","","","","extend","flags","flatten","fmt","","","","","","from","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","","","from_iter_trusted_length","","","from_name","from_par_iter","from_trusted_len_iter_rev","","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","","","init","","","","","insert","intersection","intersects","into","","","","","into_inner","into_iter","","into_vec","","is_all","is_empty","iter","iter_chunks","iter_names","len","materialize_dyn_int","merge_dtypes_many","n_chunks","new","","new_repeat_n","next","next_back","not","operation_exceeded_idxsize_msg","rayon","remove","set","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","sub","sub_assign","symmetric_difference","to_owned","","","toggle","trust_my_length","try_from","","","","","try_get_supertype","try_into","","","","","type_id","","","","","union","vzip","","","","","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[450,"polars_core::chunked_array::arithmetic"],[478,"polars_core::chunked_array::builder"],[586,"polars_core::chunked_array::builder::list"],[740,"polars_core::chunked_array::cast"],[768,"polars_core::chunked_array::collect"],[782,"polars_core::chunked_array::float"],[784,"polars_core::chunked_array::from_iterator_par"],[788,"polars_core::chunked_array::iterator"],[825,"polars_core::chunked_array::iterator::par"],[827,"polars_core::chunked_array::metadata"],[1113,"polars_core::chunked_array::object"],[1190,"polars_core::chunked_array::object::builder"],[1214,"polars_core::chunked_array::object::registry"],[1243,"polars_core::chunked_array::ops"],[1373,"polars_core::chunked_array::ops::arity"],[1409,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1411,"polars_core::chunked_array::ops::gather"],[1414,"polars_core::chunked_array::ops::row_encode"],[1423,"polars_core::chunked_array::ops::search_sorted"],[1452,"polars_core::chunked_array::ops::sort"],[1459,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1460,"polars_core::chunked_array::ops::sort::options"],[1535,"polars_core::chunked_array::temporal"],[1536,"polars_core::chunked_array::temporal::conversion"],[1539,"polars_core::config"],[1543,"polars_core::datatypes"],[3062,"polars_core::datatypes::categorical"],[3205,"polars_core::datatypes::categorical::revmap"],[3259,"polars_core::datatypes::categorical::string_cache"],[3278,"polars_core::datatypes::enum_"],[3296,"polars_core::datatypes::revmap"],[3302,"polars_core::datatypes::string_cache"],[3306,"polars_core::error"],[3373,"polars_core::error::PolarsError"],[3377,"polars_core::error::constants"],[3380,"polars_core::export"],[3387,"polars_core::fmt"],[3418,"polars_core::frame"],[3707,"polars_core::frame::column"],[3941,"polars_core::frame::explode"],[3969,"polars_core::frame::group_by"],[4205,"polars_core::frame::group_by::GroupByMethod"],[4206,"polars_core::frame::group_by::GroupsProxy"],[4208,"polars_core::frame::group_by::aggregations"],[4221,"polars_core::frame::group_by::expr"],[4224,"polars_core::frame::row"],[4320,"polars_core::functions"],[4322,"polars_core::hashing"],[4352,"polars_core::prelude"],[4983,"polars_core::prelude::PolarsError"],[4987,"polars_core::prelude::default_arrays"],[4993,"polars_core::prelude::list"],[5016,"polars_core::prelude::null"],[5047,"polars_core::prelude::revmap"],[5053,"polars_core::prelude::slice"],[5056,"polars_core::prelude::string_cache"],[5060,"polars_core::prelude::utf8"],[5064,"polars_core::random"],[5065,"polars_core::scalar"],[5105,"polars_core::scalar::reduce"],[5106,"polars_core::schema"],[5130,"polars_core::series"],[5584,"polars_core::series::amortized_iter"],[5608,"polars_core::series::arithmetic"],[5659,"polars_core::series::arithmetic::checked"],[5667,"polars_core::series::ops"],[5693,"polars_core::utils"],[5902,"polars_core::utils::flatten"],[5907,"dyn_clone::sealed"],[5908,"num_traits"],[5909,"num_traits::cast"],[5910,"polars_error"],[5911,"polars_core::series::arithmetic::borrowed"],[5912,"polars_core::frame::group_by::proxy"],[5913,"core::option"],[5914,"core::iter::traits::iterator"],[5915,"polars_utils::pl_str"],[5916,"core::ops::function"],[5917,"core::marker"],[5918,"alloc::string"],[5919,"polars_core::datatypes::dtype"],[5920,"polars_arrow::array::binview::view"],[5921,"polars_core::datatypes::aliases"],[5922,"polars_core::chunked_array::metadata::md_trait"],[5923,"alloc::boxed"],[5924,"polars_core::series::arithmetic::borrowed::checked"],[5925,"polars_arrow::array"],[5926,"alloc::vec"],[5927,"compact_str"],[5928,"core::iter::traits::double_ended"],[5929,"core::fmt"],[5930,"core::iter::traits::collect"],[5931,"polars_arrow::bitmap::immutable"],[5932,"rayon::iter"],[5933,"polars_arrow::trusted_len"],[5934,"polars_core::datatypes::any_value"],[5935,"polars_utils::index"],[5936,"std::sync::rwlock"],[5937,"polars_core::chunked_array::logical::decimal"],[5938,"core::iter::traits::exact_size"],[5939,"polars_core::series::series_trait"],[5940,"core::slice::iter"],[5941,"core::iter::adapters::map"],[5942,"core::convert"],[5943,"polars_core::chunked_array::metadata::guard"],[5944,"polars_core::chunked_array::metadata::interior_mutable"],[5945,"alloc::sync"],[5946,"core::ops::range"],[5947,"polars_core::datatypes::field"],[5948,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5949,"polars_core::chunked_array::ops::rolling_window"],[5950,"polars_utils::aliases"],[5951,"polars_utils::hashing"],[5952,"ndarray::aliases"],[5953,"either"],[5954,"core::result"],[5955,"core::any"],[5956,"polars_core::chunked_array::arithmetic::numeric"],[5957,"polars_core::chunked_array::builder::string"],[5958,"polars_arrow::array::binview"],[5959,"polars_core::chunked_array::builder::boolean"],[5960,"polars_core::chunked_array::builder::null"],[5961,"polars_core::chunked_array::builder::primitive"],[5962,"core::clone"],[5963,"polars_core::chunked_array::builder::list::anonymous"],[5964,"polars_core::chunked_array::builder::list::boolean"],[5965,"polars_core::chunked_array::builder::list::primitive"],[5966,"polars_core::chunked_array::builder::list::binary"],[5967,"polars_core::chunked_array::builder::list::null"],[5968,"core::hash"],[5969,"polars_arrow::array::boolean"],[5970,"polars_core::chunked_array::metadata::env"],[5971,"polars_core::chunked_array::metadata::collect"],[5972,"bitflags::iter"],[5973,"std::fs"],[5974,"std::sync::mutex"],[5975,"polars_arrow::datatypes"],[5976,"polars_arrow::bitmap::utils::iterator"],[5977,"polars_arrow::bitmap::utils::zip_validity"],[5978,"polars_arrow::offset"],[5979,"polars_arrow::array::static_array"],[5980,"core::error"],[5981,"polars_arrow::array::primitive"],[5982,"polars_row::row"],[5983,"polars_arrow::array::binary"],[5984,"polars_arrow::legacy::array::slice"],[5985,"chrono::naive::datetime"],[5986,"alloc::borrow"],[5987,"polars_arrow::array::static_array_collect"],[5988,"bytemuck::zeroable"],[5989,"polars_core::chunked_array::logical::categorical"],[5990,"polars_core::chunked_array::logical::categorical::merge"],[5991,"polars_core::chunked_array::logical"],[5992,"polars_core::datatypes::time_unit"],[5993,"polars_arrow::datatypes::reshape"],[5994,"core::cmp"],[5995,"polars_arrow::datatypes::physical_type"],[5996,"polars_arrow::types"],[5997,"core::borrow"],[5998,"polars_arrow::pushable"],[5999,"polars_core::datatypes::into_scalar"],[6000,"polars_core::chunked_array::logical::categorical::builder"],[6001,"polars_core::chunked_array::logical::categorical::revmap"],[6002,"polars_core::chunked_array::logical::categorical::string_cache"],[6003,"polars_core::chunked_array::logical::enum_"],[6004,"polars_error::warning"],[6005,"polars_arrow::datatypes::schema"],[6006,"polars_core::series::from"],[6007,"polars_core::chunked_array::ndarray"],[6008,"polars_arrow::array::struct_"],[6009,"polars_arrow::record_batch"],[6010,"polars_core::frame::column::scalar"],[6011,"polars_core::series::iterator"],[6012,"polars_utils::idx_vec"],[6013,"rayon::iter::plumbing"],[6014,"polars_core::frame::group_by::into_groups"],[6015,"core::iter::adapters::copied"],[6016,"core::iter::adapters::zip"],[6017,"polars_arrow::legacy::kernels::rolling"],[6018,"polars_utils::float"],[6019,"polars_arrow::types::native"],[6020,"polars_core::frame::group_by::aggregations::agg_list"],[6021,"polars_core::frame::row::av_buffer"],[6022,"polars_core::hashing::identity"],[6023,"polars_core::hashing::vector_hasher"],[6024,"core::alloc"],[6025,"std::os::fd::owned"],[6026,"std::os::fd::raw"],[6027,"std::path"],[6028,"std::ffi::os_str"],[6029,"core::mem::maybe_uninit"],[6030,"polars_arrow::legacy::kernels::time"],[6031,"core::default"],[6032,"core::ffi::c_str"],[6033,"polars_arrow::scalar"],[6034,"std::io::error"],[6035,"alloc::collections"],[6036,"simdutf8::basic"],[6037,"regex::error"],[6038,"alloc::ffi::c_str"],[6039,"polars_arrow::legacy::array::default_arrays"],[6040,"polars_arrow::buffer::immutable"],[6041,"polars_arrow::array::list"],[6042,"polars_core::named_from"],[6043,"polars_core::chunked_array::ops::aggregate"],[6044,"polars_core::chunked_array::ops::aggregate::quantile"],[6045,"polars_arrow::legacy::index"],[6046,"core::pin"],[6047,"core::io::borrowed_buf"],[6048,"std::io"],[6049,"polars_core::chunked_array::ops::aggregate::var"],[6050,"alloc::collections::btree::map"],[6051,"polars_arrow::legacy::array::list"],[6052,"polars_arrow::legacy::array::null"],[6053,"polars_arrow::bitmap::mutable"],[6054,"polars_arrow::array::utf8"],[6055,"polars_schema::schema"],[6056,"alloc::rc"],[6057,"polars_core::series::arithmetic::list_borrowed"],[6058,"polars_core::utils::supertype"],[6059,"polars_arrow::legacy::utils"],[6060,"polars_arrow::legacy::trusted_len::rev"],[6061,"core::iter::sources::repeat"],[6062,"core::iter::adapters::take"],[6063,"polars_core::chunked_array::object::extension"],[6064,"polars_error::constants"],[6065,"polars_core::frame::horizontal"],[6066,"polars_arrow::legacy::prelude"],[6067,"polars_arrow::legacy::array"],[6068,"polars_arrow::legacy::array::utf8"],[6069,"polars_core::utils::any_value"],[6070,"polars_core::utils::schema"],[6071,"polars_core::utils::series"]],"i":"```````````````````````````````````````````Kj000l00000000000000000000000000000000000`000000001010``0000000000000`0`00000001010000000100000000000`000000100000000000`00000000000000000000000000000000100001000000000000000000`00000000000000000000000000000`0000000000000000000000000000000000000000000000000000000000``00000000000000000000000000000000000000000000000000000000000`00000000000000000000010010010000000100000000000000000000000000000000000000000000`A@`00000000000000000000000000````````A@dA@hA@jA@lA@b432140043143214321432143214321432143214321044AA`AAb5436543AAd00076547654`7654365476547654765476547654````````AAf0AAhAAjAAl0AAn43AB`ABb4ABd47734376215044212176215047621504476762150476215047621504215432154376037621504`7621504215437621504762150447621504762150476215047621504`Ff00000000000000000000000000``ABhABj1000101000`ABl``ABnAC````ACdACf101010101010101011010`1010101010``ADdInGd0Ib`3L`22````````42110Lb4ACh43434343434344334343215604321560431150431504315043ACj054542654332671543267154541Fb7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653656577577777757765656533726565437826543782653343782656534378265113````ADh00000If1111`111111110011111111111111111111``111111101111111110Ih2222222222`AEf0000000000000000000000````AEj00AEl00000001```00`0`10000AG`````````````````````````````0AFf``AGbAHb33333CEb4044AFb4AFh055AFj0AFl`88AFn00999999977AGd0`AGhAGj`<<`AGlAGn`AH`0<<????AHdAHf>><<AHh==:AHjAGb0:2AHlAHn`AI`0`0AIbAId`AFj0AIfAFbAIhAIjAIlAG`000AFl61`AIn`AJhAJdAJ```````````````````````````````````````````````AKb00`0`00000000000000000`00000`````AKd0````EfEl1010101010101010101010110010110010101010101010221010101010101010010010````````AMl`Cb``````HnE`ADj`1``2`0210```21````2`````100`1`2100``0`10`2120```0040210``210```BCd`4CEdCEf````AOj``8``654``654``654``654``4`777444BCf765``4``5AOlAN`1010A`:98`:9`:``;3;```````````B@h``35`=;:`;`9:99```90`;:9``;:9``;:9``;:9``9:9`99AJb0=0AMhAMj>AMl>AMnMj8ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlEbJdGh0Db00En00HnjJbMhLjLnMbCnD`DlDfAnEb?>=AEhGh0220020DbEn344AKnAL`43243232664325643253432AK`54305436ALb0ALd06HnE`MjALfAJb><<<<<<AMhCEhBnjJbIdAMj;AMl;AMn;AN`ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlAMhCEhBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlE``AMf0Hn2EbGhDbEnAK`6Jd54321`JbMhLjLnMbCnD`AMhAMj?AMlE`AMnMjAN`ANbANd>=ANfANh>=<;ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlAMhAMjHnAMlE`AMnMjAN`ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlAMhAMjHnAMlE`AMnMjAN`ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOl3MjB@`0005E`00`HnAMl26AMh0CEhBnjJbIdAMj879AMn<AN`ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlAMh0CEhBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlJdjJbMhLjLnMbCnD`AMhCEhBn:9IdAMjHnAMlE`AMnMjAN`ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlAMfJdHnMj0`1AMlE`0AMn3AN`;:985EbGhDb0En0321100997766558844??>>==<<3AMh3121AEhAMd6431AMj==;::9<88AOhAOj0ADjAOl;7CEhBnjJbId9Hn00000AMlE`000AMnMj00AN`0ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADj00AOlE`Eb00GhDb0En0AEh32104432211AK`01432154433225432143214AJb00654312065431260;:JdAMf08765341008765348CbjJbIdANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfEbAEh0AOj0HnBAfAJb5DbAK`7Gh2En2813300133006AMlE`MjAN`;ADjAOl<<4AMhCEhBnjJbIdAMjHn=<AMn<;ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlEbE`3AMhCEhBnjJbIdAMjHnAMl9AMnMjAN`ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlAMhBAh0EbGhDbEnAK`AEhBAjJd8HnE`0010000101000010=101010=0001000010=AJb019887798877``1AMl2:8:98:AKnAL`10`<:<;:<6jJbMhLjLnMbCnD`DbEnMj0CEdCEfBBn55554444AEh04AOhAOj02EbGh:9AK`555AMhAMn3343==<<43==<<33404=4=HnAN`83Jd4AKnAL`1089jJbMhLjLnMbCnD`EbGhDbEnAK`AEh`JdAMh65465465477Mj87654387654376547654AKnAL`Hn0`5jJbMhLjLnMbCnD`Gh0EnEb0Db022E`MjAN`203ADj505AMhAMjHnAMl7AMn76ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlE`2JdAMhHn3AN`7En2Eb0ALb0ALd0B@`00067CEhBnjJbIdAMj<AMlE`AMnMj?ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOh0AOjADjAOlAMhCEhBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlHnE`10AN`5EbAMhCEhBnjJbIdAMj:AMl:AMnMj;ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOl1GhDbEnAEhAJb0E`1AKnAL`7BB`BBbB@dBBdBBfBBhBBjBBlBAh:9?>AK`>Gh:98765432<;DbEn3AEhAMhCEhBnjJbIdAMjHnAMlE`AMnMjAN`ANbANdMhLjANfANhLnMbCnD`ANjANlDlDfANnAnAO`AObAOdAOfAOhAOjADjAOlCEdCEfBBnEhAJbHnEb`````BCd`BCf10`AMb00BC`10010BChBCb32103`3333021032103221033333333AMd31321444444444444444321432144244444444444``41444312444444443`244`444443214321432144443214`6565`565656656565656565656565656666565666665656565656`BCn0000`00`0000000`0`BD`0000000000000000`8787`````BDdAKj000Ah`112101```11111112BDb3030`3003030`300300`3030`0``````0303003030CEjCEl10```````````BDh0000000000`0`````00`````00000BEb`0BE`11``0``01BCl00000000000000000000BFfBFh34210342222342342342`222421034210342222103422222222224222442`2222223422103422222222222222222`22242222222222222210342210342102222222222222222222222221022222222222222222`2222222222222222222102222222222222222222342222221034222221034221034222222210342222222``Ej`0BGh111111111111111111101110111111111110101010101110101011101011111101101111111111111101011101111111111011111110101BDn12221222222221122222222221212122222222222221221222122222222122222221222212212222222212222221222222212222222122122222`BGn00000000000000000000000000`BHd0``0``````BHlAl`2`22222222210`222BH`1BEj40`1023BIfBHhBHf4537621045374537453745373456210045376210453731621044537454455`643445377`62104445537445335BI`04673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648CEnCF`0``````````BJbBJd0`BJf0BJhBJj``101010101010`10101010BEh211210210210210210`0210210210000022110`2102102121021```210210210210210`````````BJl000000000000BJn000111111`````````BGb````````````AKj00`0Bh0BO`CFbN`Ah6```BCd`326```````6```4BCf`43``````14343``43`7`5BLf````381``````BIl```71`````99`99``9``9`9``0``8OfBL`LdNb>B@l:5BLbBLd84444????4?44AKjBh08766BO`6BGb6N`<65=43;:928170<65=`98BKn04<;:9281=76>4<;:9281=76>4<;:9281=76>4:B@`0005;66``8;;5;;;;:392`655=<;;4:392>87?65=<;4:392>87?;`;;;65=<;;4:392>87?995=;;;:392>87?55==;;339922??<AMd<7766>=<<<;4:3?98BLf<8888877777??>==================6<5;4BIl;:1BNfBNjBNl;;;;;;;;LdCFd0000111==<=BOb222Fn3?3=B@l=9Of55`AKjBh2BL`8BO`NbBGb7N`BIlBLbBLdBLf;8:9;8Ld876=5432100000:9<=0<0BEf1`1``1BOl0BOnB@l6;2204C@`C@b6266666666666`OfBL`Bh999````;7799699999`9`AKd0:C@n3`;994243;NbBGb9N`BIlBLbBLdBLfAKj:LdB@`0002<>=11BO`:9B@l987654>OfBL`53=<2;:987C@`666666667Bh77803275?>4=<;:97`C@n914386NbBGb7N`BIlBLbBLdBLf?66<AKjLd:::0CEjCEl10```BNfBNjBNl`CAh000000000000000000000`CAl00000000000000000000000000000`BCdBCf10``AKd0``````CFfCFh``Kn000000000000000000000000000000`0000000`CBn0`````BDlCBj101012101010101Jn0``00```BGj11````01AfBOh0111111`0010000`10001001001110000001CCb3420342111222211221211224214242222034220342222220342111142222222224422222211211142220342222222222222222222222222222222222222222212221111111122222214222222`203420342220BFj322333322003333222322333333333322223222232233332232223333333333333333333333333333333333333323133333332`223322222333233252233332223312332223222233333333223322223333533333333333145333333333314533333333333331453333322322222145333223``Cj000000000000000000000CCj00`0```CCf1110CChAj033`33333210033333321002100210033333``BKnFh0100CCl0`00000000000000000000000CCn0``````````0CD`CDd```````211````22222222CDlAKf43210432CDb543543543``CDf06``6653322654322654632654``636533665565`6666653265546666226CDj337333````4764376577743765375BFn6888383``3466668``8863```3`8888768254876`5487654876854876``````","f":"`````````````{{}b}``0```````````````{{}d}``````````````{{fh}b}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}}nA`}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}{f{Al}}}AfA`}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}{{Cb{}{{Bl{Bn}}{C`{Bn}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cf{B`}{{Cd{B`}}}}Ch}}{{{f{{l{j}}}}c}{{l{j}}}{{Cl{Cj}{{Cd{Af}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cl{{B`{Cj}}}{{Cd{{B`{c}}}}}}Ch}Cb}{{{f{{l{Cn}}}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{{l{D`}}}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{l{c}}e}{{l{c}}}A`{{Cf{}{{Cd{}}}}Ch}}{{{f{{l{c}}}}e}DbCb{{Cl{{f{BjDd}}}}}}{{{f{{l{c}}}}{f{Cf}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cf}}}{{l{e}}}A`Cb}{{{f{{l{Df}}}}c}{{l{Df}}}{{Cl{{f{{Dj{Dh}}}}}{{Cd{{f{{Dj{Dh}}}}}}}}}}{{{f{{l{Dl}}}}c}{{l{Dl}}}{{Cl{{f{Dn}}}{{Cd{{f{Dn}}}}}}}}{{{f{Bj{l{c}}}}e}bA`{{Cf{}{{Cd{}}}}Ch}}{{{f{{l{c}}}}E`g}{{l{i}}}Cb{}{{Cl{}{{Cd{e}}}}}Cb}{{{f{{l{j}}}}{f{Cf}}}{{Ah{Eb}}}}{{{f{{l{c}}}}g{f{Bj{Dj{e}}}}}bA`{}{{Cf{B`{f{e}}}{{Cd{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cf{}{{Cd{}}}}Ch}}{{{f{{l{Dl}}}}c}{{l{Dl}}}{{Cl{Ed{f{Dn}}}{{Cd{Ed}}}}Ch}}{{{f{{l{c}}}}Ef}EhA`}{{{f{{l{c}}}}{f{{Dj{Ej}}}}{f{El}}}{{Ah{Eh}}}A`}{{{f{{l{c}}}}}{{Ah{Eh}}}A`}`{{{f{{l{Dl}}}}}En}{{{f{{l{c}}}}}{{f{{l{c}}}}}Cb}{{{f{{l{c}}}}}{{f{E`}}}Cb}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}CbCb{{Cl{{B`{Cj}}B`B`}{{Cd{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eF`{}}00{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{{l{c}}}}}{{Fd{Fb}}}Cb}``{{{f{{l{c}}}}e}{{l{g}}}A`{{Cf{}{{Cd{}}}}Ch}A`}{{{f{{l{c}}}}{f{E`}}}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{E`}}Ff}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Fh}{{{f{{l{c}}}}e}{{Ah{Af}}}FhAd}{{{f{{l{c}}}}}FjCb}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{Fl}}}}}}}Cb}{{{f{{l{c}}}}}{{f{{G`{Fn}}}}}Cb}{{{f{Bj{l{c}}}}}{{f{Bj{G`{Fn}}}}}Cb}{{{f{{l{c}}}}}{{l{c}}}Cb}0{{f{f{Bjc}}}b{}}{fb}`{{{f{Bj{l{c}}}}}b{CbA`}}`{fGb}{{{f{{l{c}}}}}{{Ah{{f{Dj}}}}}A`}{{{f{Bj{l{c}}}}{f{{l{c}}}}Gd}bCb}{{{f{Bj{l{c}}}}{f{{l{e}}}}Gd}bCbCb}{{{f{{l{c}}}}}{{`{{Gf{}{{Bb{{f{Dj}}}}}}}}}A`}{{}{{l{c}}}Cb}{Fl{{f{c}}}{}}0{Fl{{f{Bjc}}}{}}0{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}}bCb}{Flb}0{{{f{{l{c}}}}}{{l{c}}}Cb}{{{f{{l{c}}}}}{{f{E`}}}Cb}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}{{{f{{l{c}}}}e}GhA`Ad}10{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}A`}{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Gh}}}{{Ah{{l{c}}}}}{{Cb{}{{Gj{Bn}}{C`{Bn}}}}}}{{{f{{l{c}}}}}B`Cb}{{{f{{l{c}}}}}{{B`{Fl}}}Cb}`{{{f{{l{An}}}}{f{BjGl}}}Gn}{{{f{{l{c}}}}{f{BjGl}}}GnA`}{{{f{{l{c}}}}e}bCb{{Cl{B`}}}}{{{f{{l{j}}}}c}b{{Cl{{B`{Cj}}}}}}{c{{l{e}}}H`{{Cb{}{{Hb{c}}}}}}{cc{}}0{{Bhc}{{l{e}}}Hd{{Cb{}{{Hb{}}}}Cb}}{{{f{{l{c}}}}e}{{l{c}}}{{Cb{}{{Hb{}}}}Cb}Hd}{{Bh{G`{Fn}}}{{l{c}}}Cb}{{Bh{G`{Fn}}E`}{{l{c}}}Cb}{c{{l{e}}}{{Hd{}{{Bb{B`}}}}}A`}{c{{l{e}}}{{Hd{}{{Bb{{Hh{G`{B`{Hf}}}}}}}}}A`}{c{{l{An}}}{{Hd{}{{Bb{{B`{d}}}}}}}}{{Bhc}{{l{e}}}{{Bf{}{{Bb{B`}}}}}A`}13{{Bhc}{{l{e}}}{{Bf{}{{Bb{}}}}}A`}`{c{{l{e}}}{{Hj{}{{Bb{B`}}}}}A`}{{Bh{f{Dj}}}{{l{c}}}A`}{{Bh{f{{Dj{B`}}}}}{{l{c}}}A`}{c{{l{e}}}{{Hl{}{{Bb{B`}}}}}A`}{{BhG`}{{l{c}}}A`}{{BhG`{B`{Hf}}}{{l{c}}}A`}{{BhFl}{{l{c}}}A`}0{{{f{{l{c}}}}Fl}{{l{c}}}Cb}{{BhFl{f{E`}}}Eb}{{{f{{l{c}}}}Fl}B`Cb}{{{f{{l{c}}}}Fl}{{Ah{Hn}}}A`}{{{f{{l{c}}}}Fl}HnA`}{{{f{{l{j}}}}Fl}{{B`{Af}}}}{{{f{{l{c}}}}}{{B`{I`}}}Cb}{{{f{{l{c}}}}}dCb}{{{f{{l{c}}}}}IbCb}{{{f{{l{j}}}}}Af}{{{f{{l{c}}}}}B`Cb}0{{{f{{l{{Id{c}}}}}}Fl}{{B`{{f{If}}}}}Ih}09{{{f{{l{c}}}}dd}{{Ah{Al}}}A`}{{{f{{l{c}}}}FldFl}AlF`}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}{{{f{{l{c}}}}e}GhA`Ad}018{{{f{{l{c}}}}{B`{Fl}}}{{l{c}}}Cb}{{}Fl}0{{FlIj{B`{Il}}}{{l{c}}}A`}{{{f{{l{j}}}}}{{f{E`}}}}{{{f{{l{c}}}}}{{J`{{In{c}}}}}Cb}{{}c{}}0{{}Ej}{{{l{Jb}}{B`{Fl}}Fl}{{Ah{Jd}}}}{{{l{Jb}}{B`{Fl}}Fl}Jd}{{{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}}{{`{JfJh{Jj{}{{Bb{}}}}GfHl}}}A`}{{{l{c}}}AfCb}{{{f{{l{c}}}}}dCb}{{{f{{l{c}}}}}GhJl}000{{{f{{l{c}}}}}GhCb}02{{{f{{l{c}}}}}JnCb}{{{f{{l{c}}}}}{{`{{K`{}{{Bb{B`}}}}}}}Cb}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{{l{c}}}}}}}}}Cb}{{{f{{l{c}}}}}{{Kf{{Kb{Fn}}{Kd{{f{Fn}}}{{Cd{{B`{{f{Hf}}}}}}}}}}}Cb}`{{fc}Gb{{Kh{Dn}}}}{{{f{{l{c}}}}}B`Cb}{{{f{{l{c}}}}}{{B`{Fl}}}Cb}{{{f{{l{c}}}}}{{Kj{c}}}Cb}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}{{c{f{{l{e}}}}}g{}A`{}}{{c{l{e}}}g{}A`{}}{{{f{{l{c}}}}}FlCb}0{{{f{{l{c}}}}e}{{l{c}}}A`{AbKl}}00{{{f{{l{c}}}}Fl}{{l{c}}}Cb}{{{f{{l{c}}}}e}GhA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}10{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{Df}}}}}{{B`{{f{{Dj{Dh}}}}}}}}{{{f{{l{c}}}}}KnA`}{{{f{{l{An}}}}}{{B`{n}}}}{{{f{{l{c}}}}}{{B`{n}}}A`}{{{f{{l{c}}}}}{{B`{n}}}F`}{{{f{{l{c}}}}}KnF`}{{{f{Bj{l{c}}}}{In{c}}}bCb}`{{{f{{l{c}}}}}{{L`{c}}}Cb}{{{f{{l{c}}}}}{{f{{Ld{{Lb{c}}}}}}}Cb}{{{f{{l{c}}}}}{{B`{{Lf{Fb}}}}}Cb}{{{f{Bj{l{c}}}}}{{f{Bj{Ld{{Lb{c}}}}}}}Cb}{{{f{{l{c}}}}}{{Ld{{Lb{c}}}}}Cb}=<;{{{f{{l{c}}}}}{{B`{Hh}}}A`};{{Bh{f{{Dj{Dh}}}}FlFl}{{l{An}}}}{{Bh{f{Dj}}}{{l{c}}}A`}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}FlCb}{{{f{{l{c}}}}}{{Ah{Fl}}}A`}{{{f{{l{c}}}}}{{f{Bh}}}Cb}{{Bh{Lh{Il}}}{{l{Lj}}}}{{Bhc}{{l{Jb}}}{{Kh{{Dj{{B`{Ll}}}}}}}}{{Bhc}{{l{Ln}}}{{Kh{{Dj{{B`{M`}}}}}}}}{{Bhc}{{l{Mb}}}{{Kh{{Dj{{B`{Md}}}}}}}}{{Bhc}{{l{Mb}}}{{Kh{{Dj{Md}}}}}}{{Bh{Lh{Mf}}}{{l{Mh}}}}{{Bhc}{{l{Ln}}}{{Kh{{Dj{M`}}}}}}{{Bhc}{{l{Lj}}}{{Kh{{Dj{Il}}}}}}{{Bh{Lh{M`}}}{{l{Ln}}}}{{Bhc}{{l{Mh}}}{{Kh{{Dj{Mf}}}}}}{{Bhc}{{l{Jb}}}{{Kh{{Dj{Ll}}}}}}{{Bhc}{{l{Cn}}}{{Kh{{Dj{Ij}}}}}}{{Bhc}{{l{D`}}}{{Kh{{Dj{n}}}}}}{{Bhc}{{l{Dl}}}{{Kh{{Dj{Dd}}}}}}{{Bh{Lh{Md}}}{{l{Mb}}}}{{Bhc}{{l{Df}}}{{Kh{{Dj{{B`{{G`{Dh}}}}}}}}}}{{Bhc}{{l{An}}}{{Kh{{Dj{{B`{d}}}}}}}}{{Bhc}{{l{An}}}{{Kh{{Dj{d}}}}}}{{Bhc}{{l{D`}}}{{Kh{{Dj{{B`{n}}}}}}}}{{Bhc}{{l{Mh}}}{{Kh{{Dj{{B`{Mf}}}}}}}}{{Bhc}{{l{Lj}}}{{Kh{{Dj{{B`{Il}}}}}}}}{{Bhc}{{l{Df}}}{{Kh{{Dj{{G`{Dh}}}}}}}}{{Bhc}{{l{Cn}}}{{Kh{{Dj{{B`{Ij}}}}}}}}{{Bhc}{{l{Dl}}}{{Kh{{Dj{{B`{Dd}}}}}}}}{Bh{{l{{Id{c}}}}}Ih}{{{f{{l{c}}}}FlFl}{{l{c}}}A`}{{Bh{G`{c}}}{{l{{Id{c}}}}}Ih}{{Bh{G`{c}}Hf}{{l{{Id{c}}}}}Ih}{{BhG`}{{l{c}}}A`}{{{Ld{Mj}}{G`{Fn}}I`I`}{{l{c}}}Cb}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{c}}}}{f{{l{c}}}}}GhA`}{{{f{{l{c}}}}e}GhA`Ad}01{{{f{{l{c}}}}}FlCb}{{{f{{l{An}}}}}Fl}0``{{{f{{l{Dl}}}}}{{`{{Ml{}{{Bb{{B`{{f{Dn}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Bj{l{j}}}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Dl}}}}}{{`{{Mn{}{{Bb{{B`{{f{Dn}}}}}}}}}}}}{{{f{{l{c}}}}}KnA`}{{{f{Bj{l{c}}}}}bCb}{{{f{{l{c}}}}nN`}{{Ah{{B`{n}}}}}F`}{{{f{{l{c}}}}nN`}{{Ah{Kn}}}F`}{{BhFln}{{Ah{{l{An}}}}}}{{BhFlnn}{{Ah{{l{c}}}}}A`}{{BhFl}{{l{c}}}A`}{{BhFlnn}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}Cb}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{c}}}}}{{B`{Hf}}}Cb}{{{f{{l{c}}}}}{{f{Mj}}}Cb}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}Bh}bCb}{{{f{{l{c}}}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cf}}Nb}{{Ah{Af}}}A`}{{{f{{l{c}}}}Fle}{{Ah{{l{c}}}}}Jl{{Cl{{f{Bj{l{c}}}}}{{Cd{B`}}}}}}{{{f{{l{c}}}}ndd{B`{Il}}}{{Ah{{l{c}}}}}Cb}{{{f{{l{c}}}}Fldd{B`{Il}}}{{Ah{{l{c}}}}}Cb}{{{f{{l{c}}}}eB`}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}}{{{f{{l{c}}}}eg}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}{{Cf{B`}{{Cd{B`}}}}}}{{{f{{l{c}}}}{f{Gh}}B`}{{Ah{{l{c}}}}}A`}{{{f{Bj{l{j}}}}}b}{{{f{Bj{l{c}}}}d}bCb}{{{f{Bj{l{j}}}}E`}b}{{{f{Bj{l{c}}}}I`}bCb}{{{f{Bj{l{c}}}}Jn}bCb}{{{f{{l{c}}}}Md}{{l{c}}}A`}{{{f{{l{c}}}}MdB`}{{l{c}}}A`}{{{f{Bj{l{c}}}}}bCb}{{{f{{l{c}}}}MdFl}{{l{c}}}Cb}0{{{f{{l{c}}}}d}{{l{c}}}A`}{{{f{{l{c}}}}Ef}{{l{c}}}A`}{{{f{{l{c}}}}Md}{{Hh{{l{c}}{l{c}}}}}Cb}0{{{f{{l{c}}}}Dh}{{B`{n}}}A`}{{{f{{l{c}}}}Dh}KnF`}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{An}}}}}{{B`{I`}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{c}}}}}KnA`}{{{f{{l{c}}}}{B`{Fl}}}{{l{c}}}Cb}{{{f{{l{c}}}}{f{Eh}}}{{Ah{{l{c}}}}}Cb}{{{f{{l{c}}}}{f{e}}}{{Ah{{l{c}}}}}Cb{{Kh{{Dj{I`}}}}Nd}}{{{f{{l{c}}}}{f{Eh}}}{{l{c}}}{{Cb{}{{Gj{Bn}}{Nf{Bn}}{Bl{Bn}}}}Cb}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Cb{}{{Gj{Bn}}{Nf{Bn}}{Bl{Bn}}}}Cb}{{Kh{{Dj{I`}}}}Nd}}`{{{f{{l{c}}}}dNh}{{G`{{G`{Nj}}}}}Cb}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{Dl}}}}Fl}{{Ah{Af}}}}{{{f{Bj{l{j}}}}E`}b}{{{f{{l{j}}}}}{{Ah{Nl}}}}{{{f{{l{c}}}}}{{Ah{Nn}}}A`}{fc{}}{{{f{{l{Df}}}}}Db}{{{f{{l{c}}}}}{{G`{B`}}}A`}{{{f{{l{c}}}}}{{O`{G`{G`{B`}}}}}A`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}{{c{f{{l{e}}}}}g{}A`{}}{{c{l{e}}}g{}A`{}}{{{f{{l{j}}}}c}{{Ah{{l{j}}}}}{{Cl{Cj}{{Cd{{Ah{Af}}}}}}}}{{{f{{l{j}}}}e}{{Ah{{l{g}}}}}{}{{Cl{{B`{Cj}}}{{Cd{{Ah{{B`{c}}}}}}}}Ch}Cb}{{{f{{l{c}}}}g}{{Ob{Dbe}}}Cb{}{{Cl{{f{BjDd}}}{{Cd{{Ob{be}}}}}}}}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{}{}{{Cl{}{{Cd{{Ob{eg}}}}}}}Cb}{c{{Ob{e}}}{}{}}0{{Bhg}{{Ob{{l{i}}e}}}H`{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{{Cb{}{{Hb{c}}}}Cb}}{{}{{Ob{c}}}{}}0{{{f{{l{j}}}}{f{{l{c}}}}e}{{Ah{{l{j}}}}}Cb{{Cl{{B`{Cj}}B`}{{Cd{{Ah{{B`{Af}}}}}}}}}}{fOd}0{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{{f{{l{c}}}}}}}Cb}{{{f{Bj{l{c}}}}}bCb}{{{f{{l{c}}}}Fl}{}Cb}{{{f{{l{c}}}}Dh}{{B`{n}}}A`}{{{f{{l{c}}}}Dh}KnF`}{{}c{}}0{{Bhc}{{l{e}}}H`{{Cb{}{{Hb{c}}}}Cb}}{{{f{{l{e}}}}c}{{l{e}}}H`{{Cb{}{{Hb{c}}}}Cb}}{{{f{{l{c}}}}{G`{Fn}}}{{l{c}}}Cb}{{{l{c}}Bh}{{l{c}}}Cb}{{{f{{Dj{Of}}}}e}c{}{{Oh{{f{Eh}}}{{Cd{c}}}}}}{{{f{{l{c}}}}Jn}{{l{c}}}Cb}{{{f{{l{c}}}}}eA`{}}{{{l{c}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}2301{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}543201543276453210452310{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Cb{{Cl{{B`{Cj}}B`}{{Cd{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{Gh}}{f{{l{c}}}}}{{Ah{{l{c}}}}}{{Cb{}{{Nf{Bn}}}}}}````{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}e{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}g{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}65654654650654654````````{{fh}b}000{{{f{BjA@b}}}b}{{{f{Bj{A@d{c}}}}}b{A@fNd}}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{{{f{Bj{A@d{c}}}}{B`{e}}}b{A@fNd}{{Kh{c}}}}{{{f{BjA@b}}{B`{c}}}b{}}{{{f{BjA@b}}c}b{}}{{{f{Bj{A@d{c}}}}e}b{A@fNd}{{Kh{c}}}}{{{f{BjA@h}}d}b}5{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{{A@d{c}}}}}{{A@d{c}}}{A@fNd}}{{{f{A@h}}}A@h}{{{f{A@j}}}A@j}{{{f{{A@l{c}}}}}{{A@l{c}}}{A`A@n}}{{f{f{Bjc}}}b{}}000{fb}000{Fl{{f{c}}}{}}000{Fl{{f{Bjc}}}{}}000{Flb}000{A@b{{l{c}}}Cb}{{{A@d{Dn}}}Db}{{{A@d{{Dj{Dh}}}}}En}{AA`Db}{AAbEn}{A@hGh}`{{{A@l{c}}}{{l{c}}}A`}{cc{}}000{{Bhe}AAd{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}AAd{}{{Bf{}{{Bb{c}}}}}}{{Bh{f{{Dj{c}}}}}AAd{}}{{Bh{f{{Dj{{B`{c}}}}}}}AAd{}}{{}Fl}000{{}c{}}000`{{BhFl}{{A@d{c}}}{A@fNd}}{{BhFl}A@h}{{BhFl}A@j}{{BhFl}{{A@l{c}}}A`}{{{f{BjA@b}}}b}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{fc{}}000{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}000<<<<````````{{{f{BjAAf}}{f{H`}}}b}{{{f{BjAAf}}}b}{{{f{BjAAh}}}b}{{{f{BjAAj}}c}b{{Bf{}{{Bb{{B`{d}}}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{B`}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{}}}}Hl}}{{{f{BjAAn}}}b}54{{{f{BjAB`}}}b}{{{f{BjABb}}}b}{{{f{BjAAj}}}b}{{{f{BjABd}}}b}{{{f{Bj{AAl{c}}}}}bA`}{{{f{BjAAf}}{B`{{f{H`}}}}}b}{{{f{BjAAf}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{BjAAn}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{B`{{f{Dj}}}}}bA`}{{{f{BjAAn}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAf}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAh}}{f{Af}}}{{Ah{b}}}}{{{f{BjAB`}}{f{Af}}}{{Ah{b}}}}{{{f{BjABb}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAj}}{f{Af}}}{{Ah{b}}}}{{{f{BjABd}}{f{Af}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{f{Af}}}{{Ah{b}}}A`}{{{f{Bj{AAl{c}}}}{f{Dj}}}bA`}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{B`{{f{Dn}}}}}}}}Hl}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{B`{{f{{Dj{Dh}}}}}}}}}}Hl}}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{f{Dn}}}}}}}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{f{{Dj{Dh}}}}}}}}}}{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000`{{}AAf}{{}AAh}{Fl{{f{c}}}{}}000000{Fl{{f{Bjc}}}{}}000000{Flb}000000{{{f{AB`}}}d}{{{f{ABb}}}d}{{{f{AAj}}}d}{{{f{{AAl{c}}}}}dA`}{{{f{AAn}}}d}{{{f{AB`}}}{{f{Mj}}}}{{{f{ABb}}}{{f{Mj}}}}{{{f{AAj}}}{{f{Mj}}}}{{{f{{AAl{c}}}}}{{f{Mj}}}A`}{{{f{AAn}}}{{f{Mj}}}}{{{f{BjAAf}}}Eb}{{{f{BjAAh}}}Eb}{{{f{BjABd}}}Eb}{{{f{BjAAn}}}Eb}{cc{}}000000{{{f{E`}}FlFlBh}{{Fd{AAn}}}}{{}Fl}000000{{{f{BjAB`}}}Fn}{{{f{BjABb}}}Fn}{{{f{BjAAj}}}Fn}{{{f{Bj{AAl{c}}}}}FnA`}{{{f{BjAAn}}}Fn}{{}c{}}000000{{BhFl{B`{E`}}}AAf}{{BhFl{B`{E`}}}AAh}{{BhFlFl}AB`}{{BhFlFl}ABb}{{BhFlFl}AAj}{{BhFl}ABd}{{BhFlFlE`}{{AAl{c}}}A`}{{BhFlFlE`E`}{{AAl{c}}}A`}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{fOd}000000;;;;;;;````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Ff}}}Ff}{{f{f{Bjc}}}b{}}{fb}{{}Ff}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{Ff}}{f{Ff}}}d}{{f{f{c}}}d{}}0{{{f{Ff}}{f{BjGl}}}Gn}{cc{}}{{{f{Ff}}{f{Bjc}}}bABf}{{}Fl}{{}c{}}{{{f{Ff}}}d}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5``{{ABhBh}{{l{c}}}Cb}{{ABj{f{{l{c}}}}}{{l{c}}}Cb}10{{ABjBhE`}{{l{c}}}Cb}0{{ABhBh}{{Ob{{l{c}}e}}}Cb{}}{{ABj{f{{l{c}}}}}{{Ob{{l{c}}e}}}Cb{}}10{{ABjBhE`}{{Ob{{l{c}}e}}}Cb{}}0`{ABlABl}``{{ABnBhE`}e{}{{AC`{c}}}}{{eBhE`}AC`{}{{Hj{}{{Bb{c}}}}}}```{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{Fl{{f{c}}}{}}0{Fl{{f{Bjc}}}{}}0{Flb}0{cc{}}0{{}Fl}0{{}c{}}000{{{f{ACb}}}ACd}{{{f{BjACd}}}{{B`{c}}}{}}{{{f{Bj{ACf{c}}}}}{{B`{e}}}Bf{}}1{{{f{Bj{ACf{c}}}}}{{B`{e}}}Gf{}}`{{{f{ACd}}}{{Hh{Fl{B`{Fl}}}}}}{{{f{{ACf{c}}}}}{{Hh{Fl{B`{Fl}}}}}Bf}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}099`````````````````````````{{fh}b}0000{{}Gd}{{}Ib}{{GdGd}Gd}{{IbIb}Ib}{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}3210{{{f{Gd}}}Mf}0{{{f{Ib}}}Dh}05432{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000{{{f{{Lb{c}}}}}{{Fd{Fb}}}Cb}{{{f{{Lb{c}}}}}{{Lb{c}}}Cb}{{{f{{In{c}}}}}{{In{c}}}Cb}{{{f{ACh}}}ACh}{{{f{Gd}}}Gd}{{{f{Ib}}}Ib}{{f{f{Bjc}}}b{}}0000{fb}0000{{{f{BjACj}}}b}0{GdGd}{IbIb}{{{f{Gd}}Gd}d}{{{f{Ib}}Ib}d}{{}{{Lb{c}}}Cb}{{}{{In{c}}}Cb}{{}Gd}{{}Ib}{{{f{{L`{c}}}}}{{f{e}}}Cb{}}{Fl{{f{c}}}{}}000000{Fl{{f{Bjc}}}{}}000000{{GdGd}Gd}{{IbIb}Ib}{{}d}{{{f{Fb}}}{{B`{I`}}}}{{{In{c}}I`}{{In{c}}}Cb}{{{f{{In{c}}}}}{{B`{I`}}}Cb}{{{In{c}}{B`{I`}}}{{In{c}}}Cb}{Flb}000000<;5{{{f{Gd}}{f{Gd}}}d}{{{f{Ib}}{f{Ib}}}d}7{{{f{BjGd}}c}b{{Hd{}{{Bb{Gd}}}}}}{{{f{BjIb}}c}b{{Hd{}{{Bb{Ib}}}}}}{{{In{c}}d}{{In{c}}}Cb}{{{In{c}}{B`{d}}}{{In{c}}}Cb}{{{f{{In{c}}}}Gd}{{In{c}}}Cb}{{{f{{In{c}}}}Gd}{{In{e}}}CbCb}{{{In{c}}Ib}{{In{c}}}Cb}{{{In{c}}{B`{Ib}}}{{In{c}}}Cb}{{{f{{In{c}}}}{f{BjGl}}}GnCb}{{{f{ACh}}{f{BjGl}}}Gn}{{{f{Gd}}{f{BjGl}}}Gn}0000{{{f{Ib}}{f{BjGl}}}Gn}0000{cc{}}000000{Mf{{B`{Gd}}}}{Dh{{B`{Ib}}}}{MfGd}0{DhIb}010{cGd{{Hd{}{{Bb{Gd}}}}}}{cIb{{Hd{}{{Bb{Ib}}}}}}{{{f{Dn}}}{{B`{Gd}}}}{{{f{Dn}}}{{B`{Ib}}}}{{{f{{In{c}}}}}{{B`{I`}}}Cb}{{{f{{In{c}}}}}dCb}{{{f{Ib}}}d}{{{f{Fb}}}Ib}{{{f{{In{c}}}}}IbCb}0{{{f{{In{c}}}}}{{B`{f}}}Cb}0{{{f{Bj{Lb{c}}}}}{{f{Bj{In{c}}}}}Cb}{{{f{Ib}}}Jn}{{}Fl}000000{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}{{GdGd}Gd}{{IbIb}Ib}{{{f{Gd}}Gd}d}{{{f{Ib}}Ib}d}{{}c{}}000000{Gdc{}}{Ibc{}}{{{f{Gd}}}d}{{{f{Ib}}}d}{{{f{{In{c}}}}}dCb}21{{{f{{In{c}}}}}JnCb}111{{{f{Gd}}}{{ACl{Gd}}}}{{{f{Ib}}}{{ACl{Ib}}}}{{{f{Gd}}}{{ACn{Gd}}}}{{{f{Ib}}}{{ACn{Ib}}}}{{}d}{{}{{f{{ADb{AD`}}}}}}{{{f{Fb}}}{{B`{Kn}}}}{{{f{{In{c}}}}}{{B`{Kn}}}Cb}{{{In{c}}}{{In{c}}}Cb}{{{In{c}}B`}{{In{c}}}Cb}{{{f{{In{c}}}}{In{c}}}{{ADd{c}}}Cb}4321{{{In{c}}}{{Lb{c}}}Cb}{GdGd}{IbIb}{{{f{{Lb{c}}}}}{{Lf{{In{c}}}}}Cb}{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}{{{f{BjGd}}Gdd}b}{{{f{BjIb}}Ibd}b}{{{f{Bj{In{c}}}}{B`{I`}}}bCb}{{{f{Bj{In{c}}}}d}bCb}{{{f{BjIb}}d}b}{{{f{Bj{In{c}}}}Ib}bCb}{{{f{Bj{In{c}}}}B`}bCb}033{{{f{Bj{In{c}}}}Jn}bCb}{{{f{BjIb}}Jn}b}{{{In{c}}Jn}{{In{c}}}Cb}{{{In{c}}{B`{Jn}}}{{In{c}}}Cb}{{GdGd}Gd}{{IbIb}Ib}>=10{{{Lb{c}}}{{In{c}}}Cb}{fc{}}0000{{{f{BjGd}}Gd}b}{{{f{BjIb}}Ib}b}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{{{f{{Lb{c}}}}}{{B`{{Lf{{In{c}}}}}}}Cb}{{{f{{Lb{c}}}}}{{B`{{J`{{In{c}}}}}}}Cb}{fOd}000000:9{{{f{{Lb{c}}}}}{{f{{ADf{Fb}}}}}Cb}{{}c{}}000000{ACjACj}0{{{f{{Lb{c}}}}}{{J`{{In{c}}}}}Cb}````{{fh}b}{{{f{{ADh{c}}}}Fl}{{Hh{{ADh{c}}{ADh{c}}}}}Ih}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{f{c}}}}}}}}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{B`{{f{c}}}}}}}}}}{{ADje}g{}{{Hd{}{{Bb{c}}}}}{}}0{{{f{If}}}{{f{ADl}}}}{{{f{{ADh{c}}}}}{{f{ADl}}}Ih}{{{f{Bj{ADh{c}}}}}{{f{BjADl}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{{{f{{ADh{c}}}}Fl}dIh}{{{f{{ADh{c}}}}}{{ADh{c}}}{IhA@n}}{{f{f{Bjc}}}b{}}{fb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{{ADh{c}}}}}{{f{ADj}}}Ih}{{{f{{f{If}}}}{f{{f{If}}}}}d}{{{f{If}}{f{If}}}d}{{{f{{ADh{c}}}}{f{BjGl}}}Gn{IhADn}}{{{G`{c}}}{{ADh{c}}}Ih}{cc{}}{{FlADj}{{ADh{c}}}Ih}{{{f{{ADh{c}}}}Fl}{{B`{{f{c}}}}}Ih}{{}ADj}{{{f{Hf}}{f{{ADh{c}}}}{f{{ADh{c}}}}}{{ADh{c}}}Ih}{{ADj{f{Hf}}cc}{{ADh{e}}}{}Ih}{{{f{Hf}}{f{{ADh{c}}}}e}{{ADh{c}}}Ih{}}{{{f{Hf}}c{f{{ADh{e}}}}}{{ADh{e}}}{}Ih}{{}Fl}{{}c{}}{{{f{{ADh{c}}}}}eIh{}}{{{f{{ADh{c}}}}Fl}dIh}0{{fFl}d}{{{f{{ADh{c}}}}}{{AEd{{f{c}}{AE`{c}}AEb}}}Ih}{{{f{{ADh{c}}}}}{{AEd{egAEb}}}Ih{}{}}{{{f{{ADh{c}}}}}FlIh}0`{db}{{{f{Bj{ADh{c}}}}{B`{Hf}}}bIh}{{{f{Bj{ADh{c}}}}FlFl}bIh}{{fFlFl}c{}}01{{{f{{ADh{c}}}}Fl}{{Hh{{Fd{H`}}{Fd{H`}}}}}Ih}0{{{f{If}}}{{Fd{If}}}}{{{f{{ADh{c}}}}}{{Fd{H`}}}Ih}{fc{}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{f{c}}e}}}}}}}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{B`{{f{c}}}}e}}}}}}}}{{ADjg}{{Ob{ie}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{}}0{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{If}}}{{f{Dn}}}}{{}{{f{Dn}}}}{{{f{{ADh{c}}}}}{{B`{{f{Hf}}}}}Ih}{{{f{{ADh{c}}}}Fl}{{f{c}}}Ih}{{{f{{ADh{c}}}}Fl}eIh{}}1{{{f{{ADh{c}}}}}{{AE`{c}}}Ih}{{{f{{ADh{c}}}}}eIh{}}{{}c{}}{{{f{{ADh{c}}}}{B`{Hf}}}{{Fd{H`}}}Ih}{{{ADh{c}}{B`{Hf}}}{{ADh{c}}}Ih}0`{{{f{Bj{AEf{c}}}}}bIh}0{{{f{Bj{AEf{c}}}}{B`{c}}}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}bIh}{{{f{Bj{AEf{c}}}}c}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}{{Ah{b}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}{{AEf{c}}}Ih}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{AEf{c}}}{{AEh{c}}}Ih}{cc{}}{{{f{{AEf{c}}}}BhFlFl}{{Fd{AAn}}}Ih}{{}Fl}{{}c{}}{{BhFl}{{AEf{c}}}Ih}{{{f{Bj{AEf{c}}}}}AfIh}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5````{{{f{BjAEj}}}b}{{{f{BjAEj}}{B`{{f{ADl}}}}}b}{{{f{BjAEj}}{f{ADl}}}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{AEl}}{f{BjGl}}}Gn}{cc{}}{{{f{AEj}}BhFlFl}{{Fd{AAn}}}}{{BhFl}{{Fd{AEj}}}}{{}AEn}{{}ADj}{{}Fl}{{}c{}}{{}d}`{{AF`AEnADj}b}{{{f{BjAEj}}}Af}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6````````````````````````````````````````````{{fh}b}{{{f{AFb}}}n}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cf{{B`{e}}}{{Cd{{B`{c}}}}}}Ch}}{{{f{AFh}}{f{Cf}}}AFh}{{{f{AFh}}{f{Cf}}}{{l{c}}}Cb}{{{f{{AFf{}{{AFd{c}}}}}}i{f{Bj{Dj{g}}}}}b{}{}{}{{Cf{{B`{e}}{f{g}}}{{Cd{g}}}}}}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cf{e}{{Cd{c}}}}Ch}}{{{f{AFj}}Ef}Eh}{{{f{AFj}}{f{{Dj{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{AFl}}}{{Ah{Eh}}}}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AFn}}{f{E`}}}{{Ah{Af}}}}0{{{f{AFn}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{AG`}}}AG`}{{f{f{Bjc}}}b{}}{fb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{AG`}}{f{AG`}}}d}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{Af}}}}{{{f{AGd}}}{{Ah{{Hh{Af{AGf{Md}}}}}}}}`{{{f{AGh}}c}{{Ah{AGh}}}{}}{{{f{AGj}}{f{Gh}}}{{Ah{{l{c}}}}}Cb}`{{{f{AG`}}{f{BjGl}}}Gn}{cc{}}`{{BhcFl}AGl{}}{{BhFl}AGn}`{{{f{AH`}}Fl}{{Ah{Hn}}}}{{{f{AH`}}Fl}Hn}{{{f{{AHb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AG`}}{f{Bjc}}}bABf}{{}Fl}{{}c{}}{{{f{AG`}}}d}{{{f{AHd}}}{{Ah{Gh}}}}{{{f{AHf}}}{{Ah{Gh}}}}66{{{f{AFb}}}{{B`{c}}}{}}{{{f{AFb}}}{{B`{n}}}}{{{f{AHh}}}{{B`{c}}}{}}2{{{f{AFb}}}{{B`{{Hh{cc}}}}}{}}{{{f{AFl}}}{{Ah{Fl}}}}{{{f{AHj}}FlFl}{{l{c}}}Cb}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{{AGf{Md}}}}}}{{{f{AHh}}nN`}{{Ah{{B`{c}}}}}{}}{{{f{AHl}}}AHl}{{{f{AHn}}{f{Cf}}Nb}{{Ah{Af}}}}`{{{f{AI`}}c{B`{e}}}{{Ah{AI`}}}{{Hd{}{{Bb{I`}}}}}{}}{{{f{AI`}}ci}{{Ah{AI`}}}{{Hd{}{{Bb{I`}}}}}{}{}{{Cf{{B`{e}}}{{Cd{{B`{g}}}}}}}}`{{{f{AI`}}{f{Gh}}{B`{c}}}{{Ah{AI`}}}{}}{{{f{AIb}}Md}{{l{c}}}Cb}{{{f{AId}}Mdc}{{l{e}}}{}Cb}`{{{f{AFj}}d}{{l{c}}}Cb}{{{f{AFj}}Ef}{{l{c}}}Cb}{{{f{AIf}}Dh}{{B`{n}}}}{{{f{AFb}}}{{B`{c}}}{}}{{{f{AIh}}{f{c}}}{{Ah{AIh}}}Nd}{{{f{AIj}}{f{c}}}AIjNd}{{{f{AIl}}}{{G`{{f{{Dj{Dh}}}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{AFl}}}{{Ah{AFl}}}}9{{}c{}}`{{{f{AIn}}{f{Gh}}{f{{l{c}}}}}{{Ah{{l{c}}}}}Cb}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}CbCb{{Cf{ff}{{Cd{}}}}}{{Cf{f}{{Cd{}}}}}{{Cf{f}{{Cd{}}}}}Cb}{{{l{c}}{l{e}}gik}{{l{m}}}CbCb{{Cf{}{{Cd{}}}}}{{Cf{}{{Cd{}}}}}{{Cf{}{{Cd{}}}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}CbCbH`{{Cl{ff}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}CbCb{{AJ`{B`B`}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}g}bCbCb{{Cl{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}DbCbCb{{Cl{{f{BjDd}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}CbCb{}{{Cl{}{{Cd{g}}}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}CbCb{H`AJb}{{Cl{ff}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}CbCbH`{{Cl{ff}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}CbCbH`{{Cl{}{{Cd{g}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Ah{Af}}}CbCb{{Cl{ff}{{Cd{{Fd{H`}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}CbCb{{Cl{ff}{{Cd{{Fd{H`}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}CbCb{}{}{{Cl{B`B`}{{Cd{{Ob{{B`{g}}i}}}}}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}CbCbCb{{AJd{B`B`B`}}}Cb}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}CbCbH`AJf{{Cl{ff}{{Cd{{Ob{gi}}}}}}}{{Cb{}{{Hb{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kBh}{{Ob{{l{m}}i}}}CbCbH`AJf{{Cl{ff}{{Cd{{Ob{gi}}}}}}}{{Cb{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Ob{{l{c}}g}}}CbCbAJf{{Cl{ff}{{Cd{{Ob{{Fd{H`}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Ob{{l{o}}k}}}CbCbCb{}{}{{Cl{B`B`B`}{{Cd{{Ob{{B`{i}}k}}}}}}}Cb}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{}{}{{Cl{B`}{{Cd{{Ob{{B`{e}}g}}}}}}}Cb}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{}{}{{Cl{}{{Cd{{Ob{eg}}}}}}}Cb}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}Cb{H`AJb}AJf{{Cl{f}{{Cd{{Ob{eg}}}}}}}{{Cb{}{{Hb{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Cb{{AJh{B`}}}Cb}{{{f{{l{c}}}}e}{{l{g}}}CbAJhCb}{{{f{{l{c}}}}g}{{l{i}}}CbH`{{Cl{f}{{Cd{e}}}}}{{Cb{}{{Hb{e}}}}}}{{{l{c}}g}{{l{i}}}CbH`{{Cl{}{{Cd{e}}}}}{{Cb{}{{Hb{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Cb{H`AJb}{{Cl{f}{{Cd{e}}}}}{{Cb{}{{Hb{e}}}}}}0{{{f{{l{c}}}}}FlA`}0{{JnJn}Jn}{{{f{Eh}}I`}{{Ah{b}}}}{{{f{{AJj{I`}}}}I`}{{Ah{b}}}}{{{f{{Dj{Ej}}}}{f{{Dj{d}}}}{f{{Dj{d}}}}}{{Ah{AJl}}}}{{{f{{Dj{Ej}}}}{f{{Dj{d}}}}{f{{Dj{d}}}}}{{Ah{{AJn{Md}}}}}}{{Bh{f{{Dj{Ej}}}}{f{{Dj{d}}}}{f{{Dj{d}}}}}{{Ah{AK`}}}}{{Bh{f{{Dj{Af}}}}}{{Ah{AK`}}}}{{{f{Af}}}{{Ah{Fn}}}}{{{f{{Dj{Af}}}}}{{Ah{AJl}}}}{{{f{{Dj{Af}}}}}{{Ah{AK`}}}}00````{{fh}b}{{{f{{l{c}}}}eAKbd}{{G`{I`}}}Cb{{Bf{}{{Bb{B`}}}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AKb}}}AKb}{{f{f{Bjc}}}b{}}{fb}{{}AKb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{AKb}}{f{AKb}}}d}{{f{f{c}}}d{}}0{{{f{AKb}}{f{BjGl}}}Gn}{cc{}}{{{f{AKb}}{f{Bjc}}}bABf}{{}Fl}{{}c{}}{{{f{{Dj{f}}}}cI`e}{{G`{I`}}}{{Bf{}{{Bb{B`}}}}}{{Cf{fFlf}{{Cd{d}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5`{{Fl{f{Bj{G`{d}}}}}b}```{{{f{AKd}}FlFl}AKd}0{{Fl{f{{Dj{Ej}}}}{f{BjEl}}}{{Ah{{AKf{Eh}}}}}}```{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{Ef}}}Ef}{{{f{El}}}El}{{f{f{Bjc}}}b{}}0{fb}0{{}Ef}{{}El}{Fl{{f{c}}}{}}0{Fl{{f{Bjc}}}{}}0``{Flb}0{{{f{Ef}}{f{Ef}}}d}{{{f{El}}{f{El}}}d}{{f{f{c}}}d{}}000{{{f{Ef}}{f{BjGl}}}Gn}{{{f{El}}{f{BjGl}}}Gn}{{{f{El}}}Ef}{cc{}}0{{{f{Ef}}}El}{{{f{Ef}}{f{Bjc}}}bABf}{{{f{El}}{f{Bjc}}}bABf}{{}Fl}0{{}c{}}0````{{}Ef}{{}El}``{{{f{AKd}}FlFl}AKd}0{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077{{Efd}Ef}{{Eld}El}1010{{Elc}El{{Hd{}{{Bb{d}}}}}}210{EfEf}{ElEl}`{AKhMd}00{{}d}??0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}0000000000000000000000000000000{{{f{Eb}}}d}{{{f{Jd}}{f{Jd}}}c{}}{{{f{Gh}}{f{Gh}}}c{}}{{GhGh}c{}}{{DbDb}c{}}{{{f{Db}}{f{Dn}}}c{}}{{{f{Db}}{f{Db}}}c{}}{{{f{En}}{f{En}}}c{}}{{{f{En}}{f{{Dj{Dh}}}}}c{}}{{EnEn}c{}}{{{f{Hn}}{f{Hn}}}Hn}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{Db}}{f{Af}}}{{Ah{Af}}}}{{{f{En}}{f{Af}}}{{Ah{Af}}}}{{{f{Gh}}{f{Af}}}{{Ah{Af}}}}{{{f{Eb}}{f{Al}}}Af}{{{f{Gh}}{f{Al}}}Af}{{{f{Db}}{f{Al}}}Af}{{{f{En}}{f{Al}}}Af}{{{f{{AEh{c}}}}{f{Al}}}AfIh}{{{f{Gh}}}d}{{{f{Gh}}}{{B`{d}}}}{{{f{Eb}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{Eb}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Eb}}c}Eb{{Cf{{B`{Af}}}{{Cd{{B`{Af}}}}}}Ch}}{{{f{Gh}}c}Gh{{Cf{{B`{d}}}{{Cd{{B`{d}}}}}}Ch}}{{{f{Db}}c}Db{{Cf{{B`{{f{Dn}}}}}{{Cd{{B`{{AKl{Dn}}}}}}}}Ch}}{{{f{En}}c}En{{Cf{{B`{{f{{Dj{Dh}}}}}}}{{Cd{{B`{{AKl{{Dj{Dh}}}}}}}}}}Ch}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cf{{B`{{f{c}}}}}{{Cd{{B`{c}}}}}}Ch}}{{{f{Eb}}c}Eb{{Cl{Cj}{{Cd{Af}}}}}}{{{f{Eb}}e}{{l{g}}}{}{{Cl{{B`{Cj}}}{{Cd{{B`{c}}}}}}Ch}Cb}{{{f{AKn}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{AL`}}c}Af{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{Gh}}{f{Cf}}}Gh}{{{f{Db}}{f{Cf}}}Db}{{{f{En}}{f{Cf}}}En}{{{f{Gh}}{f{Cf}}}{{l{c}}}Cb}{{{f{Db}}{f{Cf}}}{{l{c}}}Cb}{{{f{En}}{f{Cf}}}{{l{c}}}Cb}{{{f{Db}}c}Db{{Cl{{f{Dn}}}{{Cd{{f{Dn}}}}}}}}{{{f{En}}c}En{{Cl{{f{{Dj{Dh}}}}}{{Cd{{f{{Dj{Dh}}}}}}}}}}{{{f{Eb}}{f{Cf}}}{{Ah{Eb}}}}{{{f{Eb}}e{f{Bj{Dj{c}}}}}b{}{{Cf{{B`{Af}}{f{c}}}{{Cd{c}}}}}}{{{f{Gh}}e{f{Bj{Dj{c}}}}}b{}{{Cf{{B`{d}}{f{c}}}{{Cd{c}}}}}}{{{f{Db}}e{f{Bj{Dj{c}}}}}b{}{{Cf{{B`{{f{Dn}}}}{f{c}}}{{Cd{c}}}}}}{{{f{En}}e{f{Bj{Dj{c}}}}}b{}{{Cf{{B`{{f{{Dj{Dh}}}}}}{f{c}}}{{Cd{c}}}}}}{{{f{{AEh{c}}}}g{f{Bj{Dj{e}}}}}bIh{}{{Cf{{B`{{f{c}}}}{f{e}}}{{Cd{e}}}}}}{{{f{Eb}}c}Eb{{Cf{Af}{{Cd{Af}}}}Ch}}{{{f{Gh}}c}Gh{{Cf{d}{{Cd{d}}}}Ch}}{{{f{Db}}c}Db{{Cf{{f{Dn}}}{{Cd{{AKl{Dn}}}}}}Ch}}{{{f{En}}c}En{{Cf{{f{{Dj{Dh}}}}}{{Cd{{AKl{{Dj{Dh}}}}}}}}Ch}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cf{{f{c}}}{{Cd{c}}}}Ch}}{{{f{Db}}c}Db{{Cl{Ed{f{Dn}}}{{Cd{Ed}}}}Ch}}{{{f{Gh}}Ef}Eh}{{{f{Db}}Ef}Eh}{{{f{En}}Ef}Eh}{{{f{AK`}}Ef}Eh}{{{f{Gh}}{f{{Dj{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{Db}}{f{{Dj{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{En}}{f{{Dj{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{AK`}}{f{{Dj{Ej}}}}{f{El}}}{{Ah{Eh}}}}{{{f{Gh}}}{{Ah{Eh}}}}{{{f{Db}}}{{Ah{Eh}}}}{{{f{En}}}{{Ah{Eh}}}}{{{f{{AEh{c}}}}}{{Ah{Eh}}}Ih}{eALb{}{{Hd{}{{Bb{c}}}}}}0{{ADje}ALd{}{{Hd{}{{Bb{c}}}}}}0{{{f{Db}}}En}{{{f{Hn}}}Hn}{{{f{E`}}}{{f{E`}}}}{{{f{Mj}}}{{f{E`}}}}{{{f{ALf}}}{{f{E`}}}}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{B`{{f{{Dj{c}}}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{Eb}}{f{{l{c}}}}{f{{l{e}}}}g}EbCbCb{{Cl{{B`{Cj}}B`B`}{{Cd{{B`{Af}}}}}}}}{{{f{Gh}}{f{Gh}}}c{}}{{GhGh}c{}}1010{f{{f{c}}}{}}000000000000000000000000000000000000{{{f{Bj}}}{{f{Bjc}}}{}}000000000000000000000000000000000000{E`{{Fd{E`}}}}{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{AMf}}{f{E`}}}{{Ah{Af}}}}0{{{f{Hn}}{f{E`}}}Hn}{{{f{E`}}E`}E`}{{{f{Eb}}{f{E`}}}{{Ah{Af}}}}{{{f{Gh}}{f{E`}}}{{Ah{Af}}}}{{{f{Db}}{f{E`}}}{{Ah{Af}}}}{{{f{En}}{f{E`}}}{{Ah{Af}}}}{{{f{AK`}}{f{E`}}}{{Ah{Af}}}}{{{f{AMf}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Jd}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Eb}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Gh}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Db}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{En}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{AK`}}{f{E`}}Ff}{{Ah{Af}}}}`{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}0000{{{f{AKn}}{f{Af}}}{{Ah{Af}}}}{{{f{AL`}}{f{Af}}}{{Ah{Af}}}}{{{f{{AMh{ce}}}}}{{AMh{ce}}}CbCb}{{{f{AMj}}}AMj}{{{f{Hn}}}Hn}{{{f{AMl}}}AMl}{{{f{E`}}}E`}{{{f{AMn}}}AMn}{{{f{Mj}}}Mj}{{{f{AN`}}}AN`}{{{f{ANb}}}ANb}{{{f{ANd}}}ANd}{{{f{Mh}}}Mh}{{{f{Lj}}}Lj}{{{f{ANf}}}ANf}{{{f{ANh}}}ANh}{{{f{Ln}}}Ln}{{{f{Mb}}}Mb}{{{f{Cn}}}Cn}{{{f{D`}}}D`}{{{f{ANj}}}ANj}{{{f{ANl}}}ANl}{{{f{Dl}}}Dl}{{{f{Df}}}Df}{{{f{ANn}}}ANn}{{{f{An}}}An}{{{f{AO`}}}AO`}{{{f{AOb}}}AOb}{{{f{AOd}}}AOd}{{{f{AOf}}}AOf}{{{f{AOh}}}AOh}{{{f{AOj}}}AOj}{{{f{ADj}}}ADj}{{{f{AOl}}}AOl}{{f{f{Bjc}}}b{}}0000000000000000000000000000000{fb}0000000000000000000000000000000{{{f{AOh}}{f{AOh}}}AOn}{{{f{BjMj}}E`}b}{B@`e{}{{ALb{c}}AJb}}0{{B@`ADj}e{}{{ALd{c}}AJb}}0{{f{f{c}}}AOn{}}{{{f{E`}}}d}00{B@bE`}{{}Hn}{{}AMl}{{}E`}{{}ADj}{{{f{{AMh{ce}}}}}{{f{g}}}CbCb{}}{Fl{{f{c}}}{}}000000000000000000000000000000000000{{{f{Bj{AMh{ce}}}}}{{f{Bjg}}}CbCb{}}{Fl{{f{Bjc}}}{}}000000000000000000000000000000000000{{{f{Jd}}{f{Jd}}}c{}}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{Flb}000000000000000000000000000000000000{{{f{AMf}}}{{f{E`}}}}{{{f{Jd}}}{{f{E`}}}}{{{f{Hn}}}E`}{{{f{Mj}}}{{f{E`}}}}``{{{f{Hn}}{f{Hn}}}d}{{{f{AMl}}{f{AMl}}}d}{{{f{E`}}{f{E`}}}d}{{{f{E`}}{f{ADj}}}d}{{{f{AMn}}{f{AMn}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{AN`}}{f{AN`}}}d}{{{f{AOh}}{f{AOh}}}d}{{{f{AOj}}{f{AOj}}}d}{{{f{ADj}}{f{ADj}}}d}{{{f{AOl}}{f{AOl}}}d}{{{f{Hn}}{f{Hn}}d}d}{{{f{Eb}}{f{Eb}}}Gh}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Dn}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{En}}{f{{Dj{Dh}}}}}Gh}{{{f{En}}{f{En}}}Gh}543201{{f{f{c}}}d{}}0000000000000000000{{{f{Eb}}}{{Ah{{Hh{Af{AGf{Md}}}}}}}}{{{f{{AMh{ce}}}}}MjCbCb}{{{f{Gh}}d}{{Ah{Gh}}}}{{{f{En}}{f{{Dj{Dh}}}}}{{Ah{En}}}}{{{f{Db}}{f{Gh}}}{{Ah{{l{Dl}}}}}}{{{f{En}}{f{Gh}}}{{Ah{{l{Df}}}}}}{{{f{{AEh{c}}}}{f{Gh}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{{{f{Eb}}{f{BjGl}}}Gn}{{{f{Db}}{f{BjGl}}}Gn}{{{f{En}}{f{BjGl}}}Gn}{{{f{{AEh{c}}}}{f{BjGl}}}GnIh}{{{f{AMj}}{f{BjGl}}}Gn}{{{f{Hn}}{f{BjGl}}}Gn}0{{{f{AMl}}{f{BjGl}}}Gn}{{{f{E`}}{f{BjGl}}}Gn}0{{{f{AMn}}{f{BjGl}}}Gn}{{{f{Mj}}{f{BjGl}}}Gn}{{{f{AN`}}{f{BjGl}}}Gn}0{{{f{AOh}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{AOj}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{ADj}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{AOl}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{Eb}}c}b{{Cl{{B`{Cj}}}}}}{cc{}}000000{cHnB@h}{dHn}{{{f{Dn}}}Hn}3{{{f{{Dj{Dh}}}}}Hn}{{{B`{c}}}Hn{{B@j{Hn}}}}55{{{f{ADj}}}E`}{HnE`}{{{f{Hn}}}E`}8{{{f{Hn}}}Mj}{{{f{B@l}}}Mj}::{{{f{AOl}}}AN`};;;;;;;;;;;;;;;;;;;;;;;{B@nADj}{BA`ADj}={{{f{ADj}}d}E`}{cEb{{Hd{}{{Bb{{B`{{Fd{H`}}}}}}}}}}{cEb{{Hd{}{{Bb{{B`{Af}}}}}}}}{eEb{{BAb{Af}}}{{Hd{}{{Bb{c}}}}}}{cGh{{Hd{}{{Bb{d}}}}}}{eDb{{`{Dn}}}{{Hd{}{{Bb{c}}}}}}{eDb{{Kh{Dn}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eEn{{`{{Dj{Dh}}}}}{{Hd{}{{Bb{c}}}}}}{eEn{{Kh{{Dj{Dh}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{e{{AEh{c}}}Ih{{Hd{}{{Bb{{B`{c}}}}}}}}{{Bhc}{{l{An}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{Bhe}Db{{Kh{Dn}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}En{{Kh{{Dj{Dh}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{{B`{c}}}}}}}}:;98756{eAK`{{Kh{{Dj{Dh}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eAK`{{`{{Dj{Dh}}}}}{{Hd{}{{Bb{c}}}}}}6{{Bhc}{{l{An}}}{{Bf{}{{Bb{d}}}}}}{{Bhe}Db{{Kh{Dn}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}En{{Kh{{Dj{Dh}}}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{c}}}}}}{cEb{{Hj{}{{Bb{{B`{Af}}}}}}}}{cGh{{Hj{}{{Bb{d}}}}}}{cGh{{Hj{}{{Bb{{B`{d}}}}}}}}{eDb{{`{Dn}}JfJhBAd}{{Hj{}{{Bb{c}}}}}}{eDb{{Kh{Dn}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{eEn{{Kh{{Dj{Dh}}}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{eEn{{`{{Dj{Dh}}}}JfJhBAd}{{Hj{}{{Bb{c}}}}}}{{cBhE`}Eb{{Hj{}{{Bb{{B`{Af}}}}}}}}{{Bh{f{{Dj{d}}}}}Gh}{{Bh{f{{Dj{c}}}}}Db{{Kh{Dn}}}}{{Bh{f{{Dj{c}}}}}En{{Kh{{Dj{Dh}}}}}}{{Bh{f{{Dj{c}}}}}{{AEh{c}}}Ih}{{Bh{f{{Dj{{B`{d}}}}}}}Gh}{{Bh{f{{Dj{{B`{c}}}}}}}Db{{Kh{Dn}}}}{{Bh{f{{Dj{{B`{c}}}}}}}En{{Kh{{Dj{Dh}}}}}}{{Bh{f{{Dj{{B`{c}}}}}}}{{AEh{c}}}Ih}{cGh{{Hl{}{{Bb{{B`{d}}}}}}}}{{{G`{c}}ADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{G`{c}}ADj}{{AJb{}{{ALh{e}}{ALj{c}}{ALl{g}}}}}{ALn{AM`{e}}}A@n{{Gf{}{{Bb{e}}}}HlJfJh}}{{FlcADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{Bh{f{Af}}Fl}Eb}{{BhdFl}Gh}{{Bh{f{Dn}}Fl}Db}{{Bh{f{{Dj{Dh}}}}Fl}En}{{Bh{f{{Dj{Dh}}}}Fl}AK`}{{BhcFl}{{AEh{c}}}Ih}{{FlADj}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{BhFl}Eb}{{BhFl}Gh}{{BhFl}Db}{{BhFl}En}{{BhFl}AK`}{{BhFl}{{AEh{c}}}Ih}{{BhFl{f{E`}}}Eb}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fl}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{AOhIl}{AOj{{B`{Il}}}}{{{f{Jd}}Fl}{{Ah{Hn}}}}{{{f{AMf}}Fl}{{Ah{Hn}}}}0{{{f{Eb}}Fl}{{Ah{Hn}}}}{{{f{Gh}}Fl}{{Ah{Hn}}}}{{{f{Db}}Fl}{{Ah{Hn}}}}{{{f{En}}Fl}{{Ah{Hn}}}}{{{f{AK`}}Fl}{{Ah{Hn}}}}{{{f{{AEh{c}}}}Fl}{{Ah{Hn}}}Ih}{{{f{Jd}}Fl}Hn}{{{f{AMf}}Fl}Hn}0{{{f{Eb}}Fl}Hn}{{{f{Gh}}Fl}Hn}{{{f{Db}}Fl}Hn}{{{f{En}}Fl}Hn}{{{f{AK`}}Fl}Hn}{{{f{{AEh{c}}}}Fl}HnIh}{{{f{Eb}}Fl}{{B`{Af}}}}{{}E`}00000000000000000000000{{{f{Eb}}}Af}{{{f{{AEh{c}}}}Fl}{{B`{{f{If}}}}}Ih}0{{AOjIl}Il}{{AOjc}Il{{Cf{}{{Cd{Il}}}}}}{{{f{Hn}}}{{B`{{f{Dn}}}}}}{{{f{BAf}}Fl}Hn}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fl}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{Eb}}}Fl}{{{f{Db}}}Fl}{{{f{AK`}}}Fl}{{{f{Eb}}dd}{{Ah{Al}}}}{{{f{Gh}}dd}{{Ah{Al}}}}{{{f{Db}}dd}{{Ah{Al}}}}{{{f{En}}dd}{{Ah{Al}}}}{{{f{AK`}}dd}{{Ah{Al}}}}{{{f{{AEh{c}}}}dd}{{Ah{Al}}}Ih}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Dn}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{En}}{f{{Dj{Dh}}}}}Gh}{{{f{En}}{f{En}}}Gh}42301{{{f{Hn}}{f{Bjc}}}bABf}{{{f{AMl}}{f{Bjc}}}bABf}{{{f{E`}}{f{Bjc}}}bABf}{{{f{Mj}}{f{Bjc}}}bABf}{{{f{AN`}}{f{Bjc}}}bABf}{{{f{AOj}}{f{Bjc}}}bABf}{{{f{ADj}}{f{Bjc}}}bABf}{{{f{AOl}}{f{Bjc}}}bABf}{{{f{Hn}}{f{Bjc}}d}bABf}{{{f{Hn}}}I`}{E`E`}{{}Fl}000000000000000000000000000000000000{{{f{Eb}}}{{f{E`}}}}{{{f{E`}}}{{B`{{f{E`}}}}}}{{{f{ADj}}}{{B`{{f{ADj}}}}}}{{}c{}}000000000000000000000000000000000000{{}Ej}{{BAh{B`{Fl}}Fl}{{Ah{Jd}}}}{{BAh{B`{Fl}}Fl}Jd}{{{f{Eb}}}c{}}{{{f{Gh}}}c{}}{{{f{Db}}}c{}}{{{f{En}}}c{}}{{{f{AK`}}}c{}}{{{f{{AEh{c}}}}}eIh{}}{{BAjE`}{{Ah{Kn}}}}{JdAf}{BAhAf}{HnHn}{{{f{E`}}}d}00{{{f{Hn}}}d}1111010111101{{{f{ADj}}}d}121212022212222120{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{AEd{cgAEb}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{B`{c}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}{{f{E`}}}}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Dn}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{En}}{f{En}}}Gh}{{{f{En}}{f{{Dj{Dh}}}}}Gh}42310{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{EbEb}{{Ah{{Hh{EbEb}}}}}}{{{f{E`}}{f{E`}}}{{Ah{d}}}}{{{f{AMl}}}{{B`{E`}}}}{{{f{E`}}}{{Ah{E`}}}}{{{f{Gh}}}{{B`{d}}}}{{{f{En}}}{{B`{{f{{Dj{Dh}}}}}}}}{{{f{Gh}}}Kn}{{{f{Db}}}Kn}{{{f{En}}}Kn}{{{f{Gh}}}{{B`{n}}}}{{{f{AKn}}}{{B`{Ij}}}}{{{f{AL`}}}{{B`{n}}}}{{{f{AKn}}}Kn}{{{f{AL`}}}Kn}{{{f{E`}}{f{E`}}}{{Ah{E`}}}}:9876{{Bh{f{{Dj{Dh}}}}FlFl}Gh}{{{f{Jd}}{f{Jd}}}c{}}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{Db}}}{{Ah{Fl}}}}{{{f{En}}}{{Ah{Fl}}}}{{{f{Mj}}}{{f{Bh}}}}`{{}c{}}00{{Bhc}Db{{Kh{{Dj{{f{Dn}}}}}}}}{{Bhc}Db{{Kh{{Dj{{B`{{f{Dn}}}}}}}}}}{{Bhc}Db{{Kh{{Dj{{AKl{Dn}}}}}}}}{{Bhc}Db{{Kh{{Dj{{B`{{AKl{Dn}}}}}}}}}}{{Bhc}En{{Kh{{Dj{{B`{{AKl{{Dj{Dh}}}}}}}}}}}}{{Bhc}En{{Kh{{Dj{{AKl{{Dj{Dh}}}}}}}}}}{{Bhc}En{{Kh{{Dj{{f{{Dj{Dh}}}}}}}}}}{{Bhc}En{{Kh{{Dj{{B`{{f{{Dj{Dh}}}}}}}}}}}}{{Bh{f{{Dj{c}}}}}{{AEh{c}}}Ih}{{Bhe}{{AEh{c}}}Ih{{Kh{{Dj{{B`{c}}}}}}}}{{BhE`}Mj}{IlAOh}{MdAOj}{IlAOj}{Bh{{AEh{c}}}Ih}{{{f{Eb}}FlFl}Eb}{{{f{Gh}}FlFl}Gh}{{{f{Db}}FlFl}Db}{{{f{En}}FlFl}En}{{{f{AK`}}FlFl}AK`}{{{f{{AEh{c}}}}FlFl}{{AEh{c}}}Ih}{{Bh{G`{c}}}{{AEh{c}}}Ih}{{Bh{G`{c}}Hf}{{AEh{c}}}Ih}{{{l{c}}}{{AMh{ec}}}CbCb}{{}AMn}{Ghc{}}{{{f{Gh}}}c{}}{{{f{Eb}}{f{Eb}}}Gh}{{{f{Gh}}{f{Gh}}}Gh}{{{f{Db}}{f{Dn}}}Gh}{{{f{Db}}{f{Db}}}Gh}{{{f{En}}{f{{Dj{Dh}}}}}Gh}{{{f{En}}{f{En}}}Gh}542301{{{f{Gh}}}Fl}0{{{f{Eb}}}{{Ah{{AGf{Md}}}}}}:{{{f{Eb}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Db}}}{{`{{Ml{}{{Bb{{B`{{f{Dn}}}}}}}}}}}}{{{f{BjEb}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Db}}}{{`{{Mn{}{{Bb{{B`{{f{Dn}}}}}}}}}}}}{{{f{Hn}}{f{Hn}}}{{B`{AOn}}}}{{{f{AN`}}{f{AN`}}}{{B`{AOn}}}}{{{f{AOh}}{f{AOh}}}{{B`{AOn}}}}{{{f{{AMh{ce}}}}}{{f{{l{e}}}}}CbCb}{{{f{Jd}}}{{B`{Fl}}}}{{{f{{AMh{AO`Jb}}}}}{{B`{Fl}}}}{{{f{AKn}}nN`}{{Ah{{B`{Ij}}}}}}{{{f{AL`}}nN`}{{Ah{{B`{n}}}}}}{{{f{AKn}}nN`}{{Ah{Kn}}}}{{{f{AL`}}nN`}{{Ah{Kn}}}}{{BhFln}{{Ah{Gh}}}}{{{f{Eb}}}Eb}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}0000002{{{f{Gh}}}Gh}{{{f{Db}}}Db}{{{f{En}}}En}{{{f{AK`}}}AK`}{{{f{{AEh{c}}}}}{{AEh{c}}}Ih}`{{{f{Jd}}}Fl}{{{f{{AMh{AO`Jb}}}}}Fl}{{{f{Gh}}c{B`{d}}}{{Ah{Gh}}}{{Hd{}{{Bb{I`}}}}}}{{{f{Db}}c{B`{{f{Dn}}}}}{{Ah{Db}}}{{Hd{}{{Bb{I`}}}}}}{{{f{En}}c{B`{{f{{Dj{Dh}}}}}}}{{Ah{En}}}{{Hd{}{{Bb{I`}}}}}}{{{f{Gh}}ce}{{Ah{Gh}}}{{Hd{}{{Bb{I`}}}}}{{Cf{{B`{d}}}{{Cd{{B`{d}}}}}}}}{{{f{Db}}ce}{{Ah{Db}}}{{Hd{}{{Bb{I`}}}}}{{Cf{{B`{{f{Dn}}}}}{{Cd{{B`{Dd}}}}}}}}{{{f{En}}ce}{{Ah{En}}}{{Hd{}{{Bb{I`}}}}}{{Cf{{B`{{f{{Dj{Dh}}}}}}}{{Cd{{B`{{G`{Dh}}}}}}}}}}{{{f{Gh}}{f{Gh}}{B`{d}}}{{Ah{Gh}}}}{{{f{Db}}{f{Gh}}{B`{{f{Dn}}}}}{{Ah{Db}}}}{{{f{En}}{f{Gh}}{B`{{f{{Dj{Dh}}}}}}}{{Ah{En}}}}{{{f{BjEb}}}b}{{{f{BjEb}}E`}b}{{{f{BjMj}}Bh}b}{{{f{Eb}}Md}Eb}{{{f{Gh}}Md}Gh}{{{f{Db}}Md}Db}{{{f{En}}Md}En}{{{f{AK`}}Md}AK`}{{{f{{AEh{c}}}}Md}{{AEh{c}}}Ih}{{{f{Eb}}Md{B`{{f{Af}}}}}Eb}{{{f{Gh}}Md{B`{d}}}Gh}{{{f{Db}}Md{B`{{f{Dn}}}}}Db}{{{f{En}}Md{B`{{f{{Dj{Dh}}}}}}}En}{{{f{AK`}}Md{B`{{f{{Dj{Dh}}}}}}}AK`}{{{f{{AEh{c}}}}Md{B`{{Id{c}}}}}{{l{{Id{c}}}}}Ih}{{{f{Gh}}d}Gh}{{{f{Db}}d}Db}{{{f{En}}d}{{l{Df}}}}{{{f{AK`}}d}AK`}{{{f{Gh}}Ef}{{l{An}}}}{{{f{Db}}Ef}{{l{Dl}}}}{{{f{En}}Ef}{{l{Df}}}}{{{f{AK`}}Ef}AK`}{{{f{AKn}}Dh}Kn}{{{f{AL`}}Dh}Kn}{{{f{Hn}}}{{AKl{Dn}}}}{{{f{Hn}}{f{E`}}}{{B`{Hn}}}}`{{{f{Jd}}{f{Jd}}}c{}}{{{f{Eb}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKj}}}{}}000000{{{f{Gh}}}{{B`{I`}}}}{{{f{Gh}}}Kn}{{{f{En}}}Kn}{{{f{Eb}}{f{Eh}}}Eb}{{{f{Eb}}{f{c}}}Eb{{Kh{{Dj{I`}}}}Nd}}{{{f{Db}}{f{Eh}}}Db}{{{f{Db}}{f{c}}}Db{{Kh{{Dj{I`}}}}Nd}}{{{f{En}}{f{Eh}}}En}{{{f{En}}{f{c}}}En{{Kh{{Dj{I`}}}}Nd}}{{{f{E`}}AMn}ADj}{{{f{Mj}}AMn}B@l}{AN`AOl}{{{f{E`}}BhAMn}B@l}{AN`{{f{Dn}}}}{{{f{Db}}Fl}{{Ah{Af}}}}{{ADjFld}ADj}{{{f{BjEb}}E`}b}{{{f{ADj}}}{{f{ADj}}}}{{{f{Eb}}}{{Ah{Nl}}}}{fc{}}0000000000000000000000000000000{{{f{E`}}}E`}{{{f{ADj}}}BAl}{{{f{Jd}}Fl}{{Ah{{AKl{Jd}}}}}}{{{f{{AMh{AO`Jb}}}}Fl}{{Ah{{AKl{{AMh{AO`Jb}}}}}}}}{fDd}000{{{f{En}}}Db}{{{f{Hn}}{f{Hn}}}d}{{{f{Eb}}c}{{Ah{Eb}}}{{Cl{Cj}{{Cd{{Ah{Af}}}}}}}}{{{f{Eb}}e}{{Ah{{l{g}}}}}{}{{Cl{{B`{Cj}}}{{Cd{{Ah{{B`{c}}}}}}}}Ch}Cb}{g{{Ob{ALbe}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{{ADjg}{{Ob{ALde}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{B@`{{Ob{eg}}}{}{{ALb{c}}AJb}{}}0{{B@`ADj}{{Ob{eg}}}{}{{ALd{c}}AJb}{}}0{{{f{Hn}}}{{Ah{c}}}Kl}{c{{Ob{e}}}{}{}}00000000000000000000000000000000{Md{{Ob{AOh}}}}1111{{}{{Ob{c}}}{}}000000000000000000000000000000000000{{{f{Hn}}{f{E`}}}{{Ah{Hn}}}}{{{f{E`}}AMn}{{Ah{ADj}}}}{f{{Ob{GbBAn}}}}000{{{f{Eb}}{f{{l{c}}}}e}{{Ah{Eb}}}Cb{{Cl{{B`{Cj}}B`}{{Cd{{Ah{{B`{Af}}}}}}}}}}{fOd}000000000000000000000000000000000000{{{f{ADj}}}ADj}{{{f{Gh}}}{{Ah{Gh}}}}{{{f{Db}}}{{Ah{Db}}}}{{{f{En}}}{{Ah{En}}}}{{{f{{AEh{c}}}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Fl}cA@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}0{{{f{E`}}Hn}d}{{{f{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}gA@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{AKn}}Dh}Kn}{{{f{AL`}}Dh}Kn}{{{f{Gh}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{B@d}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBh}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBj}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BBl}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{BAh}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{AL`}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{Db}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{En}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{AK`}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}Ih}{{{f{Gh}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{B@d}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BBh}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BBj}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BBl}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{BAh}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{AL`}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{Db}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{En}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{AK`}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}Ih}{{}c{}}000000000000000000000000000000000000{Flc{}}0{Fl{{BBn{ce}}}{}{}}{{{f{{Dj{Of}}}}e}c{}{{Oh{{f{Eh}}}{{Cd{c}}}}}}{{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}{B`{Hf}}}{{AJb{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}A@n{ALn{AM`{c}}}{{Gf{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}Hn}{{{f{Eb}}{f{{l{c}}}}e}EbCb{{Cl{{B`{Cj}}B`}{{Cd{{B`{Af}}}}}}}}```````````{{fh}b}{{{f{AMb}}}d}{{AMbd}AMb}{{{f{BjBC`}}{B`{{f{Dn}}}}}b}{{{f{BjAMb}}{f{AMb}}}{{Ah{b}}}}{{{f{BjBC`}}}b}{{{f{BjBC`}}{f{Dn}}}b}{{{f{AMb}}Ef}Eh}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{AMb}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{AMb}}}AMb}{{f{f{Bjc}}}b{}}{fb}{{}BCb}{Fl{{f{c}}}{}}000{Fl{{f{Bjc}}}{}}000{{BC`c}AMb{{Hd{}{{Bb{{B`{{f{Dn}}}}}}}}}}{Flb}000{{{f{AMb}}}{{f{E`}}}}{{{f{AMb}}{f{Dn}}}c{}}{{{f{AMb}}{f{Db}}}c{}}{{{f{AMb}}{f{AMb}}}c{}}210{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{BC`AMb}{BCb{{Ld{BCd}}}}{cc{}}000{{B@dE`}AMb}{{B@d{Ld{BCd}}dBCf}AMb}{{B@dBCf}AMb}{{{f{Db}}{f{B@b}}BCf}{{Ah{AMb}}}}{{BhdFlBCf}AMb}{{{f{AMb}}Fl}{{Ah{Hn}}}}{{{f{AMb}}Fl}Hn}{{{f{AMb}}}{{f{{Ld{BCd}}}}}}><=>=<{{}Fl}000{{}c{}}000{{}Ej}1{AMbAf}{{{f{AMb}}}d}0{{{f{AMb}}}BCh}{{{f{AMb}}}Fl}{{{f{AMb}}{f{AMb}}}c{}}{{{f{AMb}}{f{Db}}}c{}}{{{f{AMb}}{f{Dn}}}c{}}210{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{EbEb}{{Ah{{Hh{EbEb}}}}}}{{{f{AMb}}}Kn}{{{f{BjBCb}}{f{{Ld{BCd}}}}}{{Ah{b}}}}1{{{f{AMb}}}{{Ah{Fl}}}}{{{f{AMb}}}{{f{Bh}}}}{{BhFlBCf}BC`}{{{Ld{BCd}}}BCb}{{{f{BjBCh}}}{{B`{c}}}{}};9:9:;<{{{f{AMb}}}{{f{B@d}}}}{{{f{BjBC`}}{f{Dn}}}{{Hh{Mfd}}}}`{{{f{BCh}}}{{Hh{Fl{B`{Fl}}}}}}{{{f{AMb}}d}AMb}{{{f{AMb}}Ef}AMb}`{{{f{AMb}}AMnd}Fn}{{{f{AMb}}{f{B@b}}BCj}AMb}{{{f{AMb}}}{{Ah{AMb}}}}{{{f{AMb}}}AMb}{fc{}}{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}0005{{{f{AMb}}}d}{{{f{AMb}}}{{Ah{BCl}}}}{{}c{}}000``````{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{B@bBCd}{{{f{BCf}}}BCf}{{{f{BCd}}}BCd}{{f{f{Bjc}}}b{}}0{fb}0{{}BCf}{{}BCd}{Fl{{f{c}}}{}}0{Fl{{f{Bjc}}}{}}0{Flb}0{{{f{BCf}}{f{BCf}}}d}{{{f{BCd}}{f{Dn}}}{{B`{Mf}}}}{{{f{BCf}}{f{BjGl}}}Gn}{{{f{BCd}}{f{BjGl}}}Gn}{cc{}}0{{{f{BCd}}Mf}{{f{Dn}}}}{{{f{BCd}}}{{f{B@b}}}}{{{f{BCd}}Mf}{{B`{{f{Dn}}}}}}{{}Fl}0{{}c{}}0{{{f{BCd}}}d}0{{{f{BCd}}}Fl}{{{f{BCd}}{f{BCd}}}d}{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}BCn}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{{}b}{Flb}{{{f{BjBCn}}}b}2{cc{}}6{{}Fl}{{}c{}}=<;{{}d}1`{{{f{BjBD`}}Mf{f{BCd}}}{{Ah{{f{BjBD`}}}}}}{{{f{BjBD`}}}{{f{BjBD`}}}}{{{f{BjBD`}}{f{Dn}}}{{Ah{{f{BjBD`}}}}}}>=;:8{BD`AMb}765{{BhFl{Ld{BCd}}BCfd}BD`}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}9```````>>8````````````````````````{{{f{BDb}}}{{f{Dn}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0`{Fl{{f{c}}}{}}0{{{f{BDb}}}f}{Fl{{f{Bjc}}}{}}0{Flb}0`{{{f{BDd}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BDb}}{f{BjGl}}}{{Ob{bB@f}}}}0{cc{}}0{cBDb{{B@j{{AKl{Dn}}}}}}{{}{{Kd{{f{Dn}}BDd}{{Cd{b}}}}}}{{}Fl}0{{}c{}}0{cAKjAJf}{{{f{Dn}}}BDb}````{{{Kd{{f{Dn}}BDd}{{Cd{b}}}}}b}{cAKjBDf}{fDd}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{f{{Ob{GbBAn}}}}{fOd}099`````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BDh}}}BDh}{{f{f{Bjc}}}b{}}{fb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{BjGl}}LlFl}Gn}{cc{}}{{}BDj}{{}BDh}{{}{{B`{Fl}}}}{{}Dd}{{}d}{{}Fl}{{}c{}}{{{B`{BDj}}}b}{BDhb}{{{B`{Fl}}}b}2{{{B`{d}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}8```````````{{fh}b}00{{{f{BjBCl}}{G`{Ej}}{f{BDl}}}{{Ah{b}}}}{{{f{BjBCl}}{G`{Af}}{f{BDl}}}{{Ah{b}}}}{{{f{BCl}}{f{Cf}}}{{G`{Ej}}}}0{{{f{BCl}}{f{Gh}}}{{Ah{BCl}}}}{{Fl{G`{Ej}}}BCl}{{{f{BCl}}{f{{Dj{Bh}}}}}{{Ah{BCl}}}}0{{{f{BCl}}{f{{Dj{Bh}}}}{f{BDl}}d}{{Ah{BCl}}}}{{{f{BCl}}MdFl}BCl}{{{f{BCl}}}BCl}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{{{f{BCl}}{f{Af}}}c{}}{{{f{BjBCl}}}{{f{BjBCl}}}}0{{{f{BjBCl}}{f{Dn}}e}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Ej}}}{{Cd{c}}}}}}{{{f{BjBCl}}Fle}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Ej}}}{{Cd{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{BCl}}}{{`{{Bf{}{{Bb{Fl}}}}}}}}9{{{f{BjBCl}}}b}{{{f{BE`}}}BE`}{{{f{BEb}}}BEb}<{{f{f{Bjc}}}b{}}00{fb}00`{{{f{BCl}}{f{Dn}}}{{Ah{{f{Ej}}}}}}{{{f{BjBCl}}c}b{{Bf{}{{Bb{Ej}}}}}}{{{f{BCl}}e}{{Ah{{G`{{f{Ej}}}}}}}{{Kh{Dn}}}{{Hd{}{{Bb{c}}}}}}{{}BEb}{{}BCl}{Fl{{f{c}}}{}}0000{Fl{{f{Bjc}}}{}}0000{{{f{BCl}}{f{Af}}}c{}}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{Flb}000{{{f{BCl}}{f{Dn}}}{{Ah{BCl}}}}1{{{f{BjBCl}}{f{Dn}}}{{Ah{Ej}}}}{{{f{BCl}}e}BCl{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}{f{{BEd{Bh}}}}}BCl}{{{f{BCl}}{B`{{f{{Dj{c}}}}}}}{{Ah{BCl}}}{}}{{{f{BCl}}}{{G`{E`}}}}<{{{f{BEf}}}BCl}{{{f{BDl}}}BCl}{{{f{BEb}}{f{BEb}}}d}{{{f{BCl}}{f{BCl}}}d}00{{f{f{c}}}d{}}0{{{f{BCl}}}Fl}`{{{f{BCl}}e}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}{G`{Ej}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{BCl}}}{{Ah{b}}}}{{{f{BCl}}}{{G`{Mj}}}}{{{f{BCl}}AG`}{{Ah{BCl}}}}{{{f{BCl}}{f{Gh}}}{{Ah{BCl}}}}{{{f{BE`}}{f{BjGl}}}Gn}{{{f{BEb}}{f{BjGl}}}Gn}{{{f{BCl}}{f{BjGl}}}Gn}0{cc{}}0000{cBCl{{Hd{}{{Bb{Af}}}}}}{cBCl{{Hd{}{{Bb{Ej}}}}}}{{{f{{Dj{BEh}}}}}{{Ah{BCl}}}}{{{f{{Dj{BEh}}}}{f{BDl}}}{{Ah{BCl}}}}{{c{f{BDl}}}{{Ah{BCl}}}{{Bf{}{{Bb{{f{BEh}}}}}}}}{{{f{BCl}}Fl}{{B`{{G`{Hn}}}}}}{{{f{BCl}}{f{Dn}}}{{B`{Fl}}}}{{{f{BCl}}}{{G`{{f{Bh}}}}}}{{{f{BCl}}}{{G`{Bh}}}}{{{f{BCl}}}{{G`{{f{Dn}}}}}}{{{f{BCl}}}{{f{{Dj{Ej}}}}}}{{{f{BjBCl}}}{{f{Bj{G`{Ej}}}}}}{{{f{BCl}}Fl}{{Ah{BEh}}}}{{{f{BCl}}Fl{f{BjBEh}}}{{Ah{b}}}}{{{f{BCl}}Fl{f{BjBEh}}}b}{{{f{BCl}}}{{B`{{Ah{E`}}}}}}`{{{f{BCl}}e}{{Ah{BEj}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{{f{BCl}}{G`{Ej}}dd}{{Ah{BEj}}}}{{{f{BEb}}{f{Bjc}}}bABf}{{{f{BjBCl}}{B`{Nh}}}{{Ah{BBd}}}}{{{f{BCl}}{B`{Fl}}}BCl}{{{f{BCl}}}Fl}{{{f{BCl}}{f{{Dj{Ej}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{{Dj{Ej}}}}}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{{Dj{Ej}}}}}{{f{BjBCl}}}}{{{f{BCl}}{BEl{Fl}}}{{f{c}}}{}}{{{f{BCl}}{f{Dn}}}{{f{c}}}{}}{{{f{BCl}}{Lh{Fl}}}{{f{c}}}{}}{{{f{BCl}}Fl}{{f{c}}}{}}{{{f{BCl}}{BEn{Fl}}}{{f{c}}}{}}{{{f{BCl}}BF`}{{f{c}}}{}}{{{f{BCl}}{BFb{Fl}}}{{f{c}}}{}}{{{f{BCl}}{BFd{Fl}}}{{f{c}}}{}}{{}Fl}0000{{{f{BjBCl}}Flc}{{Ah{{f{BjBCl}}}}}BDn}{{}c{}}000000{{{f{BCl}}}{{Ah{Gh}}}}{{{f{BCl}}}d}1{{{f{BCl}}}{{`{{Jj{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCl}}AMnd}BFf}{{{f{BCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{{f{BCl}}}BFh}{{{f{BCl}}}Fl}4{{{f{BCl}}}{{Ah{{B`{Ej}}}}}}{{{f{BCl}}BE`}{{Ah{{B`{Af}}}}}}1{{{f{BCl}}{f{Af}}}c{}}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}55{{{G`{Ej}}}{{Ah{BCl}}}}{{Fl{G`{Ej}}}BCl}{{{G`{Ej}}}BCl}22{{{G`{Ej}}Fl}{{Ah{BCl}}}}0{{{f{BjBFf}}}{{B`{c}}}{}}{{{f{BjBFh}}}{{B`{c}}}{}}{{{f{BCl}}}BCl}{{{f{BCl}}}{{`{{Ml{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCl}}ed}{{Ah{{G`{BCl}}}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{BCle}{{Ah{c}}}{}{{Cf{BCl}{{Cd{{Ah{c}}}}}}}}{{{f{BjBCl}}e}{{Ah{c}}}{}{{Cf{{f{BjBCl}}}{{Cd{{Ah{c}}}}}}}}{{BClgc}{{Ah{e}}}{}{}{{Cf{BClc}{{Cd{{Ah{e}}}}}}}}{{{f{BjBCl}}}{{B`{Ej}}}}{{{f{BCl}}{f{BCl}}}d}?>{{{f{BCl}}{f{Af}}}c{}}{{{f{BjBCl}}{f{Dn}}Bh}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{Dn}}c}{{Ah{{f{BjBCl}}}}}BFj}{{{f{BjBCl}}Flc}{{Ah{{f{BjBCl}}}}}BDn}{{{f{BjBCl}}Bhc}{{Ah{{f{BjBCl}}}}}BFj}<`{{{f{BCl}}{f{Af}}dd{B`{Il}}}{{Ah{BCl}}}}0{{{f{BCl}}Fldd{B`{Il}}}{{Ah{BCl}}}}{{{f{BCl}}}BDl}{{{f{BCl}}{f{BCl}}}{{Ah{b}}}}{{{f{BCl}}e}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}Fl}{{B`{{f{Ej}}}}}}{{{f{BCl}}c}{{Ah{BCl}}}{{BFl{Fl}}}}{{{f{BCl}}c}{{Ah{{G`{Ej}}}}}{{BFn{Bh}}}}3{{{f{BCl}}e{f{BG`}}}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCl}}e{f{BDl}}}{{Ah{BCl}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BjBCl}}e}{{Ah{b}}}{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BjBCl}}Fl}b}{{{f{BCl}}}{{Hh{FlFl}}}}{{{f{BCl}}Md}BCl}{{{f{BCl}}}d}{{{f{BjBCl}}}b}{{{f{BCl}}}Fl}{{{f{BFf}}}{{Hh{Fl{B`{Fl}}}}}}{{{f{BFh}}}{{Hh{Fl{B`{Fl}}}}}}{{{f{BCl}}MdFl}BCl}00{{{f{BCl}}cEl}{{Ah{BCl}}}{{BFn{Bh}}}}{{{f{BjBCl}}cEl}{{Ah{{f{BjBCl}}}}}{{BFn{Bh}}}}{{{f{BCl}}Md}{{Hh{BClBCl}}}}0{{{f{BjBCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{BClFld}{{G`{BCl}}}}{{BCl{f{Af}}}c{}}{{{f{BCl}}{f{BCl}}}c{}}{{{f{BCl}}{f{Af}}}c{}}{{{f{BCl}}BE`}{{Ah{{B`{Af}}}}}}{{{f{BCl}}{B`{Fl}}}BCl}{{{f{BCl}}{f{Eh}}}{{Ah{BCl}}}}{BCl{{G`{Ej}}}}{{{f{BCl}}{f{Eh}}}BCl}{{{f{BCl}}{f{Eh}}d}BCl}{{{f{BCl}}BGb}{{Ah{Nl}}}}{fc{}}00{fDd}{{{f{BjBCl}}{B`{{f{Dn}}}}{B`{{O`{Dd{G`{Dd}}}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{B`{{f{Dn}}}}{B`{{O`{Bh{G`{Bh}}}}}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{Dn}}e}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Af}}}{{Cd{{Ah{c}}}}}}}}{{{f{BjBCl}}Fle}{{Ah{{f{BjBCl}}}}}BDn{{Oh{{f{Ej}}}{{Cd{{Ah{c}}}}}}}}{c{{Ob{e}}}{}{}}000{BGd{{Ah{BCl}}}}1{{{Hh{BGf{f{BEf}}}}}{{Ah{BCl}}}}{{c{f{BDl}}}{{Ah{BCl}}}{{Bf{}{{Bb{{Ah{{f{BEh}}}}}}}}}}{{{f{BCl}}{f{Dn}}}{{Ah{Fl}}}}{{}{{Ob{c}}}{}}0000{f{{Ob{GbBAn}}}}{fOd}0000{{{f{BCl}}{B`{{f{{Dj{Dd}}}}}}BEb{B`{{Hh{MdFl}}}}}{{Ah{BCl}}}}{{{f{BCl}}d{B`{{G`{Bh}}}}BEb{B`{{Hh{MdFl}}}}}{{Ah{BCl}}}}1{{{f{BCl}}{f{BCl}}}{{Ah{BCl}}}}{{{f{BjBCl}}{f{BCl}}}{{Ah{{f{BjBCl}}}}}}{{{f{BjBCl}}{f{BCl}}}b}{{}c{}}0000{{{f{BCl}}}Fl}{{{f{BjBCl}}c}{{Ah{{f{BjBCl}}}}}BDn}{{{f{BjBCl}}c{f{BDl}}}{{Ah{{f{BjBCl}}}}}BDn}{{{f{BjBCl}}Ej}{{f{BjBCl}}}}{{{f{BCl}}Bh{B`{I`}}}{{Ah{BCl}}}}{{{f{BjBCl}}Bh{B`{I`}}}{{f{BjBCl}}}}`````{{fh}b}0{{{f{Ej}}{f{Ej}}}c{}}{{Ejc}e{AbKl}{}}{{{f{Ej}}c}e{AbKl}{}}{{EjEj}c{}}{{{f{Ej}}{f{Al}}}Ej}0000000{{{f{Ej}}{f{Al}}nN`}Ej}1{{{f{Ej}}{f{Al}}Dh}Ej}{{{f{BjEj}}{f{Ej}}}{{Ah{{f{BjEj}}}}}}{{{f{Ej}}c}Ej{{Cf{{f{Af}}}{{Cd{Af}}}}}}{{{f{Ej}}Ef}Eh}{{{f{BGh}}}{{f{Af}}}}{{{f{Ej}}}{{f{Af}}}}{{{f{Ej}}}{{B`{{f{BGh}}}}}}{{{f{Ej}}}{{B`{{f{Af}}}}}}{{{f{BGh}}}Af}{{{f{Ej}}}{{Ah{{f{En}}}}}}{{{f{Ej}}}{{Ah{{f{AK`}}}}}}{{{f{Ej}}}{{B`{BGj}}}}{{{f{Ej}}{f{Ej}}}c{}}?{{{f{Ej}}{f{Ej}}}{{Ah{Ej}}}}{{EjEj}c{}}202{{{f{Ej}}}{{Ah{{f{Gh}}}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{BGh}}{f{E`}}}{{Ah{BGh}}}}{{{f{Ej}}{f{E`}}}{{Ah{Ej}}}}10{{{f{BGh}}{f{E`}}Ff}{{Ah{BGh}}}}{{{f{Ej}}{f{E`}}Ff}{{Ah{Ej}}}}{{{f{Ej}}}{{Ah{{f{AMb}}}}}}{{{f{Ej}}}Ej}{{{f{BGh}}}BGh}1{{f{f{Bjc}}}b{}}0{fb}0{{{f{Ej}}}{{Ah{{f{Jd}}}}}}{{}Ej}{Fl{{f{c}}}{}}0{Fl{{f{Bjc}}}{}}0{{EjEj}c{}}{{{f{Ej}}c}e{AbKl}{}}{{{f{Ej}}{f{Ej}}}c{}}{{Ejc}e{AbKl}{}}{{{f{Ej}}{f{Ej}}}{{Ah{Ej}}}}{Flb}0={{{f{BGh}}}{{f{E`}}}}{{{f{Ej}}}{{f{E`}}}}{{{f{Ej}}{f{Ej}}}d}{{{f{Ej}}{f{Ej}}}{{Ah{Gh}}}}011{{{f{Ej}}}{{Ah{Ej}}}}{{{f{BjEj}}{f{Ej}}}{{Ah{{f{BjEj}}}}}}{{{f{Ej}}HnFl}{{Ah{Ej}}}}{{{f{Ej}}}{{Ah{{f{AKn}}}}}}{{{f{Ej}}}{{Ah{{f{AL`}}}}}}{{{f{Ej}}}{{AKl{Mj}}}}{{{f{Ej}}AG`}{{Ah{Ej}}}}{{{f{Ej}}{f{{l{An}}}}}{{Ah{Ej}}}}{{{f{BGh}}{f{BjGl}}}Gn}{{{f{Ej}}{f{BjGl}}}Gn}{cc{}}0{AfEj}{BGhEj}{{AfFl}BGh}{{BhFl{f{E`}}}Ej}{{{f{Ej}}FlFl}Ej}{{{f{Ej}}Fl}{{Ah{Hn}}}}{{{f{Ej}}}Fl}{{{f{Ej}}}Ib}{{{f{Ej}}}{{B`{{Fd{Fb}}}}}}{{{f{Ej}}Fl}{{B`{{f{If}}}}}}{{{f{Ej}}Fl}Hn}{{{f{Ej}}{f{Ej}}}{{Ah{Gh}}}}0{{{f{BGh}}}d}{{{f{Ej}}}d}{{{f{Ej}}{B`{Fl}}}Ej}{{{f{Ej}}}{{Ah{{f{BBh}}}}}}{{{f{Ej}}}{{Ah{{f{BBj}}}}}}{{{f{Ej}}}{{Ah{{f{BBl}}}}}}{{{f{Ej}}}{{Ah{{f{BBf}}}}}}{{{f{Ej}}}{{Ah{{f{Eh}}}}}}{{}Fl}0{{}c{}}0{BDnEj}{BGhEj}{EjEj}{EjBCl}{{{f{BjEj}}}{{f{BjAf}}}}>={{{f{Ej}}}{{Ah{Gh}}}}000{{{f{Ej}}}Gh}0{{{f{Ej}}}Jn}{{{f{BGh}}}{{B`{{f{Af}}}}}}{{{f{BGh}}}Fl}{{{f{Ej}}}Fl}{{{f{Ej}}}{{Ah{{f{Eb}}}}}}{{{f{Ej}}{f{Ej}}}{{Ah{Gh}}}}0{{{f{Ej}}}{{Ah{Kn}}}}0{{Ejc}e{AbKl}{}}{{{f{Ej}}{f{Ej}}}c{}}{{{f{Ej}}c}e{AbKl}{}}{{EjEj}c{}}{{{f{BGh}}}{{f{Bh}}}}{{{f{Ej}}}{{f{Bh}}}}{{BhKnFl}BGh}{{Bhc}Ej{}}{{BhE`}BGh}{{Bh{f{E`}}}Ej}{{{f{Ej}}FlFl}Ej}{{BhKnFl}Ej}==?{{{f{Ej}}}BGl}={{{f{Ej}}}Ej}=:<;{{{f{BjBGh}}Bh}{{f{BjBGh}}}}{{{f{BjEj}}Bh}b}{{{f{Ej}}{f{{Dj{AOj}}}}}{{Ah{Ej}}}}{{{f{BGh}}Fl}BGh}4{{{f{Ej}}ndd{B`{Il}}}{{Ah{Ej}}}}{{{f{Ej}}Fldd{B`{Il}}}{{Ah{Ej}}}}{{{f{BGh}}}{{f{Kn}}}}{{{f{BjEj}}Jn}b}{{{f{Ej}}Md}Ej}{{{f{BjEj}}}b}{{{f{Ej}}{B`{Il}}}Ej}{{{f{Ej}}MdFl}Ej}{{{f{Ej}}Ef}{{Ah{Ej}}}}{{{f{Ej}}Md}{{Hh{EjEj}}}}{{{f{Ej}}}{{Ah{{f{Db}}}}}}{{{f{BGh}}{f{E`}}}{{Ah{BGh}}}}{{{f{Ej}}{f{E`}}}{{Ah{Ej}}}}{{{f{Ej}}c}e{AbKl}{}}{{Ejc}e{AbKl}{}}{{EjEj}c{}}{{{f{Ej}}{f{Ej}}}c{}}{{{f{Ej}}{B`{Fl}}}Ej}{{{f{Ej}}{f{Eh}}}{{Ah{Ej}}}}{BGhAf}{EjAf}{{{f{Ej}}{f{{Dj{I`}}}}}{{Ah{Ej}}}}{{{f{Ej}}{f{{Dj{I`}}}}}Ej}{{{f{Ej}}{f{Eh}}}Ej}{fc{}}0{{{f{Ej}}}Ej}{{{f{BGh}}}Af}{{{f{Ej}}c}{{Ah{Ej}}}{{Cf{{f{Af}}}{{Cd{{Ah{Af}}}}}}}}{{{f{Ej}}}{{B`{{f{En}}}}}}{{{f{Ej}}}{{B`{{f{AK`}}}}}}{{{f{Ej}}}{{B`{{f{Gh}}}}}}{{{f{Ej}}}{{B`{{f{AMb}}}}}}{{{f{Ej}}}{{B`{{f{Jd}}}}}}{{{f{Ej}}}{{B`{{f{AKn}}}}}}{{{f{Ej}}}{{B`{{f{AL`}}}}}}{c{{Ob{e}}}{}{}}0{{{f{Ej}}}{{B`{{f{BBh}}}}}}{{{f{Ej}}}{{B`{{f{BBj}}}}}}{{{f{Ej}}}{{B`{{f{BBl}}}}}}{{{f{Ej}}}{{B`{{f{BBf}}}}}}{{{f{Ej}}}{{B`{{f{Eh}}}}}}{{}{{Ob{c}}}{}}0{{{f{Ej}}}{{B`{{f{Eb}}}}}}{{{f{Ej}}}{{B`{{f{Db}}}}}}{{{f{Ej}}}{{B`{{f{BBb}}}}}}{{{f{Ej}}}{{B`{{f{B@d}}}}}}{{{f{Ej}}}{{B`{{f{BBd}}}}}}{{{f{Ej}}}{{B`{{f{BB`}}}}}}{fOd}0{{{f{Ej}}}{{Ah{{f{BBb}}}}}}{{{f{Ej}}}{{Ah{{f{B@d}}}}}}{{{f{Ej}}}{{Ah{{f{BBd}}}}}}{{{f{Ej}}}{{Ah{{f{BB`}}}}}}{{{f{Ej}}}{{Ah{Ej}}}}0{AfBGh}{{{f{Ej}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}{{{f{Ej}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}{{}c{}}0{{EjBh}Ej}{{{f{Ej}}c}Ej{AbKl}}{{{f{Ej}}{f{Gh}}{f{Ej}}}{{Ah{Ej}}}}{{{f{Ej}}{f{{l{An}}}}{f{Ej}}}{{Ah{Ej}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BGn}}}BGn}{{f{f{Bjc}}}b{}}{fb}{{}BGn}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{BGn}}{f{BGn}}}d}{{f{f{c}}}d{}}0{{{f{BGn}}{f{BjGl}}}Gn}{cc{}}{{{f{BGn}}{f{Bjc}}}bABf}`{{}Fl}{{}c{}}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}``4````````````````````````````````{{fh}b}000{{{f{BEj}}}{{Ah{BCl}}}}`{{{f{BH`}}}{{f{{Dj{BHb}}}}}}{{{f{BEj}}c}{{Ah{BCl}}}{{Cl{BCl}{{Cd{{Ah{BCl}}}}}}JfJh}}{{{f{Al}}}Eb}{f{{f{c}}}{}}0000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000{{{f{BH`}}}BH`}{{{f{Al}}}Al}{{{f{BEj}}}BEj}{{{f{BHd}}}BHd}{{f{f{Bjc}}}b{}}000{fb}000;{{}BH`}{{}Al}{Fl{{f{c}}}{}}00{{{f{BHf}}}{{f{c}}}{}}11111{Fl{{f{Bjc}}}{}}0000000`{{BHhe}{}{}{{BHj{c}}}}{Flb}0000{{{f{BjBH`}}}b}111{{{f{BH`}}{f{BH`}}}d}{{{f{Al}}{f{Al}}}d}{{f{f{c}}}d{}}000`{{{f{BHl}}}I`}{{{f{BH`}}}{{f{{Dj{I`}}}}}}{{{f{BEj}}}{{Ah{BCl}}}}{{{f{BjBH`}}}{{f{Bj{G`{I`}}}}}}{{{f{BH`}}{f{BjGl}}}Gn}{{{f{Al}}{f{BjGl}}}Gn}{{{f{BEj}}{f{BjGl}}}Gn}{{{f{BHd}}{f{BjGl}}}Gn}0{{{f{Dn}}BHd}Bh}{cc{}}000{{{G`{BHn}}}BH`}{{{G`{{G`{BHn}}}}}BH`}22{BH`Al}33{cBH`{{Hd{}{{Bb{BHn}}}}}}{cBH`{{Hj{}{{Bb{BHn}}}}}}{{{f{Al}}Fl}BHl}{{{f{BEj}}}{{f{Al}}}}{{{f{BjBEj}}}{{f{BjAl}}}}{{{f{Al}}}Eh}{{{f{BI`}}dd}{{Ah{Al}}}}0{{{f{BEj}}}{{Ah{BCl}}}}{{{f{BjAl}}}{{f{BjBH`}}}}{{}Fl}0000000{{}c{}}0000000{AlBH`}1{BH`c{}}{{{f{BH`}}}c{}}301{{{f{BHl}}}d}{{{f{Al}}}d}{{{f{BH`}}}d}{{{f{BH`}}}{{BId{{BIb{{Kb{I`}}}}{Kb{BHb}}}}}}{{{f{Al}}}BIf}{{{f{BEj}}}{{G`{Ej}}}}{{{f{BEj}}{B`{{Hh{MdFl}}}}}{{G`{Ej}}}}={{{f{BHl}}}Fl}{{{f{Al}}}Fl}?????{{{G`{I`}}{G`{BHb}}d}BH`}{{{f{BCl}}{G`{Ej}}Al{B`{{G`{Bh}}}}}BEj}{{{f{BjBIf}}}{{B`{c}}}{}}{{{f{BjBIf}}Fl}{{B`{c}}}{}}{{{f{BEj}}c}{{Ah{BCl}}}{{Cf{BCl}{{Cd{{Ah{BCl}}}}}}JfJh}}{f}{{{f{Al}}}BHh}{{{f{BEj}}nN`}{{Ah{BCl}}}}{{BEje}BEj{{B@j{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{Al}}MdFl}BHf}{{{f{BjBH`}}}b}{{{f{BjAl}}}b}{{{f{BEj}}Dh}{{Ah{BCl}}}}{{{f{BEj}}}{{Ah{BCl}}}}{Al{{G`{I`}}}}0{BEjAl}{{{f{BjBEj}}}Al}{fc{}}000{fDd}{c{{Ob{e}}}{}{}}0000000{{}{{Ob{c}}}{}}0000000{f{{Ob{GbBAn}}}}{fOd}0000000{AlAl}{{{f{Al}}}{{f{BH`}}}}{{{f{Al}}}{{f{BIh}}}}={{}c{}}0000000`````{{{f{BH`}}c}Af{{Cf{{Hh{I`{f{BHb}}}}}{{Cd{B`}}}}JfJh}}{{{f{BH`}}c}Af{{Cf{{Hh{I`{f{BHb}}}}}{{Cd{}}}}JfJh}}{{{f{{Dj{{BIj{I`}}}}}}c}Af{{Cf{{BIj{I`}}}{{Cd{B`}}}}JfJh}}{{{f{{Dj{{BIj{I`}}}}}}c}Af{{Cf{{BIj{I`}}}{{Cd{}}}}JfJh}}{{{f{{Dj{c}}}}e{B`{BIl}}}{{AJj{c}}}{BInBJ`}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{Dj{c}}}}{f{Hf}}e{B`{BIl}}}{{AJj{c}}}{BInBJ`}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{l{c}}}}I`I`}{{l{c}}}Cb}{{{f{BIh}}{f{{Dj{Fn}}}}}d}{{{f{BJb}}{f{Al}}}Af}{{BJdBJd}BJd}0`{{{f{BJf}}{f{BCl}}{f{Al}}}{{Ah{Af}}}}{{{f{BJf}}}{{Ah{{f{Bh}}}}}}```````````````````````{{fh}b}00{{{f{BjBJh}}Hn}{{B`{b}}}}{{{f{BjBJj}}{f{Hn}}}b}0{f{{f{c}}}{}}00{{{f{Bj}}}{{f{Bjc}}}{}}00{{{f{BJh}}}BJh}{{{f{BJj}}}BJj}{{{f{BEh}}}BEh}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{Dj{c}}}}}E`{{BAb{E`}}}}{{}BEh}{Fl{{f{c}}}{}}00{Fl{{f{Bjc}}}{}}00{Flb}00{{{f{BEh}}{f{BEh}}}d}{{f{f{c}}}d{}}0{{{f{BEh}}{f{BjGl}}}Gn}{cc{}}{{{Hh{{f{E`}}Fl}}}BJh}{{{Hh{{f{E`}}Fl}}}BJj}22{{gFl}BDl{{B@j{Bh}}}{{B@j{E`}}}{{Bf{}{{Bb{{G`{{Hh{ce}}}}}}}}}}{{}Fl}00{{}c{}}00{BJhAf}{BJjAf}{{{f{E`}}Fl}BJh}{{{f{E`}}Fl}BJj}{{{G`{Hn}}}BEh}{{{f{BjBJh}}Fl}Af}{{{f{BjBJj}}Fl}Af}{{{f{{Dj{BEh}}}}{B`{Fl}}}{{Ah{BDl}}}}0{{{f{{Dj{BEh}}}}{B`{Fl}}}{{Ah{{G`{E`}}}}}}{fc{}}00{c{{Ob{e}}}{}{}}00{{}{{Ob{c}}}{}}00{fOd}00==={{{f{{Dj{BCl}}}}}{{Ah{BCl}}}}{{{f{{Dj{BCl}}}}d}{{Ah{BCl}}}}````{{IlIl}Il}{{{f{{Dj{BCl}}}}{B`{Nh}}}{{Ah{{Hh{{G`{BBd}}Nh}}}}}}{{{f{{AJn{Md}}}}Nh{f{Bj{G`{Il}}}}}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}BJl}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{BJl}}}Il}{cc{}}{{}Fl}{{}c{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{BJn}}Nh{f{Bj{G`{Il}}}}}{{Ah{b}}}}0{{{f{BJn}}Nh{f{Bj{Dj{Il}}}}}{{Ah{b}}}}05{{{f{BjBJl}}{f{{Dj{Dh}}}}}b}{{{f{BjBJl}}M`}b}{{{f{BjBJl}}Md}b}{{{f{BjBJl}}Mf}b}{{{f{BjBJl}}Il}b}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000{{{f{{Ld{ce}}}}}{{f{e}}}NdBK`}{{{f{{Ld{c}}}}}BKb{BKdNd}}{{{f{{Ld{ce}}}}}{}NdBK`}{{{f{{Ld{c}}}}}M`BKf}{{{f{Bh}}}{{f{Dn}}}}{{{f{Bh}}}{{f{BKh}}}}{{{f{Bh}}}{{f{{Dj{Dh}}}}}}{{{f{Bh}}}{{f{BKj}}}}{{{f{{Ld{ce}}}}}{{f{c}}}NdBK`}4{{{Ld{{BKl{c}}e}}}{{Ld{ce}}}{}BK`}{{{Ld{{Dj{{BKl{c}}}}e}}}{{Ld{{Dj{c}}e}}}{}BK`}{f{{f{c}}}{}}700030000000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000000000{{{f{AMb}}{f{AMb}}c}{{Ah{AMb}}}AMd}{{{f{{Ld{c}}}}}{{B`{{f{AJf}}}}}{AJfNd}}`{{{f{BKn}}{f{Af}}}{{Ah{Af}}}}{{{f{BKn}}c}{{Ah{Af}}}Ad}{{{f{Bh}}}Bh}{{{f{Of}}}Of}{{{f{BL`}}}BL`}{{{f{{Ld{ce}}}}}{{Ld{ce}}}Nd{BK`A@n}}{{{f{Nb}}}Nb}{{{f{BGb}}}BGb}{{{f{B@l}}}B@l}{{{f{N`}}}N`}{{{f{BIl}}}BIl}{{{f{BLb}}}BLb}{{{f{BLd}}}BLd}{{{f{BLf}}}BLf}{{f{f{Bjc}}}b{}}00000000000{fb}00000000000{{{f{Bh}}{f{Bh}}}AOn}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}AOn{BLhNd}BK`}{B@`e{}{{ALb{c}}AJb}}0{{B@`ADj}e{}{{ALd{c}}AJb}}0{{f{f{c}}}AOn{}}0{{AKjBDb}AKj}{AKjAKj}{{{f{H`}}{f{ADj}}}{{Fd{H`}}}}``{{}b}{cbBK`}{{}Bh}{{}{{Ld{Dn}}}}{{}{{Ld{c}}}BLj}{{}{{Ld{BLl}}}}{{}{{Ld{{Dj{c}}}}}{}}{{}Nb}{{}BGb}{{}B@l}{{}N`}`{Fl{{f{c}}}{}}{{{f{Bh}}}f}1111{{{f{{Ld{ce}}}}}{{f{c}}}NdBK`}222222222{Fl{{f{Bjc}}}{}}0000000000000{{{f{{Ld{c}}}}}{{f{Dn}}}{AJfNd}}`{{{Ld{ADlc}}}{{Ob{{Ld{ec}}{Ld{ADlc}}}}}BK`{ADlJfJh}}{{{Ld{ADlc}}}{{Ld{ec}}}BK`{ADlJfJh}}{{{f{{Ld{ce}}}}}{{BLn{ce}}}Nd{A@nBK`}}{Flb}000{{{f{Bj{Ld{ce}}}}}bNdBK`}1111111111{{{f{B@l}}}{{f{ADj}}}}`{{{f{Bh}}{f{c}}}d{{Kh{Dn}}Nd}}{{{f{Of}}{f{Of}}}d}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BM`Nd}BK`}{{{f{{Ld{BMb}}}}{f{BMb}}}d}{{{f{{Ld{H`}}}}{f{H`}}}d}{{{f{Nb}}{f{Nb}}}d}{{{f{BGb}}{f{BGb}}}d}{{{f{B@l}}{f{B@l}}}d}{{{f{N`}}{f{N`}}}d}{{{f{BIl}}{f{BIl}}}d}{{{f{BLb}}{f{BLb}}}d}{{{f{BLd}}{f{BLd}}}d}{{{f{BLf}}{f{BLf}}}d}{{f{f{c}}}d{}}0000000000000{BL`{{Hh{MfMf}}}}{{AMd{f{B@d}}{f{B@d}}}{{Ah{B@d}}}}{{{f{Bj{Ld{AD`}}}}}{{Ob{bBMd}}}}{{{f{AKj}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{Bh}}{f{BjGl}}}{{Ob{bB@f}}}}0{{{f{Of}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BL`}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{{Ld{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}NdBK`}{{{f{{Ld{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}{BDfNd}BK`}{{{f{{Ld{ce}}}}{f{BjGl}}}{{Ob{bB@f}}}{ADnNd}BK`}{{{f{Nb}}{f{BjGl}}}Gn}{{{f{BGb}}{f{BjGl}}}Gn}{{{f{B@l}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{N`}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BIl}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLb}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLd}}{f{BjGl}}}{{Ob{bB@f}}}}{{{f{BLf}}{f{BjGl}}}{{Ob{bB@f}}}}`{BMdAKj}{BMfAKj}{BMhAKj}{cc{}}{BMjAKj}{GbBh}2{DdBh}{{{f{Dn}}}Bh}{{{f{Dd}}}Bh}5{MfOf}6{{{f{{Dj{c}}}}}{{Ld{{Dj{c}}}}}A@n}{BMl{{Ld{BLl}}}}{{{AKl{c}}}{{Ld{c}}}{BMnNd}}{{{G`{ce}}}{{Ld{{Dj{c}}e}}}{}{BK`A@n}}{{{Fd{ce}}}{{Ld{ce}}}NdBK`};{BN`c{}}{{{Ld{Dn}}}{{Ld{{Dj{Dh}}}}}}{BNb{{Ld{BKj}}}}{c{{Ld{c}}}{}}{{{f{Dn}}}{{Ld{Dn}}}}{{{f{BLl}}}{{Ld{BLl}}}}{{{BIj{c}}}{{Ld{{Dj{c}}}}}{}}{{{f{BKj}}}{{Ld{BKj}}}}{BNd{{Ld{BKh}}}}{{{f{BKh}}}{{Ld{BKh}}}}{Gb{{Ld{Dn}}}}{Dd{{Ld{Dn}}}}{cc{}}00000000{{c{B`{Hf}}}BNf{}}{{{BNh{Md}}{BNh{Dh}}{B`{Hf}}}BNj}{{{BNh{Md}}{BNh{Dh}}{B`{Hf}}}BNl}{cBh{{Hd{}{{Bb{BDj}}}}}}{cBh{{Hd{}{{Bb{Dd}}}}}}{cBh{{Hd{}{{Bb{{f{Dn}}}}}}}}{cBh{{Hd{}{{Bb{{f{BDj}}}}}}}}{cBh{{Hd{}{{Bb{{AKl{Dn}}}}}}}}{cBh{{Hd{}{{Bb{{Fd{Dn}}}}}}}}{cBh{{Hd{}{{Bb{{f{Bh}}}}}}}}{cBh{{Hd{}{{Bb{Bh}}}}}}{e{{Ld{{Dj{c}}}}}{}{{Hd{}{{Bb{c}}}}}}{{gFl}{{BNn{Md}}}Kh{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}0{e{{BNn{Md}}}{{Hd{}{{Bb{{B`{d}}}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{{gADj}{{BNn{Md}}}BJ`{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}2{e{{Ld{{Dj{c}}}}}Jf{{Hj{}{{Bb{c}}}}}}{{}{{Ld{c}}}Nd}{c{{Ld{ec}}}BK`Nd}{{{f{Dn}}}Bh}0{{{f{Dn}}}{{Ob{BO`}}}}{DdBh}{{Bhc}BOb{}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BOdNd}BK`}{{{f{Bj{Ld{ce}}}}}{{B`{{f{Bjc}}}}}NdBK`}{{{f{Bj{Ld{ce}}}}}{{f{Bjc}}}NdBK`}{{{f{Fn}}Fl}Hn}3{{{f{Bh}}{f{Bjc}}}bABf}{{{f{{Ld{ce}}}}{f{Bjg}}}b{BOfNd}BK`ABf}{{{f{BGb}}{f{Bjc}}}bABf}{{{f{B@l}}{f{Bjc}}}bABf}{{{f{N`}}{f{Bjc}}}bABf}{{{f{BLf}}{f{Bjc}}}bABf}{{{f{Of}}}Mf}{{}b}{cb{A@nBK`}}{{{f{{Dj{Mf}}}}}{{`{{Bf{}{{Bb{Fl}}}}}}}}{{}Fl}0000000000000`{{{f{BjBL`}}}{{f{BjIl}}}}{{}c{}}0000000000000{{}Ej}{{{Ld{ce}}}{{B`{c}}}{}BK`}{{{Ld{ce}}}{}NdBK`}{{{Ld{ce}}}{{Hh{e}}}NdBK`}{{{Ld{BOh}}}Af}{BhDd}{{{f{BL`}}}d}{{{f{Of}}}d}`{{{f{{Ld{AD`}}}}}d}{{{f{c}}}d{}}1{{{f{BEf}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BOdNd}BK`}`0{{{f{AMb}}{f{AMb}}}{{Ah{{Hh{AMbAMb}}}}}}{{EbEb}{{Ah{{Hh{EbEb}}}}}}{{{f{Bj{Ld{ce}}}}}{{f{Bjc}}}{BOjNd}{BK`A@n}}{{{f{BOl}}}Kn}0{{{f{BOn}}}Kn}```11`{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}d{BM`Nd}BK`}{{C@`Fl}{{B`{Fl}}}}{{Bhc}C@b{}}{c{{Ld{c}}}{}}{{BhADjd}B@l}{e{{Ld{c}}}{}{{Oh{{f{{BLn{c}}}}}{{Cd{c}}}}}}{{ge}{{Ld{ce}}}{}BK`{{Oh{{f{{BLn{ce}}}}}{{Cd{c}}}}}}{{ce}{{Ld{ce}}}{}BK`}{{}{{Ld{{BKl{c}}}}}{}}{c{{Ld{{BKl{e}}c}}}BK`{}}{Fl{{Ld{{Dj{{BKl{c}}}}}}}{}}{{Flc}{{Ld{{Dj{{BKl{e}}}}c}}}BK`{}}3210`{{}Of}{{}BL`}{{{f{Bh}}{f{Bh}}}{{B`{AOn}}}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}{{B`{AOn}}}{BOdNd}BK`}{c{{C@d{{Ld{c}}}}}{}}{{ce}{{C@d{{Ld{ce}}}}}{}BK`}`````{{{f{BOl}}}Kn}0{{{f{{Ld{c}}}}{f{BjC@f}}}b{AJfNd}}{{{f{{Ld{ce}}}}{f{{Ld{ce}}}}}dNdBK`}{{{f{BOn}}nN`}{{Ah{Kn}}}}{{{f{Bj{Ld{AD`}}}}{f{Bj{Dj{Dh}}}}}{{Ob{FlBMd}}}}{{{f{Bj{Ld{AD`}}}}C@h}{{Ob{bBMd}}}}{{{f{Bj{Ld{AD`}}}}{f{Bj{G`{Dh}}}}}{{Ob{FlBMd}}}}{{{f{Bj{Ld{AD`}}}}{f{BjDd}}}{{Ob{FlBMd}}}}{{{f{Bj{Ld{AD`}}}}{f{Bj{Dj{C@j}}}}}{{Ob{FlBMd}}}}`{{{f{Bj{Ld{AD`}}}}C@l}{{Ob{IlBMd}}}}`{{{f{AKd}}FlFl}AKd}0{{{f{{Ld{c}}}}}{{B`{{f{AJf}}}}}{AJfNd}}{{{f{C@n}}Dh}Kn}{{MfMf}BL`}`{{{f{{Ld{ce}}}}}FlNdBK`}>>{{{f{Of}}}{{B`{Mf}}}}{fc{}}00000000000{fDd}00{B@`{{Ob{eg}}}{}{{ALb{c}}AJb}{}}0{{B@`ADj}{{Ob{eg}}}{}{{ALd{c}}AJb}{}}0{c{{Ob{e}}}{}{}}000{{{Ld{{Dj{c}}e}}}{{Ob{{Ld{{BIj{c}}e}}}}}{}BK`}1111111111{{}{{Ob{c}}}{}}0000000000000{{C@`Fl}{{Ob{FlAKj}}}}{c{{Ob{{Ld{c}}CA`}}}{}}{{ce}{{Ob{{Ld{ce}}CA`}}}{}BK`}{{}{{Ob{{Ld{{BKl{c}}}}CA`}}}{}}{c{{Ob{{Ld{{BKl{e}}c}}CA`}}}BK`{}}10{c{{Ob{{C@d{{Ld{c}}}}CA`}}}{}}{{ce}{{Ob{{C@d{{Ld{ce}}}}CA`}}}{}BK`}{f{{Ob{GbBAn}}}}00{{{Ld{ce}}}{{Ob{c{Ld{ce}}}}}{}BK`}{fOd}0000000000000{{{Ld{ce}}}cA@nBK`}`{{{f{C@n}}Dh}Kn}{{}c{}}0000000000000{{{f{{Ld{ce}}}}}FlNdBK`}``{{B@l{CAb{BhBh}}}B@l}{{{f{AKj}}c}AKj{{Oh{{f{Dn}}}{{Cd{Dd}}}}}}{{{f{Bj{Ld{AD`}}}}{f{{Dj{Dh}}}}}{{Ob{FlBMd}}}}{{{f{BjBh}}BDj}{{Ob{bB@f}}}}{{{f{BjBh}}CAd}{{Ob{bB@f}}}}{{{f{BjBh}}{f{Dn}}}{{Ob{bB@f}}}}{{{f{Bj{Ld{AD`}}}}{f{{Dj{CAf}}}}}{{Ob{FlBMd}}}}```````{{c{B`{Hf}}}BNf{}}{{{BNh{Md}}{BNh{Dh}}{B`{Hf}}}BNj}{{{BNh{Md}}{BNh{Dh}}{B`{Hf}}}BNl}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{CAh{B`{{f{ADj}}}}}{{Ob{{BNn{Md}}AKj}}}}{cc{}}{{}Fl}{{}c{}}{{{f{CAh}}}d}{FlCAh}{{{f{CAh}}}{{f{{Dj{Md}}}}}}{{{f{BjCAh}}{f{H`}}}b}{{{f{BjCAh}}}b}{{{f{BjCAh}}{f{{Dj{{Fd{H`}}}}}}}b}1{{{f{BjCAh}}{B`{{f{H`}}}}}b}{CAh{{CAj{Md}}}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd};`{{fh}b}{{{f{CAl}}}{{f{ADl}}}}{{{f{BjCAl}}}{{Fd{H`}}}}{{{f{BjCAl}}}{{f{BjADl}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CAl}}}CAl}{{f{f{Bjc}}}b{}}{fb}{{}CAl}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{CAl}}}{{f{ADj}}}}{{{f{BjCAl}}Fl}b}{{{f{CAl}}{f{BjGl}}}{{Ob{bB@f}}}}{cc{}}{{}Fl}{{}c{}}{{{f{CAl}}}Fl}{FlCAl}{{{f{BjCAl}}}b}70{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{CAl}}}{{B`{{f{CAn}}}}}}8```````{{{f{AKd}}FlFl}AKd}0`{{}b}0{{}d}``{{eFlFl}{{CB`{Md}}}{{Kh{Dn}}}{{Bf{}{{Bb{c}}}}}}{{eFlFl}{{AJn{Md}}}{{Kh{{Dj{Dh}}}}}{{Bf{}{{Bb{c}}}}}}{Ilb}`{{fh}b}{{{f{Kn}}}Hn}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Kn}}}Kn}{{f{f{Bjc}}}b{}}{fb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{Kn}}}{{f{E`}}}}{{{f{Kn}}{f{Kn}}}d}{{{f{Kn}}{f{BjGl}}}Gn}{CBbKn}{M`Kn}{MdKn}{DhKn}{CBdKn}{MfKn}{IlKn}{IjKn}{nKn}{CBfKn}{cc{}}{{}Fl}{{}c{}}{{KnBh}Ej}{{KnBh}Af}{{{f{Kn}}}d}0{{E`Hn}Kn}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{BjKn}}Hn}b}{{{f{Kn}}}{{f{Hn}}}}:{{{B`{n}}E`}Kn}``````{{{f{{CBh{c}}}}{f{{CBh{c}}}}}{{Ah{b}}}{}}{{{f{BEh}}}BDl}{{{f{BEf}}}CBj}{{{f{BEf}}}BDl}{{{f{CBj}}{f{Dn}}}{{B`{Mj}}}}{{{f{BDl}}{f{Dn}}}{{B`{Mj}}}}{{{f{CBj}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{BDl}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{{CBn{}{{CBl{c}}}}}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{ADnA@nBLjBM`}}{{{f{BDl}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{CBj}}}{{Ah{BDl}}}}{{{f{BDl}}}{{Ah{BDl}}}}{{{f{CBj}}AMn}BEf}{{{f{BDl}}AMn}BEf}{{{f{BjCBj}}{f{BDl}}}{{Ah{d}}}}{{{f{BjBDl}}{f{BDl}}}{{Ah{d}}}}{{{f{CBj}}{f{Dn}}}{{Ah{Mj}}}}{{{f{BDl}}{f{Dn}}}{{Ah{Mj}}}}`````````````````{{fh}b}0{{{f{BOh}}}n}0{{Bh{G`{Fn}}{f{ADj}}}{{Ah{Af}}}}{{Bh{G`{Fn}}{f{ADj}}{B`{{f{CC`}}}}}{{Ah{Af}}}}{{Afc}e{AbKl}{}}{{AfAf}c{}}{{{f{Af}}c}e{AbKl}{}}{{{f{Af}}{f{Af}}}c{}}`{{{f{BOh}}}{{Ah{Kn}}}}0{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{BOh}}Ef}Eh}0{{{f{BOh}}}{{Ah{Eh}}}}0`{{{f{Af}}Fl}{{f{Fn}}}}{{{f{BOh}}}{{f{ADl}}}}{{{f{BjBOh}}}{{f{BjADl}}}}0{{{f{Af}}}Eb}{{{f{BjBOh}}}{{f{Bj{l{c}}}}}Cb}{{{f{BOh}}}{{f{{l{c}}}}}Cb}{{{f{Af}}}{{f{BOh}}}}{{{f{BjBOh}}}{{Ah{Fl}}}}0{{{f{BjAf}}}{{Ah{Fl}}}}{{{f{Af}}}{{Ah{{f{En}}}}}}{{{f{Af}}}{{Ah{{f{AK`}}}}}}{{{f{BOh}}{f{Af}}}{{Ah{Af}}}}00000{{{f{Af}}}{{Ah{{f{Gh}}}}}}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{BOh}}}{{B`{{Fd{Fb}}}}}}0{{{f{BOh}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Af}}{f{E`}}}{{Ah{Af}}}}0{{{f{Af}}{f{E`}}Ff}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AMb}}}}}}88{{{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{Af}}c}{{Ah{Af}}}Ad}{{{f{BOh}}}Fj}{{{f{Af}}}{{`{{Bf{}{{Bb{Fl}}}}}}}}{{{f{BOh}}}{{f{{G`{Fn}}}}}}{{{f{BjBOh}}}{{f{Bj{G`{Fn}}}}}}{{{f{BjAf}}}{{f{Bj{G`{Fn}}}}}}{{{f{Af}}}Af}{{{f{Jn}}}Jn}1{{{f{BOh}}}{{Ld{BOh}}}}{{f{f{Bjc}}}b{}}0{fb}0{{{f{BjAf}}}b}{{{f{Af}}}{{Ah{{f{Jd}}}}}}{{}Af}{Fl{{f{c}}}{}}00{{{f{Af}}}{{f{c}}}{}}1{Fl{{f{Bjc}}}{}}000{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbKl}{}}{{Afc}e{AbKl}{}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}{{Ah{n}}}}{Flb}000{{{f{BOh}}}Af}0{{{f{BOh}}}{{f{E`}}}}0{{{f{Jn}}{f{Jn}}}d}{{{f{Af}}{f{Af}}}d}9{{{f{Af}}c}eB@h{}}{{{f{Af}}{f{Dn}}}{{Ah{Gh}}}}1{{{f{Af}}{f{Dn}}}c{}}<33{{f{f{c}}}d{}}0{{{f{Af}}}Fl}{{{f{Af}}}{{Ah{Af}}}}{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{Af}}HnFl}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AKn}}}}}}{{{f{Af}}}{{Ah{{f{AL`}}}}}}{{{f{BOh}}}{{AKl{Mj}}}}0{{{f{Af}}AG`}{{Ah{Af}}}}{{{f{BOh}}{f{Gh}}}{{Ah{Af}}}}{{{f{BOh}}}Kn}0{{{f{Jn}}{f{BjGl}}}Gn}{{{f{Af}}{f{BjGl}}}Gn}0{{{f{Af}}}Dd}{cc{}}00{{{l{c}}}AfCb}1{{Bh{f{{Dj{Hn}}}}d}{{Ah{Af}}}}{{Bh{f{{Dj{Hn}}}}{f{E`}}d}{{Ah{Af}}}}{{BhFn}{{Ah{Af}}}}{{Bh{G`{Fn}}}{{Ah{Af}}}}{{Bh{G`{Fn}}{f{E`}}}Af}{cAf{{Hd{}{{Bb{{B`{{f{Dn}}}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Mf}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Il}}}}}}}}{cAf{{Hd{}{{Bb{Il}}}}}}{cAf{{Hd{}{{Bb{{f{Il}}}}}}}}{cAf{{Hd{}{{Bb{{B`{M`}}}}}}}}{cAf{{Hd{}{{Bb{Dd}}}}}}{cAf{{Hd{}{{Bb{{B`{Dd}}}}}}}}{cAf{{Hd{}{{Bb{M`}}}}}}{cAf{{Hd{}{{Bb{{f{M`}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Md}}}}}}}}{cAf{{Hd{}{{Bb{{f{d}}}}}}}}{cAf{{Hd{}{{Bb{d}}}}}}{cAf{{Hd{}{{Bb{{B`{d}}}}}}}}{cAf{{Hd{}{{Bb{Md}}}}}}{cAf{{Hd{}{{Bb{{f{Md}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Ij}}}}}}}}{cAf{{Hd{}{{Bb{{f{n}}}}}}}}{cAf{{Hd{}{{Bb{{f{Ij}}}}}}}}{cAf{{Hd{}{{Bb{{f{Dn}}}}}}}}{cAf{{Hd{}{{Bb{Mf}}}}}}{cAf{{Hd{}{{Bb{{f{Mf}}}}}}}}{cAf{{Hd{}{{Bb{n}}}}}}{cAf{{Hd{}{{Bb{{B`{n}}}}}}}}{cAf{{Hd{}{{Bb{Ij}}}}}}{{Bh{G`{Ij}}}Af}{{Bh{G`{Ll}}}Af}{{Bh{G`{Mf}}}Af}{{Bh{G`{Il}}}Af}{{Bh{G`{Md}}}Af}{{Bh{G`{M`}}}Af}{{Bh{G`{n}}}Af}{{BhFl{f{E`}}}Af}{{{f{Af}}FlFl}Af}{{{f{BOh}}Fl}{{Ah{Hn}}}}{{{f{Af}}}Fl}{{{f{Af}}}Ib}{{{f{Af}}}Af}{{{f{BOh}}}{{B`{{Lf{Fb}}}}}}0{{{f{BOh}}Fl}{{B`{{f{If}}}}}}0{{{f{BOh}}FlFl}{{B`{{f{If}}}}}}0{{{f{BOh}}Fl}Hn}0{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}{f{Dn}}}c{}}{{{f{Af}}c}eB@h{}}210{{{f{BOh}}}d}{{{f{Jn}}{f{Bjc}}}bABf}{{{f{Af}}{B`{Fl}}}Af}{{{f{Af}}}{{Ah{{f{BBh}}}}}}{{{f{Af}}}{{Ah{{f{BBj}}}}}}{{{f{Af}}}{{Ah{{f{BBl}}}}}}{{{f{Af}}}{{Ah{{f{BBf}}}}}}{{{f{Af}}}{{Ah{{f{Eh}}}}}}`{{{f{Af}}}{{Ah{Eb}}}}{{}Fl}000{{}c{}}000{{}Ej}{AfBCl}2{BFjAf}{AfAf}>>{{{f{Af}}}{{Ah{Gh}}}}000{{{f{BOh}}}Gh}0{{}d}00{{{f{Af}}}Jn}{{{f{Af}}}CCb}{{{f{Af}}}{{`{{Bf{}{{Bb{Af}}}}}}}}{{{f{BOh}}}Kn}0{{{f{BOh}}}Fl}{{{f{Af}}}Fl}{{{f{BOh}}Fl}Af}0{{{f{Af}}}{{Ah{{f{Eb}}}}}}{{{f{Af}}}{{Hh{{G`{{AGf{Md}}}}{G`{{B`{Hf}}}}}}}}{{{f{Af}}}Af}{{{f{Af}}c}eB@h{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}{f{Dn}}}c{}}102{{{f{Af}}}{{Ah{{B`{c}}}}}Kl}{{{f{BOh}}}{{Ah{Kn}}}}0{{{f{BOh}}}{{B`{n}}}}0{{{f{Af}}}Kn}1122322{{AfAf}c{}}6{{Afc}e{AbKl}{}}{{{f{Af}}c}e{AbKl}{}}??>{{{f{BOh}}}{{Ah{Fl}}}}0{{{f{BOh}}}{{f{Bh}}}}{{Bhc}Af{{Kh{{Dj{{B`{{AKl{{Dj{Dh}}}}}}}}}}}}{{Bhc}Af{{Kh{{Dj{Ij}}}}}}{{Bhc}Af{{Kh{{Dj{Mf}}}}}}{{Bhc}Af{{Kh{{Dj{d}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{n}}}}}}}}{{Bhc}Af{{Kh{{Dj{Dd}}}}}}{{Bhc}Af{{Kh{{Dj{Hn}}}}}}{{Bh{Lh{Md}}}Af}{{Bh{Lh{M`}}}Af}{{Bhc}AfBFj}{{Bh{Lh{Il}}}Af}{{Bh{Lh{Mf}}}Af}{{Bhc}Af{{Kh{{Dj{Af}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{Af}}}}}}}}{{Bhc}Af{{Kh{{Dj{{f{Dn}}}}}}}}{{Bh{f{Af}}}Af}{{Bhc}Af{{Kh{{Dj{{G`{Dh}}}}}}}}{{Bhc}Af{{Kh{{Dj{Il}}}}}}{{Bhc}Af{{Kh{{Dj{{AKl{{Dj{Dh}}}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{Ll}}}}}}}}{{Bhc}Af{{Kh{{Dj{M`}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{Md}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{M`}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{{f{Dn}}}}}}}}}}{{Bhc}Af{{Kh{{Dj{{AKl{Dn}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{{AKl{Dn}}}}}}}}}}{{Bhc}Af{{Kh{{Dj{{f{{Dj{Dh}}}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{Il}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{{f{{Dj{Dh}}}}}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{Mf}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{d}}}}}}}}{{Bhc}Af{{Kh{{Dj{Md}}}}}}{{Bhc}Af{{Kh{{Dj{Ll}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{{G`{Dh}}}}}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{Dd}}}}}}}}{{Bhc}Af{{Kh{{Dj{n}}}}}}{{Bhc}Af{{Kh{{Dj{{B`{Ij}}}}}}}}{{Bh{f{E`}}}Af}{{{f{BOh}}FlFl}Af}{{BhFl}Af}{{{f{BjCCb}}}{{B`{c}}}{}}{{{f{Af}}{f{Dn}}}{{Ah{Gh}}}}{{{f{Af}}c}eB@h{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}{f{Dn}}}c{}}21{{{f{Af}}}{{Ah{{f{`}}}}}}{{{f{BOh}}}Fl}`{{{f{BOh}}}{{Ah{Kn}}}}0{{{f{Af}}}BGl}{{{f{Af}}}{{Ah{Kn}}}}{{{f{BOh}}nN`}{{Ah{Kn}}}}0{{{f{BOh}}}Af}{{{f{BOh}}}{{B`{Hf}}}}0{{Afc}e{AbKl}{}}:{{{f{Af}}c}e{AbKl}{}}{{{f{BjBOh}}Bh}b}{{{f{BjAf}}Bh}{{f{BjAf}}}}{{{f{Af}}{f{{Dj{AOj}}}}}{{Ah{Af}}}}6{JnJn}{{{f{BOh}}{f{Cf}}Nb}{{Ah{Af}}}}0{{{f{Af}}ndd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fldd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fl}Af}{{{f{BjAf}}Jn}b}{{{f{BOh}}Md}Af}{{{f{BjBOh}}}b}0{{{f{BjAf}}}b}{{{f{Af}}{B`{Il}}}Af}{{{f{CCb}}}{{Hh{Fl{B`{Fl}}}}}}{{{f{BOh}}MdFl}Af}{{{f{Af}}MdFl}Af}{{{f{Af}}Ef}{{Ah{Af}}}}{{{f{BOh}}Ef}{{Ah{Af}}}}0{{{f{BOh}}Md}{{Hh{AfAf}}}}{{{f{Af}}Md}{{Hh{AfAf}}}}{{{f{BOh}}Dh}{{B`{n}}}}0{{{f{BOh}}Dh}{{Ah{Kn}}}}0{{{f{Af}}}{{Ah{{f{Db}}}}}}{{{f{Af}}Fl}{{Ah{{AKl{Dn}}}}}}{{{f{Af}}{f{E`}}}{{Ah{Af}}}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbKl}{}}{{Afc}e{AbKl}{}}{{{f{Af}}}{{Ah{c}}}Kl}{{{f{BOh}}}{{Ah{Kn}}}}0{{{f{Af}}}{{Ah{Kn}}}}{{{f{Af}}{B`{Fl}}}Af}{{{f{BOh}}{f{Eh}}}{{Ah{Af}}}}{{{f{BOh}}{f{{Dj{I`}}}}}{{Ah{Af}}}}{{{f{BOh}}{f{{Dj{I`}}}}}Af}{{{f{BOh}}{f{Eh}}}Af}{{{f{Af}}{f{{Dj{I`}}}}}Af}{{{f{Af}}FlAMn}Fn}{{{f{Af}}}{{Ah{Af}}}}?{fc{}}0{{{f{Af}}}{{AKl{Af}}}}{fDd}{{AfAf}{{Ah{Af}}}}{{{f{Af}}}{{B`{{f{En}}}}}}{{{f{Af}}}{{B`{{f{AK`}}}}}}{{{f{Af}}}{{B`{{f{Gh}}}}}}{{{f{Af}}}{{B`{{f{AMb}}}}}}{{{f{Af}}}{{B`{{f{Jd}}}}}}{{{f{Af}}}{{B`{{f{AKn}}}}}}{{{f{Af}}}{{B`{{f{AL`}}}}}}{c{{Ob{e}}}{}{}}00{{{Hh{Bh{G`{Fn}}}}}{{Ah{Af}}}}{{{Hh{BhFn}}}{{Ah{Af}}}}{{{Hh{{f{B@l}}Fn}}}{{Ah{Af}}}}3{{{Hh{{f{B@l}}{G`{Fn}}}}}{{Ah{Af}}}}{{{f{Af}}}{{B`{{f{BBh}}}}}}{{{f{Af}}}{{B`{{f{BBj}}}}}}{{{f{Af}}}{{B`{{f{BBl}}}}}}{{{f{Af}}}{{B`{{f{BBf}}}}}}{{{f{Af}}}{{B`{{f{Eh}}}}}}{{}{{Ob{c}}}{}}000{{{f{Af}}}{{B`{{f{Eb}}}}}}{{AfAf}{{Ah{Af}}}}{{Bhc}{{Ob{Af}}}{}}{{{f{Af}}}{{B`{{f{`}}}}}}{{{f{BjAf}}{In{c}}}dCb}{{{f{Af}}}{{B`{{f{Db}}}}}}4{f{{Ob{GbBAn}}}}{{{f{Af}}}{{B`{{f{BBb}}}}}}{{{f{Af}}}{{B`{{f{B@d}}}}}}{{{f{Af}}}{{B`{{f{BBd}}}}}}{{{f{Af}}}{{B`{{f{BB`}}}}}}{fOd}000{{{f{Af}}}{{Ah{{f{BBb}}}}}}{{{f{Af}}}{{Ah{{f{B@d}}}}}}{{{f{Af}}}{{Ah{{f{BBd}}}}}}{{{f{Af}}}{{Ah{{f{BB`}}}}}}{{{f{BOh}}}{{Ah{Af}}}}0{{{f{Af}}}{{Ah{Af}}}}{{{f{BOh}}}{{Ah{{f{{l{c}}}}}}}Cb}{{{f{BOh}}Dh}{{B`{n}}}}0{{{f{BOh}}Dh}{{Ah{Kn}}}}0{{}c{}}000{{AfBh}Af}{{{f{Af}}c}Af{AbKl}}{{{f{BOh}}}{{Ah{Kn}}}}0{{{f{Af}}{f{Gh}}{f{Af}}}{{Ah{Af}}}}``{{fh}b}{{{f{Cj}}}{{f{Af}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Cj}}}Cj}{{f{f{Bjc}}}b{}}{fb}{{{f{Cj}}}Af}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{cc{}}{{}Fl}{{}c{}}{{{CCd{Af}}}Cj}{{{f{BjCj}}{f{BjFn}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6{{{f{BjCj}}{f{BjFn}}e}c{}{{Cf{{f{Cj}}}{{Cd{c}}}}}}```````````{{fh}b}{{{CCf{}{{Cd{c}}}}{f{Af}}}c{}}{{{f{CCh}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Aj}}}}{f{Af}}}{{Ah{Af}}}}0{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{{{f{CCj}}}CCj}{{f{f{Bjc}}}b{}}{fb}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}9877{Flb}{{{f{CCj}}{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{CCj}}{f{BjGl}}}Gn}{cc{}}{{}Fl}{{}c{}}?>==?>==?>=={fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}4``{{{f{BKn}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Fh}}}}{f{Af}}}{{Ah{Af}}}}0{{{f{BKn}}c}{{Ah{Af}}}Ad}{{{f{{l{Fh}}}}c}{{Ah{Af}}}Ad}0```{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CCl}}}CCl}{{f{f{Bjc}}}b{}}{fb}{{}CCl}{Fl{{f{c}}}{}}{Fl{{f{Bjc}}}{}}{Flb}{{{f{CCl}}{f{CCl}}}d}{{f{f{c}}}d{}}0{{{f{CCl}}{f{BjGl}}}Gn}{cc{}}{{{f{CCl}}{f{Bjc}}}bABf}{{}Fl}{{}c{}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}4````````````{{fh}b}006{{{G`{BCl}}}{{Ah{BCl}}}}{c{{Ah{BCl}}}{{Hd{}{{Bb{BCl}}}}}}{cBCl{{Hd{}{{Bb{BCl}}}}}}{c{{B`{BCl}}}{{Hd{}{{Bb{BCl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{e}}}}}}}CbCb}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{e}}}}{AKl{{l{g}}}}}}}CbCbCb}{{}CCn}{{{f{CD`}}}d}0{c{{Ah{E`}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}{c{{Ah{{Hh{E`Fl}}}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{B`{Hf}}}CbCb}{{CCnCCn}CCn}{{{f{BjCCn}}CCn}b}10{{{f{CCn}}}Dh}021{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{CDb}}}{{`{{Bf{}{{Bb{Fl}}}}}}}}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{{CDd{ec}}}}}{{CDd{ec}}}A@n{A@n{Bf{}{{Bb{c}}}}}}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Hh{{AKl{{l{c}}}}{AKl{{l{c}}}}}}}Cb}{{{f{Ej}}{f{Ej}}}{{Hh{EjEj}}}}{CDfe{}{{CDh{c}}}}{CDfe{}{{CDj{c}}}}{CCnCCn}{c{{Ah{BCl}}}{{Hd{}{{Bb{{f{BCl}}}}}}}}{cBCl{{Hd{}{{Bb{{f{BCl}}}}}}}}{{{f{CCn}}CCn}d}{{}CCn}{{}CD`}{{{f{{CDl{c}}}}}{{f{e}}}{}{}}{Fl{{f{c}}}{}}0{{{f{{AKf{c}}}}}{{f{e}}}{}{}}111{Fl{{f{Bjc}}}{}}{{{f{Bj{AKf{c}}}}}{{f{Bje}}}{}{}}1111{{CCnCCn}CCn}{Flb}0000{cBDl{{Hd{}{{Bb{E`}}}}}}{c{{Ah{E`}}}{{Hd{}{{Bb{{f{E`}}}}}}}}:{{{f{{CDl{Af}}}}{f{{CDl{Af}}}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{f{f{c}}}d{}}00000{{{f{BjCCn}}c}b{{Hd{}{{Bb{CCn}}}}}}``{{{f{CCn}}{f{BjGl}}}Gn}0000{{{f{CD`}}{f{BjGl}}}Gn}{cc{}}00{CCnCD`}11{Dh{{B`{CCn}}}}{DhCCn}00{c{{AKf{Gh}}}{{Hd{}{{Bb{d}}}}}}{c{{AKf{{l{e}}}}}{{Hd{}{{Bb{}}}}}A`}{cCCn{{Hd{}{{Bb{CCn}}}}}}{eCDj{}{{Hd{}{{Bb{c}}}}}}32{{{f{Dn}}}{{B`{CCn}}}}{c{{AKf{{l{e}}}}}{{Hj{}{{Bb{}}}}}A`}{c{{AKf{{l{e}}}}}{{Hl{}{{Bb{}}}}}A`}{c{{AKf{Gh}}}{{Hl{}{{Bb{d}}}}}}{{{f{E`}}{f{E`}}}{{B`{E`}}}}{{{f{E`}}{f{E`}}CD`}{{B`{E`}}}}{{{f{AN`}}{f{AN`}}}AN`}{{{f{Af}}{f{Af}}}{{Ah{b}}}}{{{f{{CDl{Af}}}}{f{Bjc}}}bABf}{{{f{CCn}}{f{Bjc}}}bABf}{{{f{CD`}}{f{Bjc}}}bABf}{{}Fl}0000{{{f{BjCCn}}CCn}b}{{CCnCCn}CCn}{{{f{CCn}}CCn}d}{{}c{}}0000{{{AKf{c}}}c{}}{CCnc{}}2{BFn{{G`{c}}}{}}{{}{{G`{Bh}}}}{{{f{CCn}}}d}0{{{f{CCn}}}{{ACl{CCn}}}}{{{f{CDb}}}{{`{{Bf{}{{Bb{CDb}}}}}}}}{{{f{CCn}}}{{ACn{CCn}}}}{{{f{CDb}}}Fl}{LlHn}{e{{Ah{E`}}}{{Kh{E`}}}{{Hd{}{{Bb{c}}}}A@n}}2{c{{AKf{c}}}{}}{{eFl}{{CDd{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{cFl}{{CDd{{CE`{{CDn{c}}}}c}}}A@n}{{{f{Bj{CDd{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{CDd{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}Gf}}{CCnCCn}{{{f{Dn}}}Dd}`{{{f{BjCCn}}CCn}b}{{{f{BjCCn}}CCnd}b}{{{f{{CDd{ec}}}}}{{Hh{Fl{B`{Fl}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{CDb}}MdFl}CDb}{{{f{{Dj{c}}}}MdFl}{{f{{Dj{c}}}}}{}}{{{f{c}}Fl}{{G`{c}}}CDb}0{{{f{CDb}}Md}{{Hh{CDbCDb}}}}{{{f{BCl}}Fld}{{G`{BCl}}}}{{CCnCCn}CCn}80{fc{}}009{{CDfFl}{{CDd{CDfc}}}{}}{c{{Ob{e}}}{}{}}0000{{{f{E`}}{f{E`}}}{{Ah{E`}}}}{{}{{Ob{c}}}{}}0000{fOd}00006{{}c{}}0000{{{f{E`}}e}c{}{{Cf{{f{BjCj}}}{{Cd{c}}}}}}{{{f{{Dj{{G`{c}}}}}}}{{Hh{Fl{G`{Fl}}}}}{}}{{{f{BCl}}}{{`{{Bf{}{{Bb{BCl}}}}}}}}{{{f{{Dj{c}}}}}{{AJj{I`}}}{{Kh{{Dj{Of}}}}JfJh}}{{{f{{Dj{e}}}}}{{G`{c}}}{JfJhCh}{{Kh{{Dj{c}}}}}}{{{f{Af}}}{{G`{Af}}}}","D":"KAf","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5907],[5,"ListType",1543],[5,"ChunkedArray",40],[1,"f64"],[10,"PolarsNumericType",1543],[10,"Num",5908],[10,"ToPrimitive",5909],[5,"Series",5130],[8,"PolarsResult",4352,5910],[10,"NumOpsDispatchInner",5608,5911],[6,"GroupsProxy",3969,5912],[5,"BooleanType",1543],[6,"Option",5913],[17,"Item"],[8,"ArrayBox",5584],[10,"Iterator",5914],[5,"PlSmallStr",4352,5915],[0,"mut"],[17,"IsNested"],[5,"FalseT",1543],[17,"IsObject"],[10,"PolarsDataType",1543],[17,"Output"],[10,"Fn",5916],[10,"Copy",5917],[5,"AmortSeries",5584],[10,"FnMut",5916],[5,"Float32Type",1543],[5,"Float64Type",1543],[8,"StringChunked",1543],[5,"String",5918],[5,"BinaryType",1543],[1,"u8"],[1,"slice"],[5,"StringType",1543],[1,"str"],[6,"DataType",1543,5919],[8,"ListChunked",1543],[5,"View",5920],[5,"SortOptions",1460],[8,"IdxCa",1543,5921],[6,"Column",3707],[5,"SortMultipleOptions",1460],[8,"BinaryChunked",1543],[10,"PolarsIntegerType",1543],[10,"MetadataTrait",827,5922],[5,"Box",5923],[6,"CastOptions",740],[10,"NumOpsDispatchCheckedInner",5659,5924],[8,"ChunkLenIter",40],[1,"usize"],[8,"ArrayRef",4352,5925],[5,"Vec",5926],[5,"CompactString",5927],[5,"MetadataProperties",827],[10,"DoubleEndedIterator",5928],[8,"BooleanChunked",1543],[17,"HasViews"],[5,"Formatter",5929],[8,"Result",5929],[10,"Array",5925],[17,"Array"],[10,"IntoIterator",5930],[5,"Bitmap",5931],[1,"tuple"],[10,"IntoParallelIterator",5932],[10,"TrustedLen",5933],[6,"AnyValue",1543,5934],[8,"IdxSize",4352,5935],[5,"MetadataFlags",827],[5,"ObjectType",1543],[10,"PolarsObjectSafe",1113],[10,"PolarsObject",1113],[1,"f32"],[1,"u64"],[5,"Metadata",827],[5,"RwLockWriteGuard",5936],[5,"Int128Type",1543],[8,"DecimalChunked",1543,5937],[10,"Send",5917],[10,"Sync",5917],[10,"ExactSizeIterator",5938],[10,"PolarsFloatType",1543],[6,"IsSorted",5130,5939],[10,"PolarsIterator",788],[5,"Iter",5940],[1,"fn"],[5,"Map",5941],[10,"AsRef",5942],[6,"ChunkedArrayLayout",40],[10,"NumCast",5909],[5,"Scalar",5065],[6,"MetadataReadGuard",827,5943],[5,"IMMetadata",827,5944],[5,"Arc",4352,5945],[5,"RwLockReadGuard",5936],[5,"Range",5946],[5,"UInt64Type",1543],[1,"i128"],[5,"Int32Type",1543],[1,"i32"],[5,"Int64Type",1543],[1,"i64"],[1,"u32"],[5,"UInt32Type",1543],[5,"Field",1543,5947],[10,"ParallelIterator",5932],[10,"IndexedParallelIterator",5932],[6,"QuantileMethod",4352,5948],[5,"RollingOptionsFixedWindow",4352,5949],[10,"Sized",5917],[17,"IsStruct"],[8,"PlRandomState",1543,5950],[5,"BytesHash",5951],[8,"Array2",5952],[8,"ArrayView1",5952],[6,"Either",5953],[6,"Result",5954],[5,"TypeId",5955],[5,"NullableIdxSize",4352,5935],[10,"FnOnce",5916],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",450,5956],[10,"ChunkedBuilder",478],[5,"BinViewChunkedBuilder",478,5957],[10,"ViewType",5958],[5,"BooleanChunkedBuilder",478,5959],[5,"NullChunkedBuilder",478,5960],[5,"PrimitiveChunkedBuilder",478,5961],[10,"Clone",5962],[8,"StringChunkedBuilder",478,5957],[8,"BinaryChunkedBuilder",478,5957],[10,"NewChunkedArray",478],[5,"AnonymousListBuilder",586,5963],[5,"AnonymousOwnedListBuilder",586,5963],[5,"ListBooleanChunkedBuilder",586,5964],[5,"ListPrimitiveChunkedBuilder",586,5965],[10,"ListBuilderTrait",586],[5,"ListStringChunkedBuilder",586,5966],[5,"ListBinaryChunkedBuilder",586,5966],[5,"ListNullChunkedBuilder",586,5967],[10,"Hasher",5968],[10,"ChunkedCollectInferIterExt",768],[10,"ChunkedCollectIterExt",768],[10,"Canonical",782],[10,"ChunkedCollectParIterExt",784],[10,"FromParIterWithDtype",784],[5,"BooleanArray",5969],[5,"BoolIterNoNull",788],[5,"SomeIterator",788],[5,"MetadataEnv",827,5970],[10,"MetadataCollectable",827,5971],[5,"Iter",5972],[5,"IterNames",5972],[5,"File",5973],[5,"Mutex",5974],[6,"MetadataMerge",827],[5,"RwLock",5936],[5,"ObjectArray",1113],[6,"ArrowDataType",1543,5975],[10,"Any",5955],[10,"Debug",5929],[8,"ObjectValueIter",1113],[5,"BitmapIter",5976],[6,"ZipValidity",5977],[5,"ObjectChunkedBuilder",1190],[8,"ObjectChunked",1543],[10,"AnonymousObjectBuilder",1214],[5,"ObjectRegistry",1214],[8,"ObjectConverter",1214],[8,"BuilderConstructor",1214],[10,"ChunkAgg",1243],[17,"FuncRet"],[10,"ChunkApply",1243],[10,"ChunkApplyKernel",1243],[10,"ChunkSort",1243],[10,"ChunkUnique",1243],[10,"ChunkCast",1243],[6,"FillNullStrategy",1243],[10,"ChunkCompareEq",1243],[10,"ChunkExplode",1243],[5,"OffsetsBuffer",5978],[10,"ChunkFillNullValue",1243],[10,"ChunkFilter",1243],[10,"ChunkFull",1243],[10,"ChunkFullNull",1243],[10,"ChunkAnyValue",1243],[10,"ChunkCompareIneq",1243],[10,"IsFirstDistinct",1243],[10,"IsLastDistinct",1243],[10,"ChunkQuantile",1243],[10,"ChunkExpandAtIndex",1243],[10,"ChunkReverse",1243],[10,"ChunkRollApply",1243],[10,"ChunkSet",1243],[10,"ChunkShift",1243],[10,"ChunkShiftFill",1243],[10,"ChunkVar",1243],[10,"ChunkTake",1243],[10,"ChunkTakeUnchecked",1243],[10,"ChunkBytes",1243],[10,"ChunkZip",1243],[10,"BinaryFnMut",1373],[10,"StaticArray",1543,5979],[10,"TernaryFnMut",1373],[10,"Error",5980],[10,"UnaryFnMut",1373],[5,"PrimitiveArray",5981],[5,"RowsEncoded",5982],[5,"BinaryArray",5983],[8,"BinaryOffsetChunked",1543],[6,"SearchSortedSide",1423],[10,"SlicedArray",4352,5984],[5,"NoNull",5693],[5,"NaiveDateTime",5985],[6,"PolarsError",4352,5910],[6,"Cow",5986],[8,"Float32Chunked",1543],[8,"Float64Chunked",1543],[10,"ArrayFromIter",1543,5987],[10,"ArrayFromIterDtype",1543,5987],[10,"AsRefDataType",1543,5919],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5988],[10,"From",5942],[5,"CategoricalChunked",3062,5989],[10,"CategoricalMergeOperation",3062,5990],[10,"LogicalType",1543,5991],[5,"Logical",1543,5991],[5,"OwnedObject",1543,5934],[6,"UnknownKind",1543,5919],[5,"CompatLevel",1543,5919],[6,"TimeUnit",1543,5992],[5,"UInt8Type",1543],[5,"UInt16Type",1543],[5,"Int8Type",1543],[5,"Int16Type",1543],[5,"DateType",1543],[5,"TimeType",1543],[5,"BinaryOffsetType",1543],[5,"DecimalType",1543],[5,"DatetimeType",1543],[5,"DurationType",1543],[5,"CategoricalType",1543],[5,"Dimension",1543,5993],[6,"ReshapeDimension",1543,5993],[6,"ArrowTimeUnit",1543],[6,"Ordering",5994],[10,"ArrayCollectIterExt",4352,5987],[8,"Utf8ViewArray",5958],[8,"UInt32Chunked",1543],[5,"Error",5929],[10,"NumericNative",1543],[10,"Into",5942],[5,"ArrowField",4352],[6,"IntegerType",5995],[6,"PrimitiveType",5996],[10,"Borrow",5997],[10,"NoOption",5998],[10,"GetAnyValue",1543,5934],[8,"Int128Chunked",1543],[10,"IntoScalar",1543,5999],[6,"PhysicalType",5995],[6,"ToCompactStringError",5927],[8,"UInt8Chunked",1543],[8,"UInt16Chunked",1543],[8,"UInt64Chunked",1543],[8,"Int8Chunked",1543],[8,"Int16Chunked",1543],[8,"Int32Chunked",1543],[8,"Int64Chunked",1543],[8,"PlIdHashMap",1543,5921],[5,"CategoricalChunkedBuilder",3062,6000],[5,"GlobalRevMapMerger",3062,5990],[6,"RevMapping",3205,6001],[6,"CategoricalOrdering",3205,6001],[5,"CatIter",3062,5989],[1,"u128"],[5,"DataFrame",3418],[5,"StringCacheHolder",3259,6002],[5,"EnumChunkedBuilder",3278,6003],[5,"ErrString",3306,5910],[6,"PolarsWarning",3306,6004],[10,"Display",5929],[6,"FloatFmt",3387],[1,"char"],[8,"Schema",5106],[10,"IntoColumn",3707],[6,"NullStrategy",3418],[6,"UniqueKeepStrategy",3418],[8,"PlHashSet",1543,5950],[8,"ArrowSchema",4352,6005],[5,"Row",4224],[5,"GroupBy",3969],[5,"RangeTo",5946],[5,"RangeToInclusive",5946],[5,"RangeFull",5946],[5,"RangeFrom",5946],[5,"RangeInclusive",5946],[5,"RecordBatchIter",3418],[5,"PhysRecordBatchIter",3418],[10,"IntoSeries",5130,6006],[10,"RangeBounds",5946],[10,"IntoVec",5693],[8,"SchemaRef",5106],[6,"IndexOrder",4352,6007],[5,"StructArray",6008],[8,"RecordBatch",6009],[5,"ScalarColumn",3707,6010],[6,"BitRepr",5130,5939],[8,"SeriesPhysIter",5130,6011],[5,"UnpivotArgsIR",3941],[5,"GroupsIdx",3969,5912],[8,"IdxVec",6012],[6,"GroupByMethod",3969],[5,"SlicedGroups",3969,5912],[5,"GroupsProxyParIter",3969,5912],[10,"UnindexedConsumer",6013],[6,"GroupsIndicator",3969,5912],[8,"IdxItem",3969,5912],[10,"IntoGroupsProxy",3969,6014],[5,"Copied",6015],[5,"Zip",6016],[5,"GroupsProxyIter",3969,5912],[8,"GroupsSlice",3969,5912],[1,"array"],[6,"RollingFnParams",4352,6017],[10,"IsFloat",6018],[10,"NativeType",6019],[10,"AggList",4208,6020],[10,"TakeExtremum",4208],[10,"PhysicalAggExpr",4221],[6,"AnyValueBuffer",4224,6021],[6,"AnyValueBufferTrusted",4224,6021],[5,"IdHasher",4322,6022],[10,"VecHash",4322,6023],[10,"Allocator",6024],[5,"BorrowedFd",6025],[10,"AsFd",6025],[10,"AsRawFd",6026],[5,"Path",6027],[5,"OsStr",6028],[20,"MaybeUninit",6029],[10,"NumOpsDispatchChecked",4352,5924],[5,"ChunkId",4352,5935],[5,"RollingVarParams",4352,6017],[5,"RollingQuantileParams",4352,6017],[6,"NonExistent",4352,6030],[10,"Ord",5994],[10,"Default",6031],[5,"CStr",6032],[5,"Weak",5945],[10,"PartialEq",5994],[10,"Scalar",6033],[5,"Error",6034],[5,"TryReserveError",6035],[5,"Utf8Error",6036],[6,"Error",6037],[5,"CString",6038],[10,"ToOwned",5986],[1,"never"],[5,"OsString",6028],[5,"PathBuf",6027],[10,"FromData",4987,6039],[5,"Buffer",6040],[10,"FromDataUtf8",4987,6039],[10,"FromDataBinary",4987,6039],[5,"ListArray",6041],[6,"Ambiguous",4352,6030],[10,"NamedFromOwned",4352,6042],[10,"PartialOrd",5994],[10,"Hash",5968],[10,"SeriesTrait",5130,5939],[10,"CloneToUninit",5962],[10,"ChunkAggSeries",4352,6043],[10,"QuantileAggSeries",4352,6044],[10,"IndexToUsize",4352,6045],[10,"NamedFrom",4352,6042],[5,"Pin",6046],[5,"Request",5980],[5,"BorrowedCursor",6047],[5,"IoSliceMut",6048],[6,"SeekFrom",6048],[10,"VarAggSeries",4352,6049],[5,"AllocError",6024],[5,"BTreeMap",6050],[5,"Arguments",5929],[5,"IoSlice",6048],[5,"AnonymousBuilder",4993,6051],[5,"Offsets",5978],[5,"MutableNullArray",5016,6052],[5,"MutableBitmap",6053],[5,"Utf8Array",6054],[1,"i16"],[1,"u16"],[1,"i8"],[5,"Schema",6055],[10,"SchemaExt",5106],[17,"DataType"],[10,"SchemaNamesAndDtypes",5106],[8,"Metadata",5975],[5,"SeriesIter",5130,6011],[5,"Rc",6056],[10,"LhsNumOps",5608,5911],[10,"NumOpsDispatch",5608,5911],[6,"NumericListOp",5608,6057],[6,"NullBehavior",5667],[5,"SuperTypeFlags",5693,6058],[5,"SuperTypeOptions",5693,6058],[10,"Container",5693],[5,"TrustMyLength",5693,5933],[10,"CustomIterTools",5693,6059],[10,"FromIteratorReversed",6060],[10,"FromTrustedLenIterator",5693,6059],[5,"Wrap",5693],[5,"Repeat",6061],[5,"Take",6062],[8,"FillNullLimit",1243],[10,"InitHashMaps",1543],[10,"InitHashMaps2",1543],[5,"TrueT",1543],[15,"IO",3373],[15,"Context",3373],[15,"Count",4205],[15,"Slice",4206],[8,"QuantileInterpolOptions",4352],[10,"ListFromIter",4352],[10,"Utf8FromIter",5060],[10,"BinaryFromIter",5060]],"r":[[0,6022],[4,6002],[13,6002],[16,6002],[32,6002],[450,5956],[478,5957],[479,5957],[480,5959],[483,5960],[484,5961],[485,5957],[586,5963],[587,5963],[588,5966],[589,5964],[591,5967],[592,5965],[593,5966],[832,5944],[838,5971],[839,5970],[843,5943],[844,5922],[1160,6063],[1452,5984],[1460,5984],[1544,5934],[1546,5987],[1547,5987],[1548,5987],[1549,5975],[1551,5919],[1567,5989],[1570,5989],[1571,6000],[1572,5990],[1573,6001],[1576,5919],[1577,5919],[1578,5919],[1579,5919],[1590,5937],[1593,5993],[1602,5947],[1603,5947],[1618,5934],[1620,5990],[1624,5921],[1625,6045],[1626,5921],[1627,5921],[1629,5950],[1630,5921],[1655,5999],[1669,5991],[1670,5991],[1688,5934],[1692,5950],[1693,5950],[1694,5921],[1695,5950],[1696,5950],[1697,5950],[1698,5915],[1704,5993],[1705,6001],[1708,5979],[1720,5992],[1721,5919],[1748,5919],[1953,5990],[1970,5991],[2084,5919],[2216,5991],[2624,5990],[2625,5990],[2639,5919],[2735,5989],[2774,5989],[3062,5989],[3063,5989],[3064,6000],[3065,5990],[3066,6001],[3068,5990],[3072,6001],[3089,5990],[3157,5990],[3158,5990],[3176,5989],[3180,5989],[3205,6001],[3210,6001],[3259,6002],[3265,6002],[3268,6002],[3276,6002],[3278,6003],[3296,6001],[3301,6001],[3302,6002],[3303,6002],[3304,6002],[3305,6002],[3312,5910],[3319,5910],[3320,5910],[3321,6004],[3335,5910],[3343,5910],[3350,6004],[3355,5910],[3357,5910],[3358,5910],[3359,5910],[3360,5910],[3361,6004],[3362,5910],[3377,6064],[3378,6064],[3379,6064],[3380,4322],[3710,6010],[3969,5912],[3975,5912],[3976,5912],[3977,5912],[3978,5912],[3979,5912],[3980,5912],[3983,5912],[3985,6014],[3997,5912],[4208,6020],[4226,6021],[4227,6021],[4321,6065],[4322,6022],[4323,6022],[4324,6023],[4327,6023],[4328,6023],[4352,6030],[4353,5945],[4354,5956],[4355,5987],[4356,5925],[4358,6005],[4359,5957],[4360,5959],[4362,5989],[4363,5989],[4364,6000],[4365,5990],[4366,6001],[4367,6043],[4368,5935],[4369,40],[4370,478],[4371,768],[4372,768],[4373,3707],[4377,3418],[4386,6039],[4387,6039],[4388,6039],[4390,5990],[4394,6045],[4395,5935],[4396,6007],[4397,6045],[4398,3707],[4399,6006],[4400,5693],[4402,6066],[4403,6066],[4404,6066],[4407,5911],[4410,5966],[4411,5964],[4412,586],[4413,6067],[4414,5965],[4415,5966],[4421,6042],[4422,6042],[4425,478],[4427,6030],[4430,5935],[4431,5935],[4432,5911],[4433,5924],[4437,5915],[4438,5910],[4439,788],[4440,1113],[4441,5910],[4442,5961],[4444,6044],[4445,5948],[4446,5948],[4449,6001],[4450,6017],[4451,5949],[4452,6017],[4453,6017],[4456,5065],[4459,5130],[4460,5939],[4462,5984],[4463,6002],[4465,5957],[4467,3418],[4468,3941],[4470,6049],[4471,6023],[4526,5990],[4577,6067],[4578,0],[4591,6067],[4623,0],[4771,6045],[4816,6067],[4818,5990],[4819,5990],[4846,6067],[4853,5910],[4854,5910],[4855,5910],[4856,5910],[4868,5989],[4870,6067],[4876,5989],[4957,6067],[4987,6039],[4988,6039],[4989,6039],[4993,6051],[5016,6052],[5047,6001],[5052,6001],[5053,5984],[5056,6002],[5057,6002],[5058,6002],[5059,6002],[5060,6068],[5061,6068],[5132,5939],[5133,1243],[5136,6006],[5137,5939],[5138,5939],[5143,6011],[5144,6011],[5145,5939],[5611,5911],[5613,5911],[5614,5911],[5615,6057],[5626,5911],[5659,5924],[5660,5924],[5696,6059],[5697,6059],[5698,6059],[5701,6058],[5702,6058],[5703,5933],[5718,6069],[5719,6069],[5779,6070],[5780,6058],[5820,6058],[5821,6058],[5823,6071],[5851,6058],[5852,6058],[5884,6058],[5901,6071]],"b":[[50,"impl-Add-for-%26ChunkedArray%3CT%3E"],[51,"impl-Add-for-ChunkedArray%3CT%3E"],[52,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[53,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[66,"impl-ChunkedArray%3CFloat32Type%3E"],[67,"impl-ChunkedArray%3CFloat64Type%3E"],[72,"impl-ChunkedArray%3CBinaryType%3E"],[73,"impl-ChunkedArray%3CStringType%3E"],[74,"impl-ChunkedArray%3CT%3E"],[103,"impl-ChunkedArray%3CT%3E"],[104,"impl-Container-for-ChunkedArray%3CT%3E"],[124,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[125,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[126,"impl-Div-for-%26ChunkedArray%3CT%3E"],[127,"impl-Div-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[135,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[136,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[137,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[144,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[145,"impl-Debug-for-ChunkedArray%3CT%3E"],[155,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[156,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[157,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[159,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[160,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[190,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[191,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[226,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[227,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[228,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[229,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[230,"impl-Container-for-ChunkedArray%3CT%3E"],[231,"impl-ChunkedArray%3CT%3E"],[236,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[237,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[238,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[239,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[240,"impl-ChunkedArray%3CBooleanType%3E"],[241,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[244,"impl-ChunkedArray%3CBooleanType%3E"],[245,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[255,"impl-ChunkedArray%3CBooleanType%3E"],[256,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[260,"impl-ChunkedArray%3CBooleanType%3E"],[261,"impl-ChunkedArray%3CT%3E"],[262,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[263,"impl-Mul-for-ChunkedArray%3CT%3E"],[264,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[265,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[270,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[271,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[272,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[273,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[274,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[275,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[276,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[277,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[278,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[279,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[280,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[281,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[282,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[283,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[284,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[285,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[286,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[287,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[288,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[289,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[290,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[291,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[292,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[293,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[301,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[302,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[303,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[304,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[310,"impl-ChunkedArray%3CStringType%3E"],[311,"impl-ChunkedArray%3CListType%3E"],[312,"impl-ChunkedArray%3CListType%3E"],[313,"impl-ChunkedArray%3CStringType%3E"],[326,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[327,"impl-Rem-for-ChunkedArray%3CT%3E"],[328,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[329,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[348,"impl-ChunkedArray%3CT%3E"],[349,"impl-Container-for-ChunkedArray%3CT%3E"],[352,"impl-Container-for-ChunkedArray%3CT%3E"],[353,"impl-ChunkedArray%3CT%3E"],[356,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[357,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[358,"impl-Sub-for-ChunkedArray%3CT%3E"],[359,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[361,"impl-ChunkedArray%3CBooleanType%3E"],[362,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[365,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[366,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[367,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[368,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[374,"impl-ChunkedArray%3CListType%3E"],[375,"impl-ChunkedArray%3CT%3E"],[380,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[381,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[382,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[383,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[384,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[385,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[443,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[444,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[445,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[446,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[447,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[534,"impl-BinViewChunkedBuilder%3Cstr%3E"],[535,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[865,"impl-MetadataProperties"],[866,"impl-Flags-for-MetadataProperties"],[867,"impl-Flags-for-MetadataFlags"],[868,"impl-MetadataFlags"],[932,"impl-Metadata%3CT%3E"],[933,"impl-MetadataTrait-for-Metadata%3CT%3E"],[958,"impl-Debug-for-MetadataProperties"],[959,"impl-Binary-for-MetadataProperties"],[960,"impl-LowerHex-for-MetadataProperties"],[961,"impl-Octal-for-MetadataProperties"],[962,"impl-UpperHex-for-MetadataProperties"],[963,"impl-Binary-for-MetadataFlags"],[964,"impl-LowerHex-for-MetadataFlags"],[965,"impl-UpperHex-for-MetadataFlags"],[966,"impl-Debug-for-MetadataFlags"],[967,"impl-Octal-for-MetadataFlags"],[977,"impl-MetadataProperties"],[978,"impl-Flags-for-MetadataProperties"],[979,"impl-Flags-for-MetadataFlags"],[980,"impl-MetadataFlags"],[991,"impl-MetadataTrait-for-Metadata%3CT%3E"],[992,"impl-Metadata%3CT%3E"],[1035,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1036,"impl-Metadata%3CT%3E"],[1040,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1041,"impl-Metadata%3CT%3E"],[1119,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1120,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1155,"impl-ObjectArray%3CT%3E"],[1156,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1171,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1172,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1182,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1183,"impl-ObjectArray%3CT%3E"],[1184,"impl-ObjectArray%3CT%3E"],[1185,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1187,"impl-Array-for-ObjectArray%3CT%3E"],[1188,"impl-ObjectArray%3CT%3E"],[1191,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1192,"impl-ObjectChunkedBuilder%3CT%3E"],[1194,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1195,"impl-ObjectChunkedBuilder%3CT%3E"],[1789,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1790,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1791,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1792,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1793,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1794,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1795,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1796,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1872,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1873,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1874,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1875,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1876,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1877,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[2219,"impl-PartialEq-for-DataType"],[2220,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2231,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2232,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2233,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2234,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2237,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2238,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2239,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2240,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2274,"impl-Debug-for-AnyValue%3C\'a%3E"],[2275,"impl-Display-for-AnyValue%3C\'_%3E"],[2277,"impl-Debug-for-DataType"],[2278,"impl-Display-for-DataType"],[2281,"impl-Debug-for-TimeUnit"],[2282,"impl-Display-for-TimeUnit"],[2284,"impl-Display-for-ReshapeDimension"],[2285,"impl-Debug-for-ReshapeDimension"],[2296,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2297,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2298,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2300,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2301,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2304,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2305,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2306,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2308,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2309,"impl-From%3C%26Field%3E-for-Field"],[2336,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2337,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2340,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2341,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2342,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2344,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2345,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2346,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2347,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2353,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2354,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2356,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2357,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2358,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2359,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2360,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2361,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2368,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2369,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2370,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2371,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2372,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2373,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2465,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2466,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2467,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2468,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2470,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2471,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2472,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2473,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2615,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2616,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2617,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2618,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2620,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2621,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2622,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2623,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2662,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2663,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2664,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2665,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2666,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2667,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2668,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2669,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2670,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2671,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2687,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2688,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2691,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2692,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2693,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2694,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2697,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2698,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2699,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2700,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2787,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CListType%3E"],[2788,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CListType%3E"],[2789,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2790,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2791,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2792,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[3109,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3110,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3111,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3112,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3113,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3114,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3130,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3131,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3132,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3133,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3134,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3135,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3151,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3152,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3153,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3154,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3155,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3156,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3167,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3168,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3169,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3170,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3171,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3172,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3345,"impl-Debug-for-ErrString"],[3346,"impl-Display-for-ErrString"],[3443,"impl-Add%3C%26Series%3E-for-DataFrame"],[3444,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3445,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3490,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3491,"impl-Div%3C%26Series%3E-for-DataFrame"],[3492,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3523,"impl-Debug-for-DataFrame"],[3524,"impl-Display-for-DataFrame"],[3530,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3531,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3557,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3558,"impl-Index%3C%26str%3E-for-DataFrame"],[3559,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3560,"impl-Index%3Cusize%3E-for-DataFrame"],[3561,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3562,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3563,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3564,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3582,"impl-DataFrame"],[3583,"impl-Container-for-DataFrame"],[3590,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3591,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3592,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3593,"impl-DataFrame"],[3594,"impl-Container-for-DataFrame"],[3613,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3614,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3615,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3643,"impl-DataFrame"],[3644,"impl-Container-for-DataFrame"],[3648,"impl-DataFrame"],[3649,"impl-Container-for-DataFrame"],[3652,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3653,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3654,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3674,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3676,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CField%3E)%3E-for-DataFrame"],[3714,"impl-Add-for-%26Column"],[3715,"impl-Add%3CT%3E-for-Column"],[3716,"impl-Add%3CT%3E-for-%26Column"],[3717,"impl-Add-for-Column"],[3740,"impl-BitAnd-for-%26Column"],[3741,"impl-BitAnd-for-Column"],[3742,"impl-Column"],[3743,"impl-BitOr-for-Column"],[3744,"impl-BitOr-for-%26Column"],[3745,"impl-BitXor-for-Column"],[3746,"impl-BitXor-for-%26Column"],[3772,"impl-Div-for-Column"],[3773,"impl-Div%3CT%3E-for-%26Column"],[3774,"impl-Div-for-%26Column"],[3775,"impl-Div%3CT%3E-for-Column"],[3799,"impl-From%3CSeries%3E-for-Column"],[3800,"impl-From%3CScalarColumn%3E-for-Column"],[3846,"impl-Mul%3CT%3E-for-Column"],[3847,"impl-Mul-for-%26Column"],[3848,"impl-Mul%3CT%3E-for-%26Column"],[3849,"impl-Mul-for-Column"],[3864,"impl-Rem%3CT%3E-for-Column"],[3865,"impl-Rem-for-Column"],[3866,"impl-Rem-for-%26Column"],[3867,"impl-Rem%3CT%3E-for-%26Column"],[3886,"impl-Sub%3CT%3E-for-%26Column"],[3887,"impl-Sub%3CT%3E-for-Column"],[3888,"impl-Sub-for-Column"],[3889,"impl-Sub-for-%26Column"],[4083,"impl-Display-for-GroupByMethod"],[4084,"impl-Debug-for-GroupByMethod"],[4090,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4091,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4125,"impl-IntoIterator-for-GroupsIdx"],[4126,"impl-IntoIterator-for-%26GroupsIdx"],[4128,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4129,"impl-IntoParallelIterator-for-GroupsIdx"],[4488,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[4489,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[4490,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[4491,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[4494,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4495,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4583,"impl-Default-for-Arc%3Cstr%3E"],[4584,"impl-Default-for-Arc%3CT%3E"],[4585,"impl-Default-for-Arc%3CCStr%3E"],[4586,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4646,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4647,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4648,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4674,"impl-Debug-for-PolarsError"],[4675,"impl-Display-for-PolarsError"],[4676,"impl-Display-for-PlSmallStr"],[4677,"impl-Debug-for-PlSmallStr"],[4680,"impl-Pointer-for-Arc%3CT,+A%3E"],[4681,"impl-Display-for-Arc%3CT,+A%3E"],[4682,"impl-Debug-for-Arc%3CT,+A%3E"],[4692,"impl-From%3CError%3E-for-PolarsError"],[4693,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4694,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4696,"impl-From%3CError%3E-for-PolarsError"],[4697,"impl-From%3CCompactString%3E-for-PlSmallStr"],[4699,"impl-From%3CString%3E-for-PlSmallStr"],[4700,"impl-From%3C%26str%3E-for-PlSmallStr"],[4701,"impl-From%3C%26String%3E-for-PlSmallStr"],[4705,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4706,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4707,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4708,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4709,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4712,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4713,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4714,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4715,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4716,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4717,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4718,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4719,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4720,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4721,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[4722,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4735,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[4736,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[4737,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[4738,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[4739,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[4740,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[4741,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[4742,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[5079,"impl-From%3Ci16%3E-for-Scalar"],[5080,"impl-From%3Ci32%3E-for-Scalar"],[5081,"impl-From%3Ci64%3E-for-Scalar"],[5082,"impl-From%3Cu8%3E-for-Scalar"],[5083,"impl-From%3Cu16%3E-for-Scalar"],[5084,"impl-From%3Cu32%3E-for-Scalar"],[5085,"impl-From%3Cu64%3E-for-Scalar"],[5086,"impl-From%3Cf32%3E-for-Scalar"],[5087,"impl-From%3Cf64%3E-for-Scalar"],[5088,"impl-From%3Ci8%3E-for-Scalar"],[5153,"impl-Add%3CT%3E-for-Series"],[5154,"impl-Add-for-Series"],[5155,"impl-Add%3CT%3E-for-%26Series"],[5156,"impl-Add-for-%26Series"],[5230,"impl-Div-for-%26Series"],[5231,"impl-Div%3CT%3E-for-%26Series"],[5232,"impl-Div%3CT%3E-for-Series"],[5233,"impl-Div-for-Series"],[5245,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5246,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5247,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5248,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5249,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5250,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5268,"impl-Display-for-Series"],[5269,"impl-Debug-for-Series"],[5281,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[5282,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[5283,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[5284,"impl-FromIterator%3Cu64%3E-for-Series"],[5285,"impl-FromIterator%3C%26u64%3E-for-Series"],[5286,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[5287,"impl-FromIterator%3CString%3E-for-Series"],[5288,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[5289,"impl-FromIterator%3Ci32%3E-for-Series"],[5290,"impl-FromIterator%3C%26i32%3E-for-Series"],[5291,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[5292,"impl-FromIterator%3C%26bool%3E-for-Series"],[5293,"impl-FromIterator%3Cbool%3E-for-Series"],[5294,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[5295,"impl-FromIterator%3Ci64%3E-for-Series"],[5296,"impl-FromIterator%3C%26i64%3E-for-Series"],[5297,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[5298,"impl-FromIterator%3C%26f64%3E-for-Series"],[5299,"impl-FromIterator%3C%26f32%3E-for-Series"],[5300,"impl-FromIterator%3C%26str%3E-for-Series"],[5301,"impl-FromIterator%3Cu32%3E-for-Series"],[5302,"impl-FromIterator%3C%26u32%3E-for-Series"],[5303,"impl-FromIterator%3Cf64%3E-for-Series"],[5304,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[5305,"impl-FromIterator%3Cf32%3E-for-Series"],[5306,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[5307,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[5308,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[5309,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[5310,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[5311,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[5312,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[5327,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5328,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5329,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5330,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5331,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5332,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5379,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5380,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5381,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5382,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5383,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5384,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5398,"impl-Mul-for-Series"],[5399,"impl-Mul-for-%26Series"],[5400,"impl-Mul%3CT%3E-for-Series"],[5401,"impl-Mul%3CT%3E-for-%26Series"],[5408,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5409,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5410,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5411,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5412,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5413,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5414,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5415,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5416,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5417,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5418,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5419,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5420,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5421,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5422,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5423,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5424,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5425,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5426,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5427,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5428,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5429,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5430,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5431,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5432,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5433,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5434,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5435,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5436,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5437,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5438,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5439,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5440,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5441,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5442,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5443,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5444,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5449,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5450,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5451,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5452,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5453,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5454,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5467,"impl-Rem%3CT%3E-for-Series"],[5468,"impl-Rem-for-%26Series"],[5469,"impl-Rem%3CT%3E-for-%26Series"],[5501,"impl-Sub-for-Series"],[5502,"impl-Sub-for-%26Series"],[5503,"impl-Sub%3CT%3E-for-%26Series"],[5504,"impl-Sub%3CT%3E-for-Series"],[5533,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5534,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5535,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5537,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5726,"impl-Flags-for-SuperTypeFlags"],[5727,"impl-SuperTypeFlags"],[5794,"impl-Binary-for-SuperTypeFlags"],[5795,"impl-Octal-for-SuperTypeFlags"],[5796,"impl-LowerHex-for-SuperTypeFlags"],[5797,"impl-UpperHex-for-SuperTypeFlags"],[5798,"impl-Debug-for-SuperTypeFlags"],[5807,"impl-SuperTypeFlags"],[5808,"impl-Flags-for-SuperTypeFlags"],[5810,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5811,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5814,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5815,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5818,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5819,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAA0AEAAAAKYP7w8qEC0QLhAvEDAQMRA2EDkQPhA/EGUQXhE=","e":"OzAAAAEAAIgRPAIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADQBAAAAAQwABAEYABQBOAAEAUQAAAFMAAABVAAoAYQAAAGQAAwBpAAAAbAADAHEAAgB4AA0AhwADAIwAAgCQAAUAmAABAJwABQCkAAMAqgADAK8ABQC2AAEAuwAAAL0AAwDDAAIAygAFANEAAwDYAAIA3AACAOAABwDtAA0AAAEEAAcBBgAPARsALgEDADMBAgA3AQQAPQEBAEMBAgBHAQQATQEAAFIBBQBaAQEAXgEDAGMBCQBzAQEAeQEAAH0BCACHAQgAkQEAAJMBBQCbAQAAnQEjAMIBKQDwAQIA9gEnACQCBQAuAgAAMAImAFkCTACtAgwAwQIkAOkCDQD4AgEA+wIZABgDCQAkAwEAKAMBACsDFQBCAwkATQMKAGMDAQBqAw0AeQMQAI4DEgCjAwAApQMJALEDAwC3AwEAuwMNANMDAQDcAwcA5QMHAPoDAQD+AwAAAQQDAAkEBQAQBAQAHAQLAC8EBAA2BA0ARgQGAFAECABaBAEAXgQXAHcEBwCABAAAgwQAAIUEAgCLBBAAnQQAAJ8EAAChBAMApgQCAKoEAQCtBAcAtgQBALkEBQDBBAEAxAQAAMYEAQDJBAMAzgQEANQEAgDYBAMA3gQAAOEEAADqBAAA7wQAAPIEAQD3BAEA+gQAAP0EAQAIBQEAEgUCABgFBgAhBQIAJgUBACkFAAArBQEAMQUBADQFAgA8BQEAQgUAAEUFAQBJBQAASwUAAE0FAABPBQAAVAUEAFsFAQBeBQcAZwUBAGoFAABuBQAAcAUDAHUFAQB4BQUAhAUeAKQFAQCoBQQArgUDALgFEQDMBQoA2QUEAOoFCQAABg0AEAYCABQGBQAcBgAAHgYOADAGAAAyBgAANwYBADoGAQA9BgMAQgYAAEQGAABHBgAASgYAAEwGAQBPBgAAUQYCAFUGDQBkBgAAZgYBAGkGAABrBgEAbgYAAHAGAQBzBgAAdQYBAHgGAwB/BgAAgwYBAIcGAACKBgAAjAYAAI4GAwCTBgAAlgYIAKAGAgClBgMAqgYAAKwGAgCxBgAAswYAALgGAgC8BgEAvwYAAMEGAQDEBgAAxgYBAMkGAADLBgEAzgYAANAGAQDTBgAA1QYAANgGPgAdBwQAJAcJAC8HBAA1BwMAOgcEAEAHAABCB2MApwd0AB0IhgClCAAAqAhJAPkIAgD9CAEAAQkCAAUJAQAJCQAAIQkBACQJFwBACSUAaAkGAHEJHgCTCQEAmAlCAN0JAAADCgsAEQoAABMKAgAXCgEAGgoAAB8KBwAoCgEALAoCADEKBAA3Cg0ARgoPAFcKCgBjCg0AcgojAJcKCAChChwAvwoWANcKDwDsCgAA7goAAPAKAAD0Ch8AFgsFAB0LVgB1CzAApwtOAPcLBAD9CwEAAAwCAAQMBAAKDCQANwwCADsMCQBJDAQATwwXAGkMAQBsDAQAcgwNAIEMBQCIDAAAigwXAKMMAQCpDAIArgwBALIMCQC9DAQAwwwBAMgMAADKDAIAzgwKANoMAADcDAUA4wwAAOUMAQDrDAQA8QwEAPcMEAAJDQoAFg0DABwNBQAjDSUASg0FAFENCQBeDQAAYQ0LAG8NAwB0DQMAfQ0LAIoNCQCXDRIAqw0AALQNAQC4DQEAuw0AAL0NAADCDQMA1A0AANsNAADeDQEA5g0MAPkNAQAADgAAAg4BAAcOAgALDgAAEw4BABYOAAAeDgIAJg4AACkOAAAwDgAAOg4BAD0OAQBCDgUATw4EAFcOBgBgDgoAbA4AAHEOBAB+DgAAgA4GAJIOAgCXDgEAmg4QAK0OGgDKDgsA2A4BANsOBgDlDgkA8Q4DAPYOCAAADwIABQ8NABUPCgAhDxMANw8AADoPAgA+Dx4AXg8HAGcPDQB2DwIAeg8KAIYPAQCJDwMAjg8DAJMPCQCeDwcApw8BAKoPHADIDyYA8A8GAPsPAQD/DwAAAhACAAcQAAAMEAcAHBANACsQAQAyEAMANxABADsQAgBAEAAAQhAgAGYQDAB1EAUAfBAHAIUQFgCeEA4ArhANAL0QAQDBEAMAyBAFANIQDgDjEA0A8hAAAPQQAgD5EAgAAxECAAgRBwAREQ8AIhEDACcRGQBCERAAVBEBAFcRFwBxERMAhhEAAIgRBgCRER8AsxEDALgRIADaEQcA4xEBAOcRAADsESQAFBIDABkSCQAlEgEAKBIrAFUSAgBZEgEAXBICAGASAABoEgAAchIAAH0SAACAEgcAjhIAAJESAwCZEgAAmxIGAKQSEADDEgAAxxIDAMwSAwDREgAA0xIBANoSAADvEgMA9hIEAP0SAAAAEwcAChMAAAwTAQAREzEASxMCAE8TDQBeEwAAYBMNAHITDQCCEwYAihMAAIwTHQCrEwAArRMLALoTAAC8EwEAxRMcAOMTAADmExcA/xMAAAEUAgAFFAAABxQAAAkUAAALFAUAEhQEABgUBQAiFAQALhQAADQUAgA8FAUAQxQLAFIUAwBXFAAAWxQCAF8UAwBlFBIAfBQBAH8UAwCGFAEAlBQDAJsUAACfFAEAohQgAMYUAADIFAEA0RQBANQUAQDXFAAA3RQBAOAUAwDoFAQA9RQDAPoUAAD+FAAABBUAAAYVAAAIFQEADxUAABcVAwAdFQAAIRUFACgVHQBIFQMATRUBAFIVAABVFQAAWhUEAGEVAABjFQAAZxUCAG4VAQBxFQAAcxUBAHYVAAB8FQAAfhUDAI8VAQCSFQEAmxUHAKcVBACtFQEAshUBALgVAwDDFQAAyBUDAM0VAADSFQsA3xUAAOEVAADjFQQA6RUeAAkWAAALFhIAIRYCACYWDgA2FgEAORYEAEAWAwBGFggAURYAAFUWAQBZFgEAXxYAAGMWEwB4FgIAfxYOAI8WBACXFggAoRYHAKwWAACxFgAAsxYBALYWAgC6FgMAvxYJANEWBADZFgAA2xYEAOIWAQDlFgEA6RYCAO4WAADzFgIA+BYEAP4WCQAJFwQADxcEAA=="}],["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFIFNNNNNNNOHNNNCNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPFPGPFPPFKPGGPPNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNONNNNNNNNNNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNOOHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPKPGNNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNOOOOOOONONNNNNNNNONNPFPPGFFFPPNNCNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNONNNNNNNNNNNNNNNNNNHNNNNNNNONNNNNNNNNNNNNNNNNNNNPPPGNNHNNNHNNNNHNHNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSCCHHHCKPGGPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPNNNNNNNNNHNNNNPPPGNNNNNNNNNHNNNNN","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","","async_glob","avro","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cloud","csv","default","deref","","deref_mut","","deserialize","","drop","","enabled","eq","","equivalent","","","","","","file_cache","finish","","fmt","","from","","hash","","hive","hive_start_idx","init","","into","","ipc","json","mmap","name","ndjson","new","","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","","to_owned","","try_from","","try_into","","try_parse_dates","type_id","","utils","vzip","","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","","Snappy","","__clone_box","arrow_schema","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","drop","","","eq","equivalent","","","finish","","fmt","from","","","hash","init","","","into","","","new","","schema","set_rechunk","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","ObjectStorePath","PolarsObjectStore","__clone_box","borrow","","","borrow_mut","","","bucket","build_object_store","clone","clone_into","clone_to_uninit","credential_provider","default","deref","","","deref_mut","","","download","drop","","","","eq","execute","expansion","flush","fmt","","from","","","from_url","get","get_range","get_ranges","glob","head","init","","","into","","","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","write","write_varint","AccessKey","Aws","AwsCredential","Azure","AzureCredential","BearerToken","CredentialProviderFunction","Function","Gcp","GcpCredential","IntoCredentialProvider","None","ObjectStoreCredential","PlCredentialProvider","Python","SASToken","__clone_box","","bearer","borrow","","","","","","borrow_mut","","","","","","clone","","clone_into","","clone_to_uninit","","deref","","","","","","deref_mut","","","","","","deserialize","drop","","","","","","eq","","","","","equivalent","","","","","","","","","","","","","","","fmt","","","","","from","","","","","","","","from_func","from_python_func","from_python_func_object","hash","","init","","","","","","into","","","","","","into_aws_provider","","","into_azure_provider","","","into_gcp_provider","","","key_id","secret_key","serialize","to_owned","","token","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","","Checksum","Client","","","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","","Encryption","Endpoint","","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","","Token","","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","","","","as_ref","","","borrow","","","","","borrow_mut","","","","","build_aws","build_azure","build_gcp","build_http","clone","","","","clone_into","","","","clone_to_uninit","","","","default","deref","","","","","deref_mut","","","","","deserialize","","","","drop","","","","","eq","","","","","equivalent","","","","","","","","","","","","file_cache_ttl","fmt","","","","from","","","","","from_str","","","","from_untyped_config","hash","","","","init","","","","","into","","","","","max_retries","serialize","","","","to_owned","","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_aws","with_azure","with_credential_provider","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","","","","","_with_predicate","batched","batched_borrowed","borrow","","","","","","","","borrow_mut","","","","","","","","buffer","chunk_size","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","columns","comment_prefix","count_rows","count_rows_from_slice","decimal_comma","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","drop","","","","","","","","dtype_overwrite","encoding","eol_char","eq","","","","","equivalent","","","","","","","","","","","","","","","fields_to_cast","finish","fmt","","","","","from","","","","","","","","","get_parse_options","has_header","hash","","","","","ignore_errors","infer_file_schema","infer_schema_length","init","","","","","","","","into","","","","","","","","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","schema","schema_inference","schema_overwrite","separator","serialize","","","","","skip_rows","skip_rows_after_header","to_owned","","","","","truncate_ragged_lines","try_from","","","","","","","","try_into","","","","","","","","try_into_reader_with_file_path","try_parse_dates","type_id","","","","","","","","update_with_inference_result","vzip","","","","","","","","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","","","batch_size","batched","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","date_format","datetime_format","default","","","deref","","","","","deref_mut","","","","","deserialize","","","drop","","","","","eq","","","equivalent","","","","","","","","","finish","","float_precision","float_scientific","fmt","","","from","","","","","hash","","","include_bom","","include_header","","init","","","","","into","","","","","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","","","serialize_options","time_format","to_owned","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","","","","arrow_schema","batched","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","compression","count_rows","data","default","","","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","deserialize","","","drop","","","","","","","","","","","eq","","","equivalent","","","","","","finish","","","","","finish_with_scan_ops","fmt","","","from","","","","","","","","","","","from_uri","hash","","","init","","","","","","","","","","","into","","","","","","","","","","","maintain_order","memory_mapped","metadata","new","","","","","schema","","serialize","","","set_rechunk","","to_owned","","","","to_writer","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","with_columns","","with_compat_level","","with_compression","","","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","","with_predicate","with_projection","","","with_row_index","","","with_row_limit","write_batch","write_df_to_file","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","default","deref","","","","","deref_mut","","","","","deserialize","drop","","","","","eq","equivalent","","","finish","","fmt","from","","","","","hash","infer_schema_len","init","","","","","into","","","","","maintain_order","new","","","remove_bom","serialize","set_rechunk","to_owned","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_ignore_errors","with_json_format","","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","","deref_mut","drop","from","","init","into","to_bytes","to_file","to_memslice","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","","arr_from_iter_with_dtype","","as_any","as_any_mut","borrow","","borrow_mut","","boxed","check_bound","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","dtype","eq","","fields","finish","fmt","from","","","","from_path","full_null","get_fields","infer_schema_len","init","","into","","into_data","into_iter","iter","len","low_memory","new","","new_empty","new_null","propagate_nulls","set_validity","slice","","slice_typed","slice_typed_unchecked","slice_unchecked","","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","","try_arr_from_iter_with_dtype","","try_from","","try_into","","try_new","type_id","","validity","","values","values_iter","vzip","","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","","with_validity_typed","metadata","read","write","FileMetadata","FileMetadataRef","ParquetStatistics","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","","deref_mut","","deserialize","distinct_count","drop","","eq","fmt","","from","","","init","","into","","key_value_metadata","","max_row_group_height","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","","try_from_thrift","try_into","","type_id","","version","vzip","","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","Prefiltered","RowGroups","__clone_box","","_internal","batched","","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","create_sorting_map","default","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","eq","","equivalent","","","","","","finish","","finishes_this_batch","fmt","","from","","","","","from_uri","get_metadata","","hash","","init","","","","","into","","","","","is_finished","iter","low_memory","materialize_empty_df","new","","next_batches","num_rows","","parallel","read_parallel","","schema","","","","serialize","","set_low_memory","set_metadata","set_rechunk","","to_owned","","try_from","","","","","try_into","","","","","try_set_sorted_flag","type_id","","","","","use_statistics","","","vzip","","","","","with_arrow_schema_projection","","with_columns","with_hive_partition_columns","","with_include_file_path","","with_predicate","","with_projection","","with_row_index","","with_slice","","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","","","","","","batched","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","compression","data_page_size","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","","distinct_count","drop","","","","","","","","empty","encode_and_compress","eq","","","","","","equivalent","","","","","","","","","","","","","","","","","","finish","","fmt","","","","","","from","","","","","","","","full","get_writer","hash","","","","","","init","","","","","","","","into","","","","","","","","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","","","","","","set_parallel","statistics","to_owned","","","","","","to_writer","try_from","","","","","","","","try_into","","","","","","","","try_new","","","type_id","","","","","","","","vzip","","","","","","","","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","","apply_predicate","as_stats_evaluator","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","column_stats","deref","","deref_mut","","deserialize","","drop","","dtype","evaluate_io","field_name","fmt","","from","","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","","into","","live_variables","new","","null_count","num_rows","schema","serialize","","should_read","take_indices","to_max","to_min","to_min_max","to_owned","","try_from","","try_into","","type_id","","vzip","","with_schema","SerReader","SerWriter","cloud","finish","","new","","set_rechunk","","","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","byte_source","compression","get_reader_bytes","materialize_projection","overwrite_schema","slice","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","After","Before","Overlapping","SplitSlicePosition","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","split_slice_at_file","","try_from","try_into","type_id","vzip"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[153,"polars_io::cloud"],[228,"polars_io::cloud::credential_provider"],[373,"polars_io::cloud::options"],[561,"polars_io::csv"],[563,"polars_io::csv::read"],[822,"polars_io::csv::read::buffer"],[896,"polars_io::csv::read::buffer::Buffer"],[899,"polars_io::csv::read::schema_inference"],[926,"polars_io::csv::write"],[1071,"polars_io::file_cache"],[1092,"polars_io::ipc"],[1329,"polars_io::json"],[1427,"polars_io::mmap"],[1448,"polars_io::ndjson"],[1450,"polars_io::ndjson::core"],[1554,"polars_io::parquet"],[1557,"polars_io::parquet::metadata"],[1610,"polars_io::parquet::read"],[1756,"polars_io::parquet::read::_internal"],[1778,"polars_io::parquet::write"],[2002,"polars_io::partition"],[2003,"polars_io::path_utils"],[2010,"polars_io::pl_async"],[2032,"polars_io::predicates"],[2100,"polars_io::prelude"],[2111,"polars_io::utils"],[2122,"polars_io::utils::byte_source"],[2203,"polars_io::utils::compression"],[2221,"polars_io::utils::slice"],[2240,"dyn_clone::sealed"],[2241,"polars_io::options"],[2242,"core::result"],[2243,"serde::de"],[2244,"polars_io::shared"],[2245,"polars_core::frame"],[2246,"polars_error"],[2247,"core::fmt"],[2248,"core::hash"],[2249,"std::io"],[2250,"polars_arrow::record_batch"],[2251,"core::option"],[2252,"serde::ser"],[2253,"core::any"],[2254,"polars_io::avro::read"],[2255,"polars_arrow::datatypes::schema"],[2256,"polars_io::avro::write"],[2257,"polars_core::schema"],[2258,"alloc::string"],[2259,"alloc::vec"],[2260,"polars_io::cloud::glob"],[2261,"object_store"],[2262,"alloc::sync"],[2263,"polars_io::cloud::polars_object_store"],[2264,"object_store::path"],[2265,"tokio::io::async_write"],[2266,"core::marker"],[2267,"polars_io::cloud::adaptors"],[2268,"std::io::error"],[2269,"crossterm::command"],[2270,"url"],[2271,"bytes::bytes"],[2272,"core::ops::range"],[2273,"core::ops::function"],[2274,"polars_parquet_format::thrift::varint::decode"],[2275,"object_store::aws::credential"],[2276,"object_store::azure::credential"],[2277,"object_store::gcp::credential"],[2278,"core::future::future"],[2279,"alloc::boxed"],[2280,"core::pin"],[2281,"polars_utils::python_function"],[2282,"pyo3::instance"],[2283,"object_store::aws"],[2284,"object_store::azure"],[2285,"object_store::gcp"],[2286,"object_store::aws::builder"],[2287,"object_store::azure::builder"],[2288,"object_store::gcp::builder"],[2289,"core::convert"],[2290,"core::iter::traits::collect"],[2291,"polars_io::csv::read::reader"],[2292,"polars_io::csv::read::read_impl::batched"],[2293,"polars_io::csv::read::options"],[2294,"std::path"],[2295,"polars_utils::pl_str"],[2296,"std::fs"],[2297,"polars_core::datatypes::dtype"],[2298,"polars_core::series"],[2299,"polars_utils::aliases"],[2300,"polars_io::csv::write::writer"],[2301,"polars_io::csv::write::options"],[2302,"core::num::nonzero"],[2303,"polars_io::file_cache::entry"],[2304,"polars_io::ipc::ipc_stream"],[2305,"polars_io::ipc::write"],[2306,"polars_io::ipc::ipc_file"],[2307,"polars_io::ipc::ipc_reader_async"],[2308,"polars_arrow::io::ipc::read::file"],[2309,"polars_utils::mmap::private"],[2310,"polars_arrow::array::struct_"],[2311,"polars_arrow::array"],[2312,"polars_arrow::datatypes"],[2313,"polars_arrow::datatypes::field"],[2314,"polars_arrow::array::struct_::mutable"],[2315,"polars_arrow::array::growable::structure"],[2316,"polars_arrow::bitmap::immutable"],[2317,"polars_arrow::scalar"],[2318,"polars_arrow::array::struct_::iterator"],[2319,"polars_arrow::bitmap::utils::iterator"],[2320,"polars_arrow::bitmap::utils::zip_validity"],[2321,"polars_parquet::parquet::metadata::file_metadata"],[2322,"polars_parquet::parquet::metadata::column_order"],[2323,"polars_parquet::parquet::metadata::column_chunk_metadata"],[2324,"core::iter::traits::exact_size"],[2325,"polars_parquet::arrow::read::statistics"],[2326,"polars_parquet_format::parquet_format"],[2327,"polars_parquet::parquet::metadata::schema_descriptor"],[2328,"polars_parquet::parquet::error"],[2329,"polars_io::parquet::read::reader"],[2330,"polars_io::parquet::read::read_impl"],[2331,"polars_io::parquet::read::options"],[2332,"polars_parquet::parquet::metadata::row_metadata"],[2333,"polars_core::series::series_trait"],[2334,"polars_parquet::arrow::read::deserialize::utils::filter"],[2335,"polars_io::parquet::write::writer"],[2336,"polars_io::parquet::write::batched_writer"],[2337,"polars_parquet::arrow::write"],[2338,"polars_io::parquet::write::options"],[2339,"polars_parquet::parquet::write"],[2340,"core::iter::traits::iterator"],[2341,"polars_parquet::arrow::write::file"],[2342,"std::sync::mutex"],[2343,"tokio::runtime::task::join"],[2344,"polars_core::datatypes::field"],[2345,"avro_schema::file"],[2346,"polars_io::cloud::object_store_setup"],[2347,"polars_io::csv::read::parser"],[2348,"polars_io::file_cache::cache"],[2349,"polars_io::file_cache::utils"],[2350,"polars_io::parquet::read::utils"],[2351,"polars_io::parquet::read::predicates"],[2352,"polars_io::parquet::read::mmap"],[2353,"polars_io::utils::other"]],"i":"``````jl``1010101010``010101010010111000`AfAl323232`23232```3`10Bh4``````343434343343`43Cb````Cj0000Cd0Cl2102222102102102222210210221021021011210210210210210101````EbEjDj21020`222`0102102211020101021020222`21021021021``0101210210210210211GjAIb`0`1`Gd1``1``020GfGl32Gh251430251323232430251430251343025130251333000222555111302514300025133332430251430251Ib43043043114431541362541362541362541362IlIj1`In2J`0`21223133``2232223223300`00223332232112323233322Dh42342301423014200003042304230420301423014230423014230142333000444222030423014231420304230142301420304230423014230142301423014200000``Kn0``````KjKl2``01KfKh324Jj00KdKb24365710243657`443657436574365743``34361024365710243657436571024365743343657444333666555777424365710243655744436574`41024365710243657444344255510344434444`4343657444365731024365710243657431024365741024365744334334444344344434444434433Ll`0`00`0000000000000`00AIdAIfAIh32103210321032103321032103`210332103210321032103AIj00`Lh000000000`0000``000000000Ml```000``MhMj21Md0Mf324103243243243242232410324103243241032432433322244410223241032432413131032410324231122223243232410324103241032410324111111111110```Nb00000`0`000000000```````````O`0NjNlNn3NdNfOjOb3OlOh4Nh987:4362150987:987:987:987:733187:4362150987:4362150987:97:4362150987:97:777:::46250497:4362150987:397:4362150987:4362150987:743462154697:46987:74362150987:4362150987:4362150987:4362150987:4625215144468468468807`A@j`0```A@b1A@dA@hA@f342103333342103421033421033333203421033042103421033210`3034210342103421034210300200001Mb`0`0000000000Jn011111````AA`00000000AAh10111111001010111110101110110010111110011111111111111111111111111010110111110100000000000111``````ABlAC`1011111110101`0010010010101111000111110110101101ADh`00````00ADf1`AD`ADdADb213402134343434`402134021343402134343334442103402134121340213402134003`020213210213342221340213402134`0213421302134212212121212121AEd00`00`000`0000`0`0000`AF``0`00````0`00`AElAEn2AFbAFdAFfAEhAEj16574320165743265743265743265743255657016574320165743265743260165743260657432666555777444333222016574320165743260657432016574320165743266566165657432156574325016574320165743243201657432016574321111050``````````AGd0000000`00AGf1111`11`````AGlAGn`Jl21212121211212121212022121222221212102121121AGj233332323232322```AfAl10111`````````````AHf``0`AHd0`0AHjAHh321032222310321032103221033332AHl21402140214214321433321432143214342143AHn`00000000000`0000AI`00`000000000`00000","f":"``````{{bd}f}0``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{{b{l}}}l}{{b{b{hc}}}f{}}0{bf}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{b{b{c}}}Ad{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{{}c{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0`{bC`}0`99{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{bd}f}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00{{{b{Cj}}}Cj}{{b{b{hc}}}f{}}{bf}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{b{b{c}}}Ad{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{{}c{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00888{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}````{{bd}f}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{b{b{hc}}}f{}}{bf}`{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hc}}}{{Aj{f}}}{EfEh}}{{{b{hEj}}}f}{nf}00{{{b{Dj}}{b{Dj}}}Ad}{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{hEj}}}{{F`{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{Fb}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{Ff{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Fd}}}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fj}}}}{{}n}00{{}c{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ej}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Ej}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{h}}g}{{A`{eEl}}}{}{}{{Fn{{b{hc}}}{{Fl{e}}}}}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00;;;{{{b{hEj}}{b{{Fh{G`}}}}}{{F`{n}}}}{{{b{h}}c}{{A`{nEl}}}Gb}````````````````{{bd}f}0`{b{{b{c}}}{}}00000{{{b{h}}}{{b{hc}}}{}}00000{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{b{b{hc}}}f{}}0{bf}0{n{{b{c}}}{}}00000{n{{b{hc}}}{}}00000{c{{A`{Gd}}}Ab}{nf}00000{{{b{Gd}}{b{Gd}}}Ad}{{{b{Gh}}{b{Gh}}}Ad}{{{b{Gf}}{b{Gf}}}Ad}{{{b{Gj}}{b{Gj}}}Ad}{{{b{Gl}}{b{Gl}}}Ad}{{b{b{c}}}Ad{}}00000000000000{{{b{Gd}}{b{hAn}}}B`}{{{b{Gh}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gf}}{b{hAn}}}B`}{{{b{Gj}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gl}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0{GnGh}{H`Gh}2222{cGd{{Hh{}{{Fl{{Hf{{Hd{Hb}}}}}}}}HjHl}}{HnGd}{I`Gd}{{{b{Gd}}{b{hc}}}fBb}{{{b{Gf}}{b{hc}}}fBb}{{}n}00000{{}c{}}00000{IbId}{GdId}{GfId}{IbIf}{GdIf}{GfIf}{IbIh}{GdIh}{GfIh}``{{{b{Gd}}c}A`Bn}{bc{}}0`{c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{bC`}00000>>>>>>```````````````````````````````````````````````````````{{bd}f}000{{{b{Ij}}}{{b{Df}}}}{{{b{Il}}}{{b{Df}}}}{{{b{In}}}{{b{Df}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Ij}}}Ij}{{{b{Dh}}}Dh}{{{b{Il}}}Il}{{{b{In}}}In}{{b{b{hc}}}f{}}000{bf}000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Ij}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Il}}}Ab}{c{{A`{In}}}Ab}{nf}0000{{{b{Ij}}{b{Ij}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{J`}}{b{J`}}}Ad}{{{b{Il}}{b{Il}}}Ad}{{{b{In}}{b{In}}}Ad}{{b{b{c}}}Ad{}}00000000000`{{{b{Ij}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Il}}{b{hAn}}}{{A`{fCn}}}}{{{b{In}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Ij}}}}{{{b{Df}}}{{A`{J`c}}}{}}{{{b{Df}}}{{A`{Il}}}}{{{b{Df}}}{{A`{In}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Jb{Df}}}{{Jd{Db}}}{{Jh{}{{Jf{{E`{ce}}}}}}}}{{{b{Ij}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Il}}{b{hc}}}fBb}{{{b{In}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000`{{{b{Ij}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Il}}c}A`Bn}{{{b{In}}c}A`Bn}{bc{}}000{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000088888{{Dhe}Dh{{Jd{Db}}}{{Jh{}{{Jf{{E`{Ijc}}}}}}}}{{Dhe}Dh{{Jd{Db}}}{{Jh{}{{Jf{{E`{Ilc}}}}}}}}{{Dh{Bl{Gd}}}Dh}{{Dhe}Dh{{Jd{Db}}}{{Jh{}{{Jf{{E`{Inc}}}}}}}}{{Dhn}Dh}`````````````````{{bd}f}0000{{{Jj{c}}{Bl{{Dn{Jl}}}}}{{Jj{c}}}Jn}{{{Jj{{Hd{Jn}}}}{Bl{K`}}}{{Aj{Kb}}}}{{{b{h{Jj{c}}}}}{{Aj{Kd}}}Jn}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000``{{{b{Kf}}}Kf}{{{b{Kh}}}Kh}{{{b{Kj}}}Kj}{{{b{Kl}}}Kl}{{{b{Kn}}}Kn}{{b{b{hc}}}f{}}0000{bf}0000``{{{b{L`}}G`{Bl{G`}}{Bl{{b{Kl}}}}G`Ad}{{Aj{n}}}}{{{b{{Fh{G`}}}}G`{Bl{G`}}{Bl{{b{Kl}}}}G`Ad}{{Aj{n}}}}`{{}Kf}{{}Kh}{{}Kj}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Kf}}}Ab}{c{{A`{Kh}}}Ab}{c{{A`{Kj}}}Ab}{c{{A`{Kl}}}Ab}{c{{A`{Kn}}}Ab}{nf}0000000```{{{b{Kf}}{b{Kf}}}Ad}{{{b{Kh}}{b{Kh}}}Ad}{{{b{Kj}}{b{Kj}}}Ad}{{{b{Kl}}{b{Kl}}}Ad}{{{b{Kn}}{b{Kn}}}Ad}{{b{b{c}}}Ad{}}00000000000000`{{{Jj{c}}}{{Aj{Ah}}}Jn}{{{b{Kf}}{b{hAn}}}B`}{{{b{Kh}}{b{hAn}}}B`}{{{b{Kj}}{b{hAn}}}B`}{{{b{Kl}}{b{hAn}}}B`}{{{b{Kn}}{b{hAn}}}B`}{cc{}}00000{{{b{Df}}}Kl}11{{{b{Kf}}}{{Dn{Kh}}}}`{{{b{Kf}}{b{hc}}}fBb}{{{b{Kh}}{b{hc}}}fBb}{{{b{Kj}}{b{hc}}}fBb}{{{b{Kl}}{b{hc}}}fBb}{{{b{Kn}}{b{hc}}}fBb}```{{}n}0000000{{}c{}}0000000{{Kfc}{{Jj{c}}}Jn}`{{Kfc}Kf{{Hh{Kh}{{Fl{Kh}}}}}}```{c{{Jj{c}}}Jn};{LbKl}{G`Kl}{{{b{hKd}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hKb}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}````````````{{{b{Kf}}c}A`Bn}{{{b{Kh}}c}A`Bn}{{{b{Kj}}c}A`Bn}{{{b{Kl}}c}A`Bn}{{{b{Kn}}c}A`Bn}``{bc{}}0000`{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{{Kf{Bl{Ld}}}{{Aj{{Jj{Lf}}}}}}`{bC`}0000000{{{b{hKf}}{b{Lh}}}f}{{}c{}}0000000{{Kfn}Kf}{{Kf{Bl{{Dn{{Fh{Lb}}}}}}}Kf}{{Kh{Bl{c}}}Kh{{Jd{Kl}}}}{{KhAd}Kh}{{Kf{Bl{{Dn{{Dd{Lj}}}}}}}Kf}{{KhKj}Kh}{{KhG`}Kh}{{KfAd}Kf}0{{Kf{Bl{n}}}Kf}1500{{Kh{Bl{Kn}}}Kh}{{KfKh}Kf}{{Kf{Bl{c}}}Kf{{Jd{Ld}}}}{{Kf{Bl{{Dn{{Dd{n}}}}}}}Kf}{{Kh{Bl{G`}}}Kh}66{{Kf{Bl{j}}}Kf}{{Kf{Bl{K`}}}Kf}09??<<`````````````````````{{{b{hLl}}{b{{Fh{G`}}}}AdAdAd}{{Aj{f}}}}{{{b{hLl}}Ad}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Ll}}}Lj}{cc{}}000{{}n}000{{{b{{Fh{n}}}}n{b{D`}}{Bl{G`}}KjAd}{{Aj{{Dd{Ll}}}}}}{{}c{}}000{Ll{{Aj{Ln}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}0004444````{{bd}f}>={{{b{Lh}}}Lh}{{b{b{hc}}}f{}}{bf}{{}Lh}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{{M`{Lj}}}}}Lj}{{{b{Lh}}{b{hAn}}}B`}{cc{}}{{{b{Lh}}}n}{{{b{Lh}}}K`}{{{b{Df}}AdAd}Lj}{{{b{Mb}}G`{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Kl}}}}{Bl{G`}}G`{Bl{{b{Kn}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}{{}n}{{}c{}}{bc{}}{c{{A`{e}}}{}{}}{{{b{Mb}}{b{Kf}}}{{Aj{Lh}}}}{{}{{A`{c}}}{}}{bC`}5{{LhK`}Lh}`````````{{bd}f}00`{{{Md{c}}{b{D`}}}{{Aj{{Mf{c}}}}}Bf}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Mh}}}Mh}{{{b{Mj}}}Mj}{{{b{Ml}}}Ml}{{b{b{hc}}}f{}}00{bf}00``{{}Mh}{{}Mj}{{}Ml}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Mh}}}Ab}{c{{A`{Mj}}}Ab}{c{{A`{Ml}}}Ab}{nf}0000{{{b{Mh}}{b{Mh}}}Ad}{{{b{Mj}}{b{Mj}}}Ad}{{{b{Ml}}{b{Ml}}}Ad}{{b{b{c}}}Ad{}}00000000{{{b{h{Md{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Mf{c}}}}}{{Aj{f}}}Bf}``{{{b{Mh}}{b{hAn}}}B`}{{{b{Mj}}{b{hAn}}}B`}{{{b{Ml}}{b{hAn}}}B`}{cc{}}0000{{{b{Mh}}{b{hc}}}fBb}{{{b{Mj}}{b{hc}}}fBb}{{{b{Ml}}{b{hc}}}fBb}{{{Md{c}}Ad}{{Md{c}}}Bf}`0`{{}n}0000{{}c{}}0000``{{{Md{c}}n}{{Md{c}}}Bf}{c{{Md{c}}}Bf}````{{{b{Mh}}c}A`Bn}{{{b{Mj}}c}A`Bn}{{{b{Ml}}c}A`Bn}``{bc{}}00{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000099999{{{Md{c}}Mn}{{Md{c}}}Bf}{{{Md{c}}{Bl{Db}}}{{Md{c}}}Bf}0{{{Md{c}}{Bl{n}}}{{Md{c}}}Bf}{{{Md{c}}{Bl{Ad}}}{{Md{c}}}Bf}{{{Md{c}}Db}{{Md{c}}}Bf}0{{{Md{c}}G`}{{Md{c}}}Bf}{{{Md{c}}Ml}{{Md{c}}}Bf}15{{{b{h{Mf{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}N`}{{}n}{{{b{{Fh{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{Nb}}}}}}}}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{{b{Nb}}}{{Aj{Lf}}}}0{bC`}{{{b{Nb}}N`}f}{{{b{Nb}}}{{b{{Dn{Df}}}}}}6`````````````{{bd}f}000{{{b{h{Nd{c}}}}}{{Aj{Cf}}}Bd}{{{Nf{c}}{b{D`}}}{{Aj{{Nh{c}}}}}Bf}{b{{b{c}}}{}}0000000000{{{b{h}}}{{b{hc}}}{}}0000000000{{{b{Nj}}}Nj}{{{b{Nl}}}Nl}{{{b{Nn}}}Nn}{{{b{O`}}}O`}{{b{b{hc}}}f{}}000{bf}000`{{{b{Ob}}{Bl{{b{Od}}}}}{{Aj{Of}}}}{{{b{Ob}}{Bl{{b{Od}}}}NlAd}{{Aj{Ah}}}}{{}Oh}{{}Nl}{{}Nn}{{}O`}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Nj}}}Ab}{c{{A`{Nn}}}Ab}{c{{A`{O`}}}Ab}{nf}0000000000{{{b{Nj}}{b{Nj}}}Ad}{{{b{Nn}}{b{Nn}}}Ad}{{{b{O`}}{b{O`}}}Ad}{{b{b{c}}}Ad{}}00000{{{Oj{c}}}{{Aj{Ah}}}Jn}{{{Nd{c}}}{{Aj{Ah}}}Bd}{{{b{h{Ol{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Nf{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Nh{c}}}}}{{Aj{f}}}Bf}{{{Oj{c}}{Bl{{Dn{Jl}}}}Ad}{{Aj{Ah}}}Jn}{{{b{Nj}}{b{hAn}}}B`}{{{b{Nn}}{b{hAn}}}B`}{{{b{O`}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ob}}}}{{{b{Nj}}{b{hc}}}fBb}{{{b{Nn}}{b{hc}}}fBb}{{{b{O`}}{b{hc}}}fBb}{{}n}0000000000{{}c{}}0000000000`{{{Oj{c}}{Bl{Ld}}}{{Oj{c}}}Jn}{{{b{Ob}}}{{Aj{Od}}}}{c{{Oj{c}}}Jn}{c{{Nd{c}}}Bd}{c{{Ol{c}}}Bf}{{}Oh}{c{{Nf{c}}}Bf}{{{b{h{Oj{c}}}}}{{Aj{On}}}Jn}{{{b{h{Nd{c}}}}}{{Aj{D`}}}Bd}{{{b{Nj}}c}A`Bn}{{{b{Nn}}c}A`Bn}{{{b{O`}}c}A`Bn}{{{Oj{c}}Ad}{{Oj{c}}}Jn}{{{Nd{c}}Ad}{{Nd{c}}}Bd}{bc{}}000{{{b{Nn}}c}{{Nf{c}}}Bf}{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{bC`}0000000000{{}c{}}0000000000{{{Oj{c}}{Bl{{Dd{Db}}}}}{{Oj{c}}}Jn}{{{Nd{c}}{Bl{{Dd{Db}}}}}{{Nd{c}}}Bd}{{{Ol{c}}A@`}{{Ol{c}}}{}}{{{Nf{c}}A@`}{{Nf{c}}}Bf}{{{Ol{c}}{Bl{O`}}}{{Ol{c}}}{}}{{Oh{Bl{O`}}}Oh}{{{Nf{c}}{Bl{O`}}}{{Nf{c}}}Bf}{{OhLd}Oh}{{{Oj{c}}{Bl{{Dd{Ln}}}}}{{Oj{c}}}Jn}{{{Oj{c}}{Bl{{E`{Lb{Dn{Df}}}}}}}{{Oj{c}}}Jn}{{{Oj{c}}{Bl{n}}}{{Oj{c}}}Jn}{{{Nd{c}}{Bl{n}}}{{Nd{c}}}Bd}{{Nlc}Nl{{Jd{{Bl{{Dn{Jl}}}}}}}}{{{Oj{c}}{Bl{{Dd{n}}}}}{{Oj{c}}}Jn}{{{Nd{c}}{Bl{{Dd{n}}}}}{{Nd{c}}}Bd}{{Nl{Bl{{Dn{{Fh{Lb}}}}}}}Nl}{{{Oj{c}}{Bl{j}}}{{Oj{c}}}Jn}{{{Nd{c}}{Bl{j}}}{{Nd{c}}}Bd}{{Nlc}Nl{{Jd{{Bl{j}}}}}}{{Nlc}Nl{{Jd{{Bl{n}}}}}}{{{b{h{Nh{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{Nn}}Ahc}{{Aj{f}}}Bf}```````{{bd}f}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{A@b}}}A@b}{{b{b{hc}}}f{}}{bf}{{}A@b}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{A@b}}}Ab}{nf}0000{{{b{A@b}}{b{A@b}}}Ad}{{b{b{c}}}Ad{}}00{{{b{h{A@d{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{A@f{c}}}{{Aj{Ah}}}Jn}{{{b{A@b}}{b{hAn}}}B`}{cc{}}0000{{{b{A@b}}{b{hc}}}fBb}{{{A@f{c}}{Bl{Mn}}}{{A@f{c}}}Jn}{{}n}0000{{}c{}}0000`{c{{A@d{c}}}Bf}{c{{A@h{c}}}Bf}{c{{A@f{c}}}Jn}{{{b{{Fh{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}}{{{b{A@b}}c}A`Bn}{{{A@f{c}}Ad}{{A@f{c}}}Jn}{bc{}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}0000:::::{{{A@f{c}}Mn}{{A@f{c}}}Jn}5{{{A@d{c}}A@j}{{A@d{c}}}Bf}{{{A@f{c}}A@j}{{A@f{c}}}Jn}{{{A@f{c}}{Bl{{Dd{Lb}}}}}{{A@f{c}}}Jn}{{{A@f{c}}K`}{{A@f{c}}}Jn}{{{A@f{c}}{b{D`}}}{{A@f{c}}}Jn}{{{b{h{A@h{c}}}}{b{Ah}}}{{Aj{f}}}Bf}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{Mb}}}{{b{{Fh{G`}}}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{hc}}}MbJn}{cc{}}{{}n}{{}c{}}{{{b{Jn}}}{{Bl{{b{{Fh{G`}}}}}}}}{{{b{Jn}}}{{Bl{{b{Lf}}}}}}{{{b{Mb}}}A@l}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6`{{{b{hc}}{Bl{Mn}}}{{Aj{D`}}}A@n}``{{bd}f}{{{b{AA`}}n}{{E`{AA`AA`}}}}{AA`{{Dn{AAb}}}}{cAA`{{Jh{}{{Jf{{Bl{f}}}}}}}}{cAA`{{Jh{}{{Jf{f}}}}}}{{AAdc}AA`{{Jh{}{{Jf{{Bl{f}}}}}}}}{{AAdc}AA`{{Jh{}{{Jf{f}}}}}}{{{b{AA`}}}{{b{AAf}}}}{{{b{hAA`}}}{{b{hAAf}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{AA`{{Hd{AAb}}}}{{{b{AA`}}n}Ad}{{{b{AA`}}}AA`}{{b{b{hc}}}f{}}{bf}{{{AAh{c}}}{{Aj{n}}}Jn}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{AA`}}}{{b{AAd}}}}{{{b{AA`}}{b{AA`}}}Ad}{{{b{AA`}}{b{{b{AAb}}}}}Ad}{{{b{AA`}}}{{b{{Fh{AAj}}}}}}{{{AAh{c}}}{{Aj{Ah}}}Jn}{{{b{AA`}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0{AAlAA`}{AAnAA`}{c{{Aj{{AAh{Lf}}}}}{{Jd{Ld}}}}{{nAAd}AA`}{{{b{AAd}}}{{b{{Fh{AAj}}}}}}{{{AAh{c}}{Bl{Mn}}}{{AAh{c}}}Jn}{{}n}0{{}c{}}0{AA`{{E`{{Dd{AAj}}n{Dd{{Hd{AAb}}}}{Bl{AB`}}}}}}{{{b{AA`}}}}{{{b{AA`}}}{{ABh{{Dd{{Hd{ABb}}}}ABdABf}}}}{{{b{AA`}}}n}{{{AAh{c}}Ad}{{AAh{c}}}Jn}{c{{AAh{c}}}Jn}{{AAdn{Dd{{Hd{AAb}}}}{Bl{AB`}}}AA`}{AAdAA`}{{AAdn}AA`}{{{b{AA`}}}AA`}{{{b{hAA`}}{Bl{AB`}}}f}{{{b{hAA`}}nn}f}0{{bnn}c{}}011{{AA`nn}AA`}0{{{b{AA`}}n}{{E`{{Hd{AAb}}{Hd{AAb}}}}}}0{{{b{hAA`}}}{{Bl{AB`}}}}{{{b{AA`}}}{{Hd{AAb}}}}{bc{}}{{{b{AA`}}{b{AA`}}}AB`}{{{b{AA`}}b}AB`}10{e{{A`{AA`c}}}{}{{Jh{}{{Jf{{A`{fc}}}}}}}}{e{{A`{AA`c}}}{}{{Jh{}{{Jf{{A`{{Bl{f}}c}}}}}}}}{{AAde}{{A`{AA`c}}}{}{{Jh{}{{Jf{{A`{{Bl{f}}c}}}}}}}}{{AAde}{{A`{AA`c}}}{}{{Jh{}{{Jf{{A`{fc}}}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{{AAdn{Dd{{Hd{AAb}}}}{Bl{AB`}}}{{A`{AA`ABj}}}}{bC`}0{{{b{AA`}}}{{Bl{{b{AB`}}}}}}0{{{b{AA`}}}{{b{{Fh{{Hd{AAb}}}}}}}}{{{b{AA`}}}ABd}{{}c{}}0{{{AAh{c}}{Bl{Mn}}}{{AAh{c}}}Jn}{{{AAh{c}}Ad}{{AAh{c}}}Jn}{{{AAh{c}}{Bl{n}}}{{AAh{c}}}Jn}0{{{AAh{c}}{Bl{e}}}{{AAh{c}}}Jn{{Jd{Ld}}}}{{{AAh{c}}{Bl{{Dn{Jl}}}}}{{AAh{c}}}Jn}{{{AAh{c}}{Bl{{Dn{{Fh{Lb}}}}}}}{{AAh{c}}}Jn}4{{{AAh{c}}{Bl{{b{hj}}}}}{{AAh{c}}}Jn}{{{AAh{c}}K`}{{AAh{c}}}Jn}{{{AAh{c}}{b{D`}}}{{AAh{c}}}Jn}{{{b{AA`}}{Bl{AB`}}}{{Hd{AAb}}}}{{AA`{Bl{AB`}}}AA`}0``````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{ABl}}}ABl}{{b{b{hc}}}f{}}{bf}{{{b{ABl}}n}ABn}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{AAj}}c}{{A`{AC`ABj}}}{{ACd{}{{Jf{{b{ACb}}}}}}}}`{nf}0{{{b{AC`}}{b{AC`}}}Ad}{{{b{AC`}}{b{hAn}}}{{A`{fCn}}}}{{{b{ABl}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{ACfAC`}1{{}n}0{{}c{}}0{{{b{ABl}}}{{b{{Bl{{Dd{ACh}}}}}}}}```````{{{b{ABl}}}{{b{ACj}}}}`{bc{}}{c{{A`{e}}}{}{}}0{ACl{{A`{ABlACn}}}}{{}{{A`{c}}}{}}0{bC`}0`77``````````{{bd}f}0`{{{AD`{c}}n}{{Aj{ADb}}}Jn}{{ADdn}{{Aj{ADb}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{ADf}}}ADf}{{{b{ADh}}}ADh}{{b{b{hc}}}f{}}0{bf}0{{{b{ADj}}}{{ADn{nADl}}}}{{}ADh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{ADf}}}Ab}{c{{A`{ADh}}}Ab}{nf}0000{{{b{ADf}}{b{ADf}}}Ad}{{{b{ADh}}{b{ADh}}}Ad}{{b{b{c}}}Ad{}}00000{{{AD`{c}}}{{Aj{Ah}}}Jn}{ADd{{Aj{Ah}}}}{{{b{ADb}}n}Ad}{{{b{ADf}}{b{hAn}}}B`}{{{b{ADh}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{AE`}}}{{Aj{ADd}}}}{{{b{h{AD`{c}}}}}{{Aj{{b{AE`}}}}}Jn}{{{b{hADd}}}{{Aj{{b{AE`}}}}}}{{{b{ADf}}{b{hc}}}fBb}{{{b{ADh}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000{{{b{ADb}}}Ad}``{{{Bl{{b{{Fh{n}}}}}}{b{Cf}}{Bl{{b{{Fh{Ln}}}}}}{Bl{{b{j}}}}}Ah}`{c{{AD`{c}}}Jn}{{{b{hADb}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{AD`{c}}}}}{{Aj{n}}}Jn}{{{b{hADd}}}{{Aj{n}}}}`{{{AD`{c}}ADh}{{AD`{c}}}Jn}{{ADdADh}ADd}{{{b{ADb}}}{{b{On}}}}{{{b{h{AD`{c}}}}}{{Aj{On}}}Jn}{{{b{hADd}}}{{Aj{On}}}}`{{{b{ADf}}c}A`Bn}{{{b{ADh}}c}A`Bn}{{{AD`{c}}Ad}{{AD`{c}}}Jn}{{{b{h{AD`{c}}}}AE`}fJn}1{{ADdAd}ADd}{bc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{{{b{hLn}}n{b{{ADn{nADl}}}}}f}{bC`}000075`{{}c{}}0000{{{AD`{c}}{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{{AD`{c}}}}}Jn}{{ADd{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{ADd}}}}{{{AD`{c}}{Bl{{Dd{Db}}}}}{{AD`{c}}}Jn}{{{AD`{c}}{Bl{{Dd{Ln}}}}}{{AD`{c}}}Jn}{{ADd{Bl{{Dd{Ln}}}}}ADd}{{{AD`{c}}{Bl{{E`{Lb{Dn{Df}}}}}}}{{AD`{c}}}Jn}{{ADd{Bl{{E`{Lb{Dn{Df}}}}}}}ADd}{{{AD`{c}}{Bl{{Dn{Jl}}}}}{{AD`{c}}}Jn}{{ADd{Bl{{Dn{Jl}}}}}ADd}{{{AD`{c}}{Bl{{Dd{n}}}}}{{AD`{c}}}Jn}{{ADd{Bl{{Dd{n}}}}}ADd}{{{AD`{c}}{Bl{j}}}{{AD`{c}}}Jn}{{ADd{Bl{j}}}ADd}{{{AD`{c}}{Bl{{E`{nn}}}}}{{AD`{c}}}Jn}{{ADd{Bl{{E`{nn}}}}}ADd}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{AB`}}}AEb}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{Cf}}{b{Cf}}}{{Aj{f}}}}{cc{}}{{}n}{{}AEd}{{}c{}}{{{Bl{{b{Jl}}}}{b{ADj}}{b{Cf}}}{{Aj{Ad}}}}{{{b{AEd}}AEb{b{AAd}}}Ad}{{{Dd{{E`{{b{ACb}}A@l}}}}AAj{Bl{AEf}}}{{Aj{{Hd{AAb}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6````````````````{{bd}f}00000{{{AEh{c}}{b{D`}}}{{Aj{{AEj{c}}}}}Bf}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{{b{AF`}}}AF`}{{{b{AFb}}}AFb}{{{b{AFd}}}AFd}{{{b{AFf}}}AFf}{{b{b{hc}}}f{}}00000{bf}00000``{{}AEl}{{}AEn}{{}AF`}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{AEl}}}Ab}{c{{A`{AEn}}}Ab}{c{{A`{AF`}}}Ab}{c{{A`{AFb}}}Ab}{c{{A`{AFd}}}Ab}{c{{A`{AFf}}}Ab}`{nf}0000000;{{{b{{AEj{c}}}}{b{Ah}}}{{`{{AFj{}{{Jf{{Aj{{AFh{ABj}}}}}}}}}}}Bf}{{{b{AEl}}{b{AEl}}}Ad}{{{b{AEn}}{b{AEn}}}Ad}{{{b{AF`}}{b{AF`}}}Ad}{{{b{AFb}}{b{AFb}}}Ad}{{{b{AFd}}{b{AFd}}}Ad}{{{b{AFf}}{b{AFf}}}Ad}{{b{b{c}}}Ad{}}00000000000000000{{{b{{AEj{c}}}}}{{Aj{N`}}}Bf}{{{AEh{c}}{b{hAh}}}{{Aj{N`}}}Bf}{{{b{AEl}}{b{hAn}}}{{A`{fCn}}}}{{{b{AEn}}{b{hAn}}}B`}{{{b{AF`}}{b{hAn}}}B`}{{{b{AFb}}{b{hAn}}}B`}{{{b{AFd}}{b{hAn}}}B`}{{{b{AFf}}{b{hAn}}}B`}{cc{}}0000000{{}AEl}{{{b{{AEj{c}}}}}{{b{{AFn{{AFl{c}}}}}}}Bf}{{{b{AEl}}{b{hc}}}fBb}{{{b{AEn}}{b{hc}}}fBb}{{{b{AF`}}{b{hc}}}fBb}{{{b{AFb}}{b{hc}}}fBb}{{{b{AFd}}{b{hc}}}fBb}{{{b{AFf}}{b{hc}}}fBb}{{}n}0000000{{}c{}}0000000{{{b{AEl}}}Ad}0```{c{{AEh{c}}}{BfBf}}``{{{b{AEl}}c}A`Bn}{{{b{AEn}}c}A`Bn}{{{b{AF`}}c}A`Bn}{{{b{AFb}}c}A`Bn}{{{b{AFd}}c}A`Bn}{{{b{AFf}}c}A`Bn}{{{AEh{c}}Ad}{{AEh{c}}}Bf}`{bc{}}00000{{{b{AEn}}c}{{AEh{c}}}Bf}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{G`{{Aj{AFb}}}}{AG`{{Aj{AFd}}}}{AGb{{Aj{AFf}}}}{bC`}0000000{{}c{}}0000000{{{AEh{c}}AF`}{{AEh{c}}}Bf}{{{AEh{c}}{Bl{n}}}{{AEh{c}}}Bf}0{{{AEh{c}}AEl}{{AEh{c}}}Bf}{{{b{h{AEj{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{AEn}}Ahc}{{Aj{f}}}Bf}{{{b{{AEj{c}}}}{Dd{{AFh{ABj}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{L`}}e{b{g}}n}{{Aj{f}}}{{Jd{Lb}}}{{Jh{}{{Jf{c}}}}}{CbHjHl}}`{{{b{{Fh{Ld}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Fh{Ld}}}}}}}}{{{b{{Fh{Ld}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Fh{Ld}}}}n}}}}}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}Ad{{Jb{L`}}}}{{{b{{Fh{G`}}}}}{{Bl{n}}}}{cAd{{Jb{L`}}}}{{{b{L`}}}Ld}``{{{b{AGd}}c}{}Hb}{{{b{AGd}}c}{}{HbHj}}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{AGd}}}}{{}n}{{}c{}}{{{b{AGf}}}N`}{{{b{AGd}}c}AGh{HbHj}}{{{b{AGd}}e}{{AGh{c}}}Hj{{Fn{}{{Fl{c}}}}Hj}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{AG`e}{}Hb{{Fn{}{{Fl{c}}}}}}{bC`}71````{{bd}f}0{{{b{hAh}}{Bl{{b{Jl}}}}Ad}{{Aj{f}}}}{{{b{Jl}}}{{Bl{{b{AGj}}}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{AGl}}}AGl}{{{b{AGn}}}AGn}{{b{b{hc}}}f{}}0{bf}0{{{b{AGn}}}{{b{{Fh{AGl}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AGl}}}Ab}{c{{A`{AGn}}}Ab}{nf}0{{{b{AGl}}}{{b{Lj}}}}{{{b{Jl}}{b{Ah}}}{{Aj{Ln}}}}{{{b{AGl}}}{{b{Lb}}}}{{{b{AGl}}{b{hAn}}}B`}{{{b{AGn}}{b{hAn}}}B`}{cc{}}0{LnAGl}{AH`AGl}{{{b{AGl}}}{{Bl{{b{Ln}}}}}}00{{{b{AGn}}{b{Df}}}{{Aj{{b{AGl}}}}}}{{}n}0{{}c{}}0{{{b{Jl}}}{{Bl{{Dd{Lb}}}}}}{{AH`{Bl{Ln}}{Bl{Ln}}{Bl{Ln}}}AGl}{{K`{Dd{AGl}}{Bl{n}}}AGn}{{{b{AGl}}}{{Bl{n}}}}{{{b{AGn}}}{{Bl{n}}}}{{{b{AGn}}}{{b{K`}}}}{{{b{AGl}}c}A`Bn}{{{b{AGn}}c}A`Bn}{{{b{AGj}}{b{AGn}}}{{Aj{Ad}}}}{{{b{hAGn}}{b{{Fh{n}}}}}f}=={{{b{AGl}}}{{Bl{Ln}}}}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0??{{{b{hAGn}}K`}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00````````{{{b{hc}}}{{Aj{Mb}}}{BdJnAHb}}{{{Bl{{b{{Fh{Lb}}}}}}{b{D`}}{Bl{{b{{Fh{Ln}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}``````````{{bd}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{{{b{AHd}}}AHd}{{b{b{hc}}}f{}}{bf}{{}AHf}{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{AHd}}{b{hAn}}}B`}{cc{}}0{A@lAHf}{AHhAHf}2{AHjAHf}3{{{b{AHl}}{Ff{n}}}{{Aj{A@l}}}}{{{b{AHj}}{Ff{n}}}{{Aj{A@l}}}}{{{b{AHh}}{Ff{n}}}{{Aj{A@l}}}}{{{b{AHf}}{Ff{n}}}{{Aj{A@l}}}}{{{b{AHl}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{A@l}}}}}}{{{b{AHj}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{A@l}}}}}}{{{b{AHh}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{A@l}}}}}}{{{b{AHf}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{A@l}}}}}}{{{b{AHl}}}{{Aj{n}}}}{{{b{AHj}}}{{Aj{n}}}}{{{b{AHh}}}{{Aj{n}}}}{{{b{AHf}}}{{Aj{n}}}}{{}n}000{{}c{}}000{bc{}}{{{b{AHd}}{b{Df}}{Bl{{b{Dh}}}}}{{Aj{AHf}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}000{{{b{AHf}}}{{b{Df}}}}6666````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{{Fh{G`}}}}}{{Bl{AHn}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}>={{{b{{Fh{G`}}}}{b{h{Dd{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}};:9>````76432{{{b{AI`}}{b{hAn}}}B`}2{{}n}{{}c{}}{{{b{hn}}nnn}{{E`{nn}}}}{{nn{Ff{n}}}AI`}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}5","D":"DCd","p":[[1,"reference"],[5,"Private",2240],[1,"unit"],[0,"mut"],[5,"RowIndex",0,2241],[5,"HiveOptions",0,2241],[1,"usize"],[6,"Result",2242],[10,"Deserializer",2243],[1,"bool"],[10,"SerReader",2100,2244],[5,"DataFrame",2245],[8,"PolarsResult",2246],[10,"SerWriter",2100,2244],[5,"Formatter",2247],[8,"Result",2247],[10,"Hasher",2248],[10,"Read",2249],[10,"Write",2249],[10,"ArrowReader",0,2244],[8,"RecordBatch",2250],[6,"Option",2251],[10,"Serializer",2252],[5,"TypeId",2253],[10,"WriteDataFrameToFile",0,2244],[5,"AvroReader",86,2254],[8,"ArrowSchema",2255],[10,"Seek",2249],[6,"AvroCompression",86],[5,"AvroWriter",86,2256],[5,"Error",2247],[8,"Schema",2257],[5,"String",2258],[5,"Vec",2259],[1,"str"],[5,"CloudOptions",373],[5,"CloudLocation",153,2260],[10,"ObjectStore",2261],[5,"Arc",2262],[1,"tuple"],[5,"PolarsObjectStore",153,2263],[5,"Path",2264],[10,"AsyncWrite",2265],[10,"Unpin",2266],[5,"CloudWriter",153,2267],[5,"Error",2268],[10,"Command",2269],[8,"Result",2268],[5,"Url",2270],[5,"Bytes",2271],[5,"Range",2272],[1,"slice"],[5,"ObjectMeta",2261],[17,"Output"],[10,"FnOnce",2273],[1,"u8"],[10,"VarInt",2274],[6,"PlCredentialProvider",228],[5,"CredentialProviderFunction",228],[5,"AwsCredential",228,2275],[6,"AzureCredential",228,2276],[5,"GcpCredential",228,2277],[5,"SessionCredentials",2275],[5,"InstanceCredentials",2275],[10,"Future",2278],[5,"Box",2279],[5,"Pin",2280],[10,"Fn",2273],[10,"Send",2266],[10,"Sync",2266],[5,"PythonFunction",2281],[8,"PyObject",2282],[10,"IntoCredentialProvider",228],[8,"AwsCredentialProvider",2283],[8,"AzureCredentialProvider",2284],[8,"GcpCredentialProvider",2285],[6,"AmazonS3ConfigKey",373,2286],[6,"AzureConfigKey",373,2287],[6,"GoogleConfigKey",373,2288],[6,"CloudType",373],[10,"AsRef",2289],[10,"Into",2289],[17,"Item"],[10,"IntoIterator",2290],[5,"CsvReader",563,2291],[10,"PhysicalIoExpr",2032],[10,"MmapBytesReader",1427],[8,"SchemaRef",2257],[5,"OwnedBatchedCsvReader",563,2292],[5,"BatchedCsvReader",563,2292],[5,"CsvReadOptions",563,2293],[5,"CsvParseOptions",563,2293],[6,"CsvEncoding",563,2293],[6,"CommentPrefix",563,2293],[6,"NullValues",563,2293],[5,"Path",2294],[5,"PlSmallStr",2295],[5,"PathBuf",2294],[5,"File",2296],[5,"SchemaInferenceResult",899],[6,"DataType",2297],[6,"Buffer",822],[5,"Series",2298],[8,"PlHashSet",2299],[6,"ReaderBytes",1427],[5,"CsvWriter",926,2300],[5,"BatchedWriter",926,2300],[5,"CsvWriterOptions",926,2301],[5,"SerializeOptions",926,2301],[6,"QuoteStyle",926,2301],[8,"NonZeroUsize",2302],[1,"u64"],[5,"FileCacheEntry",1071,2303],[5,"IpcStreamReader",1092,2304],[5,"IpcWriter",1092,2305],[5,"BatchedWriter",1092,2305],[5,"IpcScanOptions",1092,2306],[5,"IpcReadOptions",1092,2307],[5,"IpcWriterOptions",1092,2305],[6,"IpcCompression",1092,2305],[5,"IpcReaderAsync",1092,2307],[5,"FileMetadata",2308],[1,"i64"],[5,"IpcStreamWriterOption",1092,2304],[5,"IpcReader",1092,2306],[5,"IpcStreamWriter",1092,2304],[8,"ArrowSchemaRef",2255],[5,"CompatLevel",2297],[5,"JsonWriterOptions",1329],[5,"JsonWriter",1329],[5,"JsonReader",1329],[5,"BatchedWriter",1329],[6,"JsonFormat",1329],[5,"MemSlice",2309],[10,"BufRead",2249],[5,"StructArray",1450,2310],[10,"Array",2311],[6,"ArrowDataType",2312],[10,"Any",2253],[5,"JsonLineReader",1450],[5,"Field",2313],[5,"MutableStructArray",2314],[5,"GrowableStruct",2315],[5,"Bitmap",2316],[10,"Scalar",2317],[5,"StructValueIter",2318],[5,"BitmapIter",2319],[6,"ZipValidity",2320],[6,"PolarsError",2246],[5,"FileMetadata",1557,2321],[6,"ColumnOrder",2322],[5,"ParquetStatistics",1557],[5,"ColumnChunkMetadata",2323],[10,"ExactSizeIterator",2324],[5,"MutableStatistics",2325],[5,"KeyValue",2326],[5,"SchemaDescriptor",2327],[5,"FileMetaData",2326],[6,"ParquetError",2328],[5,"ParquetReader",1610,2329],[5,"BatchedParquetReader",1610,2330],[5,"ParquetAsyncReader",1610,2329],[5,"ParquetOptions",1610,2331],[6,"ParallelStrategy",1610,2331],[5,"RowGroupMetadata",2332],[6,"IsSorted",2333],[8,"PlHashMap",2299],[8,"FileMetadataRef",1557],[1,"f64"],[6,"PrefilterMaskSetting",1756,2330],[6,"Filter",2334],[5,"ParquetWriter",1778,2335],[5,"BatchedWriter",1778,2336],[5,"StatisticsOptions",1778,2337],[5,"ParquetWriteOptions",1778,2338],[6,"ParquetCompression",1778,2338],[5,"GzipLevel",1778,2338],[5,"BrotliLevel",1778,2338],[5,"ZstdLevel",1778,2338],[8,"RowGroupIterColumns",1778,2339],[10,"Iterator",2340],[5,"FileWriter",2341],[5,"Mutex",2342],[1,"u32"],[1,"i32"],[5,"RuntimeManager",2010],[10,"GetSize",2010],[5,"JoinHandle",2343],[10,"StatsEvaluator",2032],[5,"ColumnStats",2032],[5,"BatchStats",2032],[5,"Field",2344],[10,"Sized",2266],[6,"DynByteSourceBuilder",2122],[6,"DynByteSource",2122],[5,"ObjectStoreByteSource",2122],[5,"MemSliceByteSource",2122],[10,"ByteSource",2122],[6,"SupportedCompression",2203],[6,"SplitSlicePosition",2221],[6,"ObjectStoreCredential",228],[5,"Utf8Field",822],[5,"CategoricalField",822],[5,"DatetimeField",822],[15,"Datetime",896]],"r":[[0,2244],[1,2241],[2,2241],[3,2244],[4,2244],[5,2244],[87,2254],[88,2256],[89,2345],[153,2260],[154,2267],[155,2263],[156,2263],[165,2346],[195,2260],[207,2346],[230,2275],[232,2276],[237,2277],[376,2286],[381,2287],[405,2288],[565,2292],[566,2293],[567,2293],[568,2293],[569,2293],[570,2291],[574,2293],[575,2292],[621,2347],[622,2347],[703,899],[927,2300],[928,2300],[929,2301],[933,2301],[934,2301],[1071,2348],[1072,2349],[1073,2303],[1080,2348],[1082,2349],[1092,2305],[1093,2305],[1094,2307],[1095,2306],[1096,2307],[1097,2306],[1098,2304],[1099,2304],[1100,2304],[1101,2305],[1102,2305],[1451,2310],[1557,2321],[1575,2325],[1611,2330],[1614,2331],[1615,2329],[1616,2331],[1617,2329],[1641,2330],[1696,2350],[1727,2330],[1759,2330],[1762,2330],[1766,2350],[1771,2351],[1773,2352],[1778,2336],[1780,2338],[1782,2338],[1785,2338],[1786,2338],[1787,2335],[1788,2339],[1790,2337],[1793,2338],[2100,2244],[2101,2244],[2102,0],[2110,2002],[2111,2353],[2112,2353],[2113,2353],[2114,2353],[2118,2353],[2119,2353],[2120,2353]],"b":[[311,"impl-From%3CSessionCredentials%3E-for-AwsCredential"],[312,"impl-From%3CInstanceCredentials%3E-for-AwsCredential"],[1455,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1456,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1457,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1458,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1478,"impl-PartialEq-for-StructArray"],[1479,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1485,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1486,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1506,"impl-Array-for-StructArray"],[1507,"impl-StructArray"],[1510,"impl-Array-for-StructArray"],[1511,"impl-StructArray"],[1523,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1524,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1525,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1526,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1534,"impl-StructArray"],[1535,"impl-Array-for-StructArray"],[1551,"impl-Array-for-StructArray"],[1552,"impl-StructArray"],[2159,"impl-From%3CMemSlice%3E-for-DynByteSource"],[2160,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"],[2162,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKYGyQAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGAB9AAMAhAABAIcADQCYAAAAnAAAAJ4ABgCnABAAugACAMAAAwDGAAIAzgAAANEAAADWAA4A5gAAAOgAAADtAAAA7wAAAPEAAgD1AAEA+AA9ADgBAQA/AQkATwEIAFoBAgBeARcAfAEBAIgBAACUAQEAlwEBAK0BEADBATYA/QEDAAICCAAQAhwALwIAADYCBAA/AgEAQwIqAHACOACqAgQAtQIAALgCEQDTAgAA1QICANwCKgAIAwgAEgMHACoDAAA3AxIASwMXAGcDBABwAyAAkgMBAJYDAACYAwYAoAMAAKgDFwDCAyEA5QMAAOcDAgDvAwIA8wMAAPUDBQABBAIACAQDAA0EFgAwBAcAOQQCAD0EAQBBBAQARwQAAEoEAABNBAAATwQAAFIEAwBXBCIAewQ2ALMEAwDCBA4A3gQFAOYENQAeBQEAJAUBACgFAAArBQAALgUBADEFAQA4BSQAXgUAAGQFAABmBQQAcgUZAI4FAQCUBQAAlgUIAKAFAACiBQEApQUGAK0FAQCwBQkAuwUNAMoFAQDOBQEA0QUAANMFAgDZBQAA2wUAAOMFAADlBQIA6wUBAO4FDQD9BQEAAAYAAAMGAQAHBgkAEgYAABcGAAAZBgcAJAYDACoGBAAwBgAAMgYBAEAGAgBEBgMASQYBAEwGAABPBgAAUQYAAFUGNACPBgkAngYAAKAGAgCkBgAApgYBAKkGAQCsBgMAsQYUAMgGBQDPBgAA0QYFANgGAADaBgEA3QYJAOkGAQDsBggA9gYAAPgGAQD7BgAA/QYBAAAHAQADBygALgc7AGwHBQB6Bw8AkgcBAJUHAQCYBwAAmgcFAKIHKQDRBwEA1AcAANsHAgDfBwQA5QcBAOgHAADqBwYA8wcEAPkHCQAECAcADggCABkIAQAjCAMAKggNADkIAAA7CAAAPwgNAE4IAQBRCAAAUwgaAHAIAQBzCAAAdggOAIkIEwCeCAMAowgCAKcIAACqCA0AuQgAALwIBAA="}],["polars_lazy",{"t":"CQCCCPPPGPPPPPPPPPPPPPPFPPPPPPPPKPPGGPGPPPPPPGFPPPFFPPPKPKPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPFPPPPPPPPPPGPPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPGPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPIGPPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPPFPPPPPPPPGPPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPPGPFPPPPPPPPPPPPPPPPPPPPPKPPFPPFPPPPFPPGGPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNNHNHNOONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNNHNNNHNNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPGGPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJJSFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNNMNNOOOONNNNNNNNNNNOCNNMNNOONNNNNMNNOOONNNNNNNOONNNNNNNNNNNNNNNONNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNMNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","","BinaryUdfOutputField","Bitwise","","BitwiseAggFunction","BitwiseFunction","Boolean","BooleanFunction","Business","Bytes","","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","ColumnBinaryUdf","Columns","ColumnsUdf","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CountOnes","CountZeros","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Deserialized","","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EscapeRegex","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","ExclusiveOr","Exp","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","InterSect","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","LazySerde","LeadingOnes","LeadingZeros","Len","LenBytes","LenChars","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","OpaqueColumnUdf","Operator","Or","","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Root","Round","","RoundSF","SearchSorted","Second","Selector","","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","Sub","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrailingOnes","TrailingZeros","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UnpivotArgsDSL","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","","Year","ZFill","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_into_selector","_rename_fields_impl","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","","agg_groups","alias","all","","","","all_horizontal","allow_parallel","ambiguous","and","any","","","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","","","arg_min","","","arg_sort","arg_sort_by","arg_unique","arg_where","args","","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","","binary_expr","bitand","bitwise_and","bitwise_count_ones","bitwise_count_zeros","bitwise_leading_ones","bitwise_leading_zeros","bitwise_or","bitwise_trailing_ones","bitwise_trailing_zeros","bitwise_xor","bitxor","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bottom_k_by","business_day_count","cache","call","","call_udf","","call_unchecked","cast","","cast_with_options","cat","","cbrt","ceil","clip","clip_max","clip_min","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","","cos","cosh","cot","count","count_matches","","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","","","","","","","","","","","degrees","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","","","","","","","","","","","","","","","","diff","","div","dot","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_nulls","","dt","","dtype_col","dtype_cols","duration","entropy","eq","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval","","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","","","flatten","float_type","floor","floor_div","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fold_exprs","force_parallel","format","format_str","forward_fill","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_type","fun","function_expr","function_with_options","functions","gather","","gather_every","","get","","","get_categories","get_field","","get_fields_lens","get_schema","gt","gt_eq","has_multiple_outputs","hash","","","","","","","","","","","","","","","","","","","","","","head","","hist","hour","hours","implode","index","index_cols","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_iter","into_list_name_space","","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_comparison","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","","is_null","","is_regex_projection","is_simple_projection","is_unique","join","","json_encode","keep","kurtosis","last","","","len","","","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","max","","","","max_horizontal","mean","","","mean_horizontal","median","","","","meta","microsecond","microseconds","milliseconds","min","","","","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","","","name","","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","","","","","","nodes","nodes_owned","not","","nth","null_count","on","options","or","otherwise","","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","","","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","","search_sorted","second","seconds","serialize","","","","","","","","","","","","","","","","","","","","","","","","","","","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","","","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","","sort","","","sort_by","spearman_rank_corr","sqrt","std","","","str","strict","strict_cast","string","struct_","sub","","suffix","suffix_fields","sum","","","","sum_horizontal","super_type","swap_operands","tail","","tan","tanh","ternary_expr","then","","time_ranges","time_unit","","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","to_struct","","to_uppercase","top_k","top_k_by","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","","","try_to_compact_string","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","udf","undo_aliases","union","unique","","","unique_counts","unique_stable","","","upper_bound","value_counts","value_name","var","","","variable_name","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weeks","when","","","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","","method","propagate_nans","","quantile","closed","ignore_nulls","","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","And","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Bitwise","BitwiseAggFunction","BitwiseFunction","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CountOnes","CountZeros","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EscapeRegex","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LeadingOnes","LeadingZeros","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","Or","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrailingOnes","TrailingZeros","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Xor","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","","time_zone","weeks","year","CALL_COLUMNS_UDF_PYTHON","CALL_DF_UDF_PYTHON","PYTHON3_VERSION","PYTHON_SERDE_MAGIC_BYTE_MARK","PythonFunction","PythonGetOutput","PythonUdfExpression","__clone_box","borrow","","","borrow_mut","","","call_udf","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","drop","","","eq","equivalent","","","fmt","from","","","","get_field","init","","","into","","","new","","serialize","to_owned","try_deserialize_bytes","try_from","","","try_into","","","try_serialize","","try_serialize_to_bytes","type_id","","","vzip","","","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","escape_regex","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptFlags","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","","","","","","","","","_collect_post_opt","_with_eager","agg","all","allow_missing_columns","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","bottom_k","cache","","","cancel","cast","cast_all","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cloud_options","","","","","","coalesce","collect","collect_concurrently","collect_schema","complement","concat_impl","","","contains","count","cross_join","default","","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","","","","","","","","","","","","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","","fetch_blocking","fill_nan","fill_null","filter","finish","","","","","finish_no_glob","","","first","fmt","","","","","force_parallel","from","","","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","full_join","get_current_optimizations","glob","","","","group_by","group_by_dynamic","group_by_stable","head","hive_options","","how","include_file_paths","","infer_schema_length","init","","","","","","","","","","inner_join","insert","intersection","intersects","into","","","","","","","","","","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","join_where","last","lazy","","left_join","left_on","limit","logical_plan","","low_memory","","map","map_python","max","mean","median","merge_sorted","min","n_rows","","","","","","name","new","","","new_paths","","new_with_sources","","not","null_count","on","optimize","parallel","pivot","profile","quantile","rechunk","","","","","remove","rename","reverse","right_on","rolling","row_index","","","","","","scan_from_python_function","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","schema","","schema_only","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","sources","","","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","","to_alp","to_alp_optimized","to_dot","to_owned","","","","","","","","","toggle","top_k","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","union","unique","unique_generic","unique_stable","unique_stable_generic","unnest","unpivot","use_statistics","validate","var","vzip","","","","","","","","","","with","with_batch_size","with_cache","with_cloud_options","","with_cluster_with_columns","with_collapse_joins","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","","with_include_file_paths","","with_infer_schema_length","","with_low_memory","with_missing_is_null","with_n_rows","","","","","with_new_streaming","with_null_values","with_optimizations","with_paths","","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","","","with_row_estimate","with_row_index","","","","","","with_schema","","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_sources","","","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IEJoin","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","","OneToMany","OneToOne","Ordinal","OtherScalar","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","","","","","","","","","","","","","","","","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","closed_window","","cmp","coalesce","compare","compression","","compute_schema","data_page_size","days","days_only","default","","","","","","","","","","","","deref","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","descending","describe","describe_tree_format","deserialize","","","","","","","","","","","","","","","","diagonal","display","drop","","","","","","","","","","","","","","","","","","eq","","","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","every","fmt","","","","","","","","","","","","","","","","","","","fmt_str","from","","","","","","","","","","","","","","","","","","","","from_partitioned_ds","get_datatype","group_by_dynamic","hash","","","","","","","","","","","","","","","how","include_bom","include_boundaries","include_header","index_column","","init","","","","","","","","","","","","","","","","","","into","","","","","","","","","","","","","","","","","","into_iter","is_asof","is_constant_duration","is_full_days","is_ie","is_scalar","is_valid_join","is_zero","join_nulls","label","lit","","","","maintain_order","","","","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","","next_batch","offset","","output_schema","parallel","parse","parsed_int","partial_cmp","period","","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","","serialize","","","","","","","","","","","","","","","","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","","to_alp","to_any_value","to_owned","","","","","","","","","","","","","","","","to_string","","","to_supertypes","to_writer","","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","try_to_compact_string","","","type_id","","","","","","","","","","","","","","","","","","validation","vzip","","","","","","","","","","","","","","","","","","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","dtype","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1725,"polars_lazy::dsl::AggExpr"],[1732,"polars_lazy::dsl::BooleanFunction"],[1735,"polars_lazy::dsl::Expr"],[1770,"polars_lazy::dsl::FunctionExpr"],[1815,"polars_lazy::dsl::StringFunction"],[1835,"polars_lazy::dsl::TemporalFunction"],[1837,"polars_lazy::dsl::binary"],[1858,"polars_lazy::dsl::cat"],[1859,"polars_lazy::dsl::dt"],[1915,"polars_lazy::dsl::function_expr"],[2146,"polars_lazy::dsl::function_expr::BooleanFunction"],[2149,"polars_lazy::dsl::function_expr::FunctionExpr"],[2194,"polars_lazy::dsl::function_expr::StringFunction"],[2214,"polars_lazy::dsl::function_expr::TemporalFunction"],[2216,"polars_lazy::dsl::function_expr::cat"],[2218,"polars_lazy::dsl::function_expr::pow"],[2222,"polars_lazy::dsl::function_expr::rolling"],[2256,"polars_lazy::dsl::function_expr::rolling_by"],[2289,"polars_lazy::dsl::function_expr::trigonometry"],[2333,"polars_lazy::dsl::functions"],[2408,"polars_lazy::dsl::python_udf"],[2473,"polars_lazy::dsl::string"],[2535,"polars_lazy::dsl::udf"],[2541,"polars_lazy::frame"],[3029,"polars_lazy::frame::pivot"],[3031,"polars_lazy::prelude"],[3655,"polars_lazy::prelude::DslPlan"],[3707,"polars_lazy::prelude::LiteralValue"],[3710,"dyn_clone::sealed"],[3711,"polars_plan::dsl::meta"],[3712,"polars_plan::dsl::expr"],[3713,"polars_plan::dsl::struct_"],[3714,"polars_utils::pl_str"],[3715,"alloc::sync"],[3716,"polars_error"],[3717,"core::result"],[3718,"polars_plan::dsl::selector"],[3719,"core::convert"],[3720,"polars_plan::dsl::array"],[3721,"polars_plan::dsl::list"],[3722,"polars_plan::dsl::expr_dyn_fn"],[3723,"polars_core::frame::column"],[3724,"core::option"],[3725,"core::ops::function"],[3726,"core::marker"],[3727,"polars_plan::plans::visitor"],[3728,"polars_plan::dsl::function_expr"],[3729,"polars_core::datatypes::dtype"],[3730,"polars_core::chunked_array::ops::sort::options"],[3731,"polars_plan::dsl::function_expr::schema"],[3732,"polars_core::datatypes::field"],[3733,"core::any"],[3734,"alloc::vec"],[3735,"polars_plan::dsl::binary"],[3736,"core::clone"],[3737,"polars_plan::dsl::udf"],[3738,"polars_core::chunked_array::cast"],[3739,"polars_plan::dsl::cat"],[3740,"polars_plan::dsl::arity"],[3741,"polars_plan::dsl::function_expr::bitwise"],[3742,"polars_plan::dsl::function_expr::boolean"],[3743,"polars_plan::dsl::function_expr::cat"],[3744,"polars_plan::dsl::function_expr::datetime"],[3745,"polars_plan::dsl::function_expr::pow"],[3746,"polars_plan::dsl::function_expr::strings"],[3747,"polars_plan::dsl::function_expr::struct_"],[3748,"polars_plan::dsl::functions::temporal"],[3749,"polars_plan::dsl::options"],[3750,"core::iter::traits::collect"],[3751,"polars_lazy::dsl::eval"],[3752,"polars_core::utils"],[3753,"polars_time::windows::duration"],[3754,"polars_time::windows::group_by"],[3755,"polars_core::datatypes::time_unit"],[3756,"serde::de"],[3757,"polars_plan::plans"],[3758,"polars_core::series"],[3759,"polars_core::series::ops"],[3760,"polars_plan::dsl::dt"],[3761,"core::cmp"],[3762,"polars_lazy::dsl::list"],[3763,"polars_arrow::legacy::kernels::ewm"],[3764,"polars_core::chunked_array::ops"],[3765,"core::fmt"],[3766,"polars_plan::plans::apply"],[3767,"polars_ops::frame::join::iejoin"],[3768,"polars_plan::dsl::function_expr::binary"],[3769,"polars_plan::dsl::function_expr::range"],[3770,"polars_plan::dsl::function_expr::business"],[3771,"polars_plan::dsl::function_expr::array"],[3772,"polars_plan::dsl::function_expr::list"],[3773,"alloc::string"],[3774,"polars_plan::plans::options"],[3775,"polars_schema::schema"],[3776,"core::hash"],[3777,"polars_ops::series::ops::interpolation::interpolate"],[3778,"polars_ops::series::ops::is_between"],[3779,"polars_plan::dsl::name"],[3780,"polars_plan::plans::lit"],[3781,"polars_core::utils::supertype"],[3782,"polars_plan::dsl::python_udf"],[3783,"polars_utils::idx_vec"],[3784,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3785,"polars_ops::series::ops::rank"],[3786,"polars_time::group_by::dynamic"],[3787,"polars_core::chunked_array::ops::rolling_window"],[3788,"polars_core::datatypes"],[3789,"polars_core::chunked_array"],[3790,"polars_time::chunkedarray::rolling_window"],[3791,"polars_core::chunked_array::ops::search_sorted"],[3792,"serde::ser"],[3793,"polars_core::series::series_trait"],[3794,"polars_plan::dsl::string"],[3795,"polars_ops::chunked_array::list::to_struct"],[3796,"compact_str"],[3797,"polars_ops::series::ops::business"],[3798,"polars_arrow::legacy::kernels::time"],[3799,"polars_plan::dsl::function_expr::rolling"],[3800,"polars_plan::dsl::function_expr::rolling_by"],[3801,"polars_plan::dsl::function_expr::trigonometry"],[3802,"polars_core::frame"],[3803,"rayon::iter"],[3804,"polars_utils::python_function"],[3805,"pyo3::types::any"],[3806,"pyo3::instance"],[3807,"polars_utils::arena"],[3808,"polars_plan::plans::ir"],[3809,"polars_plan::plans::aexpr"],[3810,"polars_plan::frame::opt_state"],[3811,"polars_plan::plans::anonymous_scan"],[3812,"polars_lazy::scan::anonymous_scan"],[3813,"polars_core::schema"],[3814,"polars_utils::index"],[3815,"polars_lazy::frame::exitable"],[3816,"polars_utils::aliases"],[3817,"polars_lazy::scan::csv"],[3818,"polars_lazy::scan::ipc"],[3819,"polars_lazy::scan::ndjson"],[3820,"polars_lazy::scan::parquet"],[3821,"polars_lazy::scan::file_list_reader"],[3822,"polars_io::cloud::options"],[3823,"polars_ops::frame::join::args"],[3824,"bitflags::iter"],[3825,"std::path"],[3826,"polars_plan::plans::ir::scan_sources"],[3827,"polars_io::options"],[3828,"polars_io::csv::write::options"],[3829,"polars_io::ipc::write"],[3830,"polars_io::json"],[3831,"polars_io::parquet::write::options"],[3832,"core::num::nonzero"],[3833,"polars_io::csv::read::options"],[3834,"chrono_tz::timezones"],[3835,"polars_core::datatypes::any_value"],[3836,"polars_core::frame::group_by::proxy"],[3837,"std::io"],[3838,"polars_io::parquet::write::writer"],[3839,"chrono::naive::datetime"],[3840,"polars_plan::dsl::functions::selectors"],[3841,"polars_plan::dsl::functions::horizontal"],[3842,"polars_plan::dsl::functions::arity"],[3843,"polars_plan::dsl"],[3844,"polars_plan::dsl::functions::range"],[3845,"polars_plan::dsl::functions::index"],[3846,"polars_plan::dsl::functions::coerce"],[3847,"polars_plan::dsl::functions::syntactic_sugar"],[3848,"polars_plan::dsl::functions::business"],[3849,"polars_plan::dsl::functions::concat"],[3850,"polars_plan::dsl::functions::correlation"],[3851,"polars_plan::dsl::functions::repeat"],[3852,"polars_utils::python_function::serde_wrap"],[3853,"polars_plan::client"]],"i":"`````CjAhj`Dl1Gh0EfGf422666Ib7`777H`0Gl79`69``9`9AK`G`92;``Gn<3``<<:`:`3<4443<94Gd0======444`4432=8==Gb<5`6>996>>>><`=><I````?777=Hb0``Cj0?9>0<0?``0?05Gj`3==1:::19?jAh33`Gh000000<00000<6`=5=24Dl`993>>5``355Ef06?0016161`>>>160>60>>>7019>6`20046>``0Gf?HnH`099939`:94Gl::::::8`;::1::0:1:2`::70:::0`8::::::8188`111?15:`111111`:``78;5:1:`8`00111:0::0000000>>:40`::`:1`:500`88``;04301FhFjFlFn9<G`Gb:BfGd;>Gj9Gn;HbCjHdHfHhHjHlHnI`IbIdAhF`hl1111j0400`AlAn2`;?2102`22`222`2`22222221021022`2`Dd<3DhDl``5`5`95555555559Ff5348O`8FhFjFlFn6;G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`j0`8En2DhFb4`33`333333FhFjFlFnDl8G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF```````AlAnj00021`0`000`0Il01````>=<1Bf00?><;:972Ff5Dd5hO`lFhFjFlFnDl<G`GbEf==GdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`DljG`GbEfBf0000GdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhAnj00FfAlDd4hO`lFhFjFlFnDl;G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`jAn1`1```1Dl22G`GbEfBf0GdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhj000Gb00Ef00Gd00Gf00Gh00Gj00Gl00Gn00H`00Hb00Hh00Hj00Hl00Hn00I`00Ib00Id00Ah00Kl0j000800000l001111`An22Bf33DhFbEnLf77G`GbEf07Gd0GfGh0Gj0Gl0Gn0H`0Hb0Cj0HdHfHhHjHlHnI`IbIdAhF``67`jFfAlDdAnhO`lFhFjFlFnDl<<<<<<<<<<<<<<G`GbEf0Bf000000000000GdGfGhGjGlGnH`HbCj0000HdHfHhHjHlHn0I`IbIdAh0000F`Bf1`j`An101Al12FfJjBdDdLf77hDl99GbEfGdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhAnj0HdHf25`FfAlDd6hO`lFhFjFlFnDl=G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`0``j0FfAlDdAnhO`lFhFjFlFnDl<G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`jNjAnhEf411044444444`4`4114Al3lO`7`57`577`777777707`7Dd0Bf090209`99`191111G``58:``8:``58::HdHf0`7:<`Hh21=2=8;==>==1===55421?>==`=`=Id?>FjFn=j0000`0>0::0`00`000`00;`00900F`=An2222``2222222222222222222h33Hl0<42244:9Dl5<GbEf?????GdGfGhGjGlGnH`HbCjHhHj>HnI`IbIdAhAn0j1Al211111111210211`1021181`113O`0`132`BfEf5444`FhFl`HdHf198763Fj3FnDl;G`Gb9:GdGfGhGjGlGnH`HbCj?>HhHjHlHnI`IbIdAhF`jDd1EfGdGhGjGlGnH`HbCjAlAnO`==Ff3=2h2lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`Dd0j1DhEnBd3EfGdGhGjGlGnH`HbCjFfAl?AnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF``hAnAl1j01200061206Ff2Dd45O`lFhFjFlFnDl9G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`9`FjFn:<<;Ddl=>=>=>==>=>=11>=>>=>j?AKbAKdAKf2102AKhAKjAKlAKnAL`ALb0ALdALf4ALhALjALlALn3AM`528AMb1AMd11098432323570;5AMfAMhAMjAMlAMnAN`ANbANdANfANhANjANl087;87;7;ANnAO`8AObAOdAOf0?1AOhAOjAOlAOn4AMfB@`B@bB@dB@fB@hB@j:=;B@lB@nBA`BAbBAdBAf54BAh321BAjBAlBAn03721BB`0`Ed0000000000000000000``Kf000000000000000000000000000000000000000000000000000000CjGh0Gf112222222H`0Gl44``4`404`Gn515515222152Gd0666666222226662363666666333Hb077477`772Gj855584887777777477777451582255888858844484844414878464558888`184888888188588485888488848888885555358`5555558`1858`44555848844444442284888584414645`````AKhAKjAKlAMfAMhAMjAMlAMnAN`ANbANdANfANhANjANl087;87;7;ANnAO`8AObAOdAOf0?1AOhAOjAOlAOn4AMfB@`B@bB@dB@fB@hB@j:=;B@lB@nBA`BAbBAdBAf54BAh321BAjBAlBAn03721BB`0`GjGn0`0ABd000`00000000000000000000000000000ABf000`0000000000000000000000000000ABh00000000000000`0000000000000000000000000000````Hd``````````````````````````0Hf`````10`````````100`1010```````10````10101```````ACdOhACj2102122221021022102222221022010210210222102102102102102`AAf000000000000000000000000000000000000000000000000000000000000`F`0000`ADh000000````````0`000000```0AEdABnADfADnAEhAEjAElAEn866580ADj77699999999087654321908765432197731877876543219876543219876543219AF`053421888:005:888642:198765432:198765432:8888:19988765432:88:88:989888100530538:::::119888765432:::::::8800528887421426198765432:8:::198765432::::::88118AG`99299843999999916475372646464;9293`9916453;9929164753999999973;9999;99999999979991649;;29;98999:9876543;;92:9876543;2:9876543;2:9876543;;9999993292:9876543;246649999999696666666464646616644969119966164919664464646966916496699`````AFh0AIfAIh0K`3`011120``1`00111300030311111`0````3``AHl0133``20032``12``4`114211122222221`AFfA@bJdAFn84AH`8AHbA@`AHdAHf;AIjACb<888ADl0007;:9AJf9AFh>AJd:AIf:987AIh76K`AFfA@bJd8AFn8AHl8AH`8AHbA@`AHdAHf;AIjACb<;:98AFh87?6543>21=<;:9087?6543>21=<;:9087?6543>21=<;:9:63=3::<;987654321=<;:AJf:19AJd9AIf9876AIh65K`AFfA@bJd7AFn9AHl8AH`8AHbA@`AHdAHf;AIjACb<4<<;:98AFh87?6543>21=1=<;:AJf:19AJd9AIf9876AIh65K`AFfA@bJdAFn9AHlAH`8AHbA@`AHdAHf;AIjACb;;;:::999888AFh00888777666444333222111<<;::ADl:11998AIf8765AIh545?>=AJf==4<AJd<3;:982276K`73AJ`AFfA@bJdAFn;AHlAH`;AHbA@`AHdAHf>AIjACb86;6;:;:9?8AFh8?7AIf7654AIh43K`?>=AJf=4<AJd<4;:98376225??53=?>AFfObJd36?><;6=00040AHl111AFnADl5A@b8=444608`=AJ`AHf33:8264>5AH`>AHbA@`AHd4AIhAIjACbK`7<2<AFf9==140;?=AFh?9AIf987;6543Jd2AHl6;=11114?1AJfAFn52AJd?5>=<AHf<;:98A@b643852AH`8AHbA@`AHd5AIhAIjACbK`>AFh>AFf:Jd?>2AHl>;AIf;:9>8765AFn4>3AJf163AJd?3>=<AHf<;:966323?0BBb0BBdBBfBBhBBjBBlBBnBC`BCb55BCdBCfBCh14;3BCj:BCl49BCnBD`0>BDbBBb240;4BDd;13:624733?=BBf0BBh>BDf00","f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}00000000000000000000000000000{hj}{{l{Ab{{A`{n}}}}}j}{{hj}{{Af{jAd}}}}000{jj}{{jj}}{{AhAh}}2{{jc}j{{Aj{n}}}}{{}j}{Alj}{Anj}{{jB`}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{{jc}j{{Aj{j}}}}4321{{jcB`}j{{Aj{j}}}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{j}}{b{Cdc}}b}{{Af{CfAd}}}{{Ch{{b{j}}b}{{Bj{{Af{CfAd}}}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`B`}j}{{ce{Bf{{Ab{Bd}}}}B`}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{jj}{{jjClCn}j}11111{{jj}j}2>=2>=2{{jD`}j}{{cDb}j{{Bb{{A`{j}}}}}}4{cj{{Aj{j}}}}{{{b{Dd}}}{{b{{A`{Df}}}}}}`{jAl}{{{b{Dh}}}{{b{Dj}}}}{{{b{Dl}}}{{b{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{j{Bl{Eb}}}j}`{jEd}{{jEfj}j}{{AhAh}}?????????0{b{{b{c}}}{}}000000000000000000000000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000000000000000000000000000000?{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{{jj{Ej{B`}}{Dn{El}}}j}`{{{b{En}}{b{n}}}{{Af{nAd}}}}{{F`{Dn{j}}}{{Af{jAd}}}}{{{b{Dh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{Fb}}BhBh}{{Af{BhAd}}}}{{F`{Dn{j}}}j}{{jCn}j}0{{jCnFd}j}`{jFf}{jj}0{{jjj}j}{{jj}j}0{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{Dl}}}Dl}{{{b{j}}}j}{{{b{{G`{c}}}}}{{G`{c}}}{EhEh}}{{{b{Gb}}}Gb}{{{b{Ef}}}Ef}{{{b{{Bf{c}}}}}{{Bf{c}}}Eh}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Cj}}}Cj}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{Hn}}}Hn}{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{Ah}}}Ah}{{{b{F`}}}F`}{{b{b{Cdc}}}f{}}00000000000000000000000000000{bf}00000000000000000000000000000{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{ej{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{Alc}j{{Aj{j}}}}{{Anc}j{{Aj{j}}}}{jj}00021{{jjIj}j}{{jB`}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}111{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}2{{IljInB`}j}0{{j{Dn{J`}}{Bl{c}}B`B`}j{{Jb{n}}}}{{jjJdJf}j}{Hdj}{{jjJdJf{Bl{Jh}}{Bl{n}}}j}0```{{}j}{{}{{Bf{{Ab{Bd}}}}}}{{}{{Bf{{Ab{Jj}}}}}}{{}{{Bf{{Ab{Fb}}}}}}{{}Hd}{{}Hf}{{}Hj}{{}Hl}{{}Hn}{{}I`}{{}Id}{jj}{In{{b{c}}}{}}000000000000000{{{b{{Bf{c}}}}}b{}}111111111111111111111{In{{b{Cdc}}}{}}000000000000000000000000000000000000{c{{Af{Dl}}}Jl}{c{{Af{j}}}Jl}{c{{Af{{G`{e}}}}}Jl{JnEh}}{c{{Af{Gb}}}Jl}{c{{Af{Ef}}}Jl}{c{{Af{{Bf{{Ab{K`}}}}}}}Jl}{c{{Af{{Bf{{Ab{Dh}}}}}}}Jl}{c{{Af{{Bf{Kb}}}}}Jl}{c{{Af{{Bf{{Ab{Bd}}}}}}}Jl}{c{{Af{{Bf{{Ab{En}}}}}}}Jl}{c{{Af{Gd}}}Jl}{c{{Af{Gf}}}Jl}{c{{Af{Gh}}}Jl}{c{{Af{Gj}}}Jl}{c{{Af{Gl}}}Jl}{c{{Af{Gn}}}Jl}{c{{Af{H`}}}Jl}{c{{Af{Hb}}}Jl}{c{{Af{Cj}}}Jl}{c{{Af{Hh}}}Jl}{c{{Af{Hj}}}Jl}{c{{Af{Hl}}}Jl}{c{{Af{Hn}}}Jl}{c{{Af{I`}}}Jl}{c{{Af{Ib}}}Jl}{c{{Af{Id}}}Jl}{c{{Af{Ah}}}Jl}{{AnClKd}j}{{jClKd}j}{{jj}}{{jc}j{{Aj{j}}}}{Inf}000000000000000000000000000000000000{jj}{Anj}1`{jKf}{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{Hfj}{{jJ`B`}j}{{{b{Dl}}{b{Dl}}}B`}{{{b{j}}{b{j}}}B`}:{{{b{{G`{c}}}}{b{{G`{c}}}}}B`{KhEh}}{{{b{Gb}}{b{Gb}}}B`}{{{b{Ef}}{b{Ef}}}B`}{{{b{{Bf{Kb}}}}{b{{Bf{Kb}}}}}B`}{{{b{{Bf{{Ab{c}}}}}}{b{{Bf{{Ab{c}}}}}}}B`Kj}{{{b{Gd}}{b{Gd}}}B`}{{{b{Gf}}{b{Gf}}}B`}{{{b{Gh}}{b{Gh}}}B`}{{{b{Gj}}{b{Gj}}}B`}{{{b{Gl}}{b{Gl}}}B`}{{{b{Gn}}{b{Gn}}}B`}{{{b{H`}}{b{H`}}}B`}{{{b{Hb}}{b{Hb}}}B`}{{{b{Cj}}{b{Cj}}}B`}{{{b{Hh}}{b{Hh}}}B`}{{{b{Hj}}{b{Hj}}}B`}{{{b{Hl}}{b{Hl}}}B`}{{{b{Hn}}{b{Hn}}}B`}{{{b{I`}}{b{I`}}}B`}{{{b{Ib}}{b{Ib}}}B`}{{{b{Id}}{b{Id}}}B`}{{{b{Ah}}{b{Ah}}}B`}{{jc}j{{Aj{j}}}}{{b{b{c}}}B`{}}00000000000000000000000000000000000000000000000000000000{{KljB`}j}0{{jKn}j}{{jjJd}j}11`{{jc}j{{Jb{n}}}}{{jc}j{{Bb{{A`{Cn}}}}}}{jj}0{{jjj}j}{{lCl}j}{{l{b{E`}}}j}{{le}j{{Aj{n}}}{{Ih{}{{If{c}}}}}};;{{jL`}j}<{{}j}{Anj}77{{}{{Bf{{Ab{Bd}}}}}}8{{jj}j}{{{b{Dh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Fb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{En}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Lf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{j}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{{G`{c}}}}{b{CdLb}}}{{Af{fLd}}}Eh}{{{b{Gb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ef}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{{Bf{c}}}}{b{CdLb}}}{{Af{fLd}}}{}}{{{b{Gd}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Gh}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gj}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gl}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gn}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{H`}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Hb}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Cj}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Hd}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hj}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hn}}{b{CdLb}}}{{Af{fLd}}}}{{{b{I`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ib}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Id}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ah}}{b{CdLb}}}{{Af{fLd}}}}{{{b{F`}}{b{CdLb}}}{{Af{fLd}}}}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}``{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{j{Bl{Eb}}}j}{cc{}}00000000000{J`j}{Ijj}{Lhj}3{B`j}{Ebj}{Ljj}{Llj}{Lnj}{M`j}{Elj}{Clj}{Dlj}{{{b{E`}}}j}==={MbEf}{Md{{Bf{{Ab{Dh}}}}}}{Gd{{Bf{{Ab{Dh}}}}}}{Mf{{Bf{{Ab{Dh}}}}}}{Gl{{Bf{{Ab{Dh}}}}}}{Gj{{Bf{{Ab{Dh}}}}}}{Mh{{Bf{{Ab{Dh}}}}}}{Mj{{Bf{{Ab{Dh}}}}}}{H`{{Bf{{Ab{Dh}}}}}}{Ml{{Bf{{Ab{Dh}}}}}}{Gh{{Bf{{Ab{Dh}}}}}}{Cj{{Bf{{Ab{Dh}}}}}}{cc{}}{Hb{{Bf{{Ab{Dh}}}}}}11111111{H`Cj}{GjCj}{GhCj}{MdCj}5555555{I`Hn}666{nAh}{{{b{E`}}}Ah}8{MnAh}{jAh}:{Cn{{Bf{{Ab{Bd}}}}}}``{{jc{Bf{{Ab{Bd}}}}N`}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}`{{AnjB`}j}{{jc}j{{Aj{j}}}}{{Anjj}j}{{jInIn}j}{{AljB`}j}43{Ffj}{{{b{Jj}}{b{{Nb{Cn}}}}Nd{b{Df}}{b{Df}}}{{Bl{Df}}}}{{{b{Bd}}{b{{Nb{Cn}}}}Nd{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Dd}}}In}{{{b{Lf}}{b{{Nb{Cn}}}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}88{{{b{h}}}B`}{{{b{Dl}}{b{Cdc}}}fNf}{{jEbEbEbEb}j}{{{b{j}}{b{Cdc}}}fNf}{{{b{Gb}}{b{Cdc}}}fNf}{{{b{Ef}}{b{Cdc}}}fNf}{{{b{Gd}}{b{Cdc}}}fNf}{{{b{Gf}}{b{Cdc}}}fNf}{{{b{Gh}}{b{Cdc}}}fNf}{{{b{Gj}}{b{Cdc}}}fNf}{{{b{Gl}}{b{Cdc}}}fNf}{{{b{Gn}}{b{Cdc}}}fNf}{{{b{H`}}{b{Cdc}}}fNf}{{{b{Hb}}{b{Cdc}}}fNf}{{{b{Cj}}{b{Cdc}}}fNf}{{{b{Hh}}{b{Cdc}}}fNf}{{{b{Hj}}{b{Cdc}}}fNf}{{{b{Hl}}{b{Cdc}}}fNf}{{{b{Hn}}{b{Cdc}}}fNf}{{{b{I`}}{b{Cdc}}}fNf}{{{b{Ib}}{b{Cdc}}}fNf}{{{b{Id}}{b{Cdc}}}fNf}{{{b{Ah}}{b{Cdc}}}fNf}{{Anj}j}{{j{Bl{In}}}j}{{j{Bl{j}}{Bl{In}}B`B`}j}``{jj}`{cj{{Bb{{A`{Cl}}}}}}{{}In}000000000000000000000000000000000000`{{jjClCn}j}{{jjj}j}{{jNh}j}{{jj}j}{{}c{}}000000000000000000000000000000000000{{{b{j}}}}{NjAn}{AnAn}{h{{Af{{`{Nl}}Ad}}}}{{{b{Ef}}}B`}{{jccNn}j{{Aj{j}}}}{{{b{h}}}B`}{{{b{h}}B`}B`}3???{{jc}j{{Aj{j}}}}{jj}0000000330{{AljB`}j}{{AnjB`}j}{lj}{O`j}{{jB`B`}j}{{}j}{Anj}7107{jAn}{cjOb}{{jJ`}j}:;;:;;{{O`c}j{{Bn{{b{n}}}{{Bj{{Af{nAd}}}}}}C`Cb}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{j{b{Cdc}}{b{Cd}}}{{Af{jAd}}}{{Ch{j{b{Cd}}}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}{Bl{{b{n}}}}}{{Af{DfAd}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Cn}}}{{Bj{Cn}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{{jc}j{{Ch{j}{{Bj{j}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Df}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}{{O`{Ab{Bn}}}j}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{Df}}}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}:{{ce{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`{Bl{Of}}}j}2{{{b{Dd}}}{{Af{DfAd}}}}{{jOhB`}j}1111{{{G`{{Bf{{Ab{Dh}}}}}}}{{Af{{Bf{{Ab{Dh}}}}Ad}}}}{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jO`}`44`{j}{{jc}j{{Aj{j}}}}0<{{{b{{A`{Df}}}}}Dd}{c{{Bf{c}}}{}}{{jjj}Hd}{{}Hf}{jAh}{{n{Dn{Df}}{Bf{{Ab{Bd}}}}c}F`Dh}{{{b{j}}{b{Cd{Oj{{b{j}}}}}}}f}{{j{b{Cd{Oj{j}}}}}f}>>{Clj}?``9{{Fjc}j{{Aj{j}}}}{{Fnc}j{{Aj{j}}}}{{{b{h}}}{{Af{nAd}}}}{{je}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{je{Bl{{Ol{eD`}}}}I`}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jj}j}{jj}0{{jjIj}j}{{}j}{h{{Af{{Dn{j}}Ad}}}}{{jc}j{{Aj{j}}}}{{O`{b{E`}}}j}05`{{j{Dn{J`}}{Bl{c}}B`B`B`}j{{Jb{n}}}}{{jIn{Bl{c}}B`B`B`}j{{Jb{n}}}}{{{b{E`}}jOn}j}{{jjOn}j}9{{jA@`{Bl{Eb}}}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jB`}j}{{jj}}{{le}j{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{cj}j{{Aj{j}}}};{{jcc}j{{Aj{j}}}}{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{jcc{Bl{c}}{Bl{Cn}}}j{{Aj{j}}}}{{j{b{{A`{Cl}}}}}j}`{Alj}{Anj}{jj}00{{jA@b}j}{{jjHh}j}0{{j{Ab{Bn}}{Bf{{Ab{Bd}}}}A@d}j}{{jInc}j{{Ch{{b{Cd{A@h{A@f}}}}}{{Bj{{Bl{J`}}}}}}C`CbA@j}}{{jA@d}j}{{jjA@l}j}101010{{jOnJ`A@d}j}{{jjOnJ`A@l}j}{{jInB`}j}434343{{{b{h}}}{{Dn{n}}}}{{jLj}j}{{jEl}j}``{{}{{Bf{{Ab{Bd}}}}}}{{jjB`B`{Bl{Eb}}}j}{{AnjB`B`{Bl{Eb}}}j}01{{jcA@n}j{{Aj{j}}}}``{{{b{Dl}}c}AfAA`}{{{b{j}}c}AfAA`}{{{b{{G`{c}}}}e}Af{AAbEh}AA`}{{{b{Gb}}c}AfAA`}{{{b{Ef}}c}AfAA`}{{{b{{Bf{{Ab{Dh}}}}}}c}AfAA`}{{{b{{Bf{Kb}}}}c}AfAA`}{{{b{{Bf{{Ab{K`}}}}}}c}AfAA`}{{{b{{Bf{{Ab{En}}}}}}c}AfAA`}{{{b{{Bf{{Ab{Bd}}}}}}c}AfAA`}{{{b{Gd}}c}AfAA`}{{{b{Gf}}c}AfAA`}{{{b{Gh}}c}AfAA`}{{{b{Gj}}c}AfAA`}{{{b{Gl}}c}AfAA`}{{{b{Gn}}c}AfAA`}{{{b{H`}}c}AfAA`}{{{b{Hb}}c}AfAA`}{{{b{Cj}}c}AfAA`}{{{b{Hh}}c}AfAA`}{{{b{Hj}}c}AfAA`}{{{b{Hl}}c}AfAA`}{{{b{Hn}}c}AfAA`}{{{b{I`}}c}AfAA`}{{{b{Ib}}c}AfAA`}{{{b{Id}}c}AfAA`}{{{b{Ah}}c}AfAA`}{{Anc}j{{Aj{j}}}}0{{jAAd}j}1{{Alj}j}{{Anj}j}{{jj}j}{{jce}j{{Aj{j}}}{{Aj{j}}}}{jj}{{j{Bl{Eb}}}j}111{{jB`}j}{{Anjj}j}4{{AlD`}j}{{AnD`}j}{{jD`}j}{{jeDb}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jjIjB`}j}8{{AlIj}j}{{AnIj}j}{{jIj}j}{jAAf}`{{jCn}j}`{jl}{{jj}}{{AhAh}}{{O`{b{E`}}}j}0{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{EfEf}{{Anj}j}{{j{Bl{In}}}j}55{{jjj}j}{{Fhc}Fj{{Aj{j}}}}{{Flc}Fn{{Aj{j}}}}{{jjJdJf}j}```{{AnIn}j}{{{b{j}}{b{{Nb{Cn}}}}Nd}{{Af{DfAd}}}}={O`j}{bc{}}00000000000000000000000000000={{{b{Dd}}}{{Af{DfAd}}}}{bMn}000000000{{Al{Bl{{Ab{Bn}}}}}{{Af{jAd}}}}{{AnAAh{Bl{{Ab{Bn}}}}In}j}5{{jj}j}{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{c{{Af{e}}}{}{}}000000000000000000000000000000000000{{}{{Af{c}}}{}}000000000000000000000000000000000000{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}}}{{jc}{{Af{jAd}}}{{Ch{j}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Df}}}{{Bj{{Af{DfAd}}}}}}}}{{{b{Dh}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{En}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{Bd}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{b{{Af{AAjAAl}}}}000000000{bAAn}000000000000000000000000000000000000`{hj}{{Anc}j{{Aj{j}}}}{Alj}{Anj}{jj}02100{{jB`B`{b{E`}}B`}j}`{{AlIj}j}{{AnIj}j}{{jIj}j}`{{}c{}}000000000000000000000000000000000000`{cFh{{Aj{j}}}}{{Fjc}Fl{{Aj{j}}}}{{Fnc}Fl{{Aj{j}}}}`{{Hdj}Hd}0{{Hfj}Hf}{{{b{Dd}}Cn}{{Af{DfAd}}}}{{l{Dn{j}}}{{Af{jAd}}}}{{Hfjjj}Hf}{{Hdjjj}Hd}1545445454{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{{b{Dd}}}{{Af{DfAd}}}}76{{HdJh}Hd}{{Hd{Bl{n}}}Hd}89{{jc}j{{Aj{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{EdB`}j}{Edj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{Edj}j}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{Inf}3{cc{}}87{{}In}{{}c{}}96{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAn}3``{{Kfj{Ej{B`}}{Dn{El}}AB`}j}{Kfj}=<{{KfJh}j}1{{KfjJh}j}{{Kfn}j}333=<;3:3983333333333{{Kfj}j}44{{Kf{Bl{n}}jABb}j}15{{Kf{b{E`}}}j}65066666662:98;6656````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABd}}}ABd}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABd}}}Jl}{Inf}{{{b{ABd}}{b{ABd}}}B`}{{{b{ABd}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABd}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABd}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABf}}}ABf}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABf}}}Jl}{Inf}{{{b{ABf}}{b{ABf}}}B`}{{{b{ABf}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABf}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABf}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABh}}}ABh}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABh}}}Jl}{Inf}{{{b{ABh}}{b{ABh}}}B`}{{b{b{c}}}B`{}}00{{{b{ABh}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABh}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABh}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7``{{}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}`0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjClCn}j}{{cDb}j{{Bb{{A`{j}}}}}}{cj{{Aj{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{jCn}j}{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{c{{ABl{{Dn{ABj}}}}}{{AC`{}{{If{ABn}}}}}}{ej{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{cACb}{{ABl{ABn}}}{{Bb{{A`{ABn}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}11{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{jjIj}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jjJdJf}j}0{Hdj}{{jjJdJf{Bl{Jh}}{Bl{n}}}j}0``{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{Hfj}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{cj{{Bb{{A`{Cl}}}}}}{{jjClCn}j}{{jjj}j}{jj}0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{E`}}}j}00```0````2{{jjIj}j}{{{b{E`}}jOn}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{cj}j{{Aj{j}}}}{{jjHh}j}0``{{jjIjB`}j}6{{jjJdJf}j}0````````````{{bd}f}{b{{b{c}}}{}}00{{{b{Cd}}}{{b{Cdc}}}{}}00{{{b{Oh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{ACd}}ABj}{{Af{ABjAd}}}}{{{b{ACd}}}ACd}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}00{In{{b{Cdc}}}{}}00{c{{Af{ACd}}}Jl}{Inf}00{{{b{ACd}}{b{ACd}}}B`}{{b{b{c}}}B`{}}00{{{b{ACd}}{b{CdLb}}}{{Af{fLd}}}}{cc{}}0{{{ACh{ACf}}}ACd}1{{{b{ACj}}{b{{Nb{Cn}}}}Nd{b{{A`{Df}}}}}{{Af{DfAd}}}}{{}In}00{{}c{}}00{{{ACh{ACf}}{Bl{Cn}}B`B`}Oh}{{{Bl{Cn}}}ACj}{{{b{ACd}}c}AfAA`}{bc{}}{{{b{{A`{Ij}}}}}{{Af{ACdAd}}}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{{{b{Oh}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{ACj}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{ACd}}}{{Af{{Dn{Ij}}Ad}}}}{bAAn}00;;;`{{AAfB`}j}{AAfj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{AAfjB`}j}{{AAfj}j}1{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{Inf}37{{AAfjIn}j}4{{AAf{b{E`}}}{{Af{jAd}}}}65{cc{}}6;:{{}In}{{}c{}}{{AAf{b{E`}}B`}j}{{AAf{Bl{Cn}}{Bl{In}}}j}:>>{{AAfInACl}j}0{{AAfjjB`}j}0{{AAfjjB`Cl}j}{AAfj}{{AAfjj}j}?;;?;??????{{AAfCnHjj}j}{{AAfj}j}{{AAfHj}j}{{AAf{Bl{Jh}}{Bl{n}}Hjj}j}{{AAfIn}j}{{AAfjB`}j}7377{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAn}{{}c{}}8``````````````````````````````````{{bd}f}00000000{{ABnc}{{ABl{ABj}}}{{Bn{ACn{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{Bj{{ABl{f}}}}}}}}{{ABnB`}ABn}{{ADfc}ABn{{Bb{{A`{j}}}}}}{{}ADh}`{{ADjB`}ADj}{{{Ab{ADl}}ADn}{{ABl{ABn}}}}{{ABnABncc}ABn{{Aj{j}}}}{{ADfcAE`}ABn{{Bn{ABj}{{Bj{{ABl{ABj}}}}}}C`Cb}}{{ADhADh}ADh}{{{b{CdADh}}ADh}f}10{{{b{ADh}}}Lj}021{b{{b{c}}}{}}000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000{{ABnAEbcDb}ABn{{Bb{{A`{j}}}}}}{ABnABn}``{{{b{AEd}}}f}{{ABn{AEf{{b{E`}}Cn}}B`}ABn}{{ABnCnB`}ABn}{{{b{AEd}}}AEd}{{{b{ABn}}}ABn}{{{b{ADf}}}ADf}{{{b{ADn}}}ADn}{{{b{AEh}}}AEh}{{{b{AEj}}}AEj}{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{{b{ADh}}}ADh}{{b{b{Cdc}}}f{}}00000000{bf}00000000{{{b{AF`}}}{{Bl{{b{AFb}}}}}}0{{{b{AEh}}}{{Bl{{b{AFb}}}}}}{{{b{AEl}}}{{Bl{{b{AFb}}}}}}``{{ADjAFd}ADj}{ABn{{ABl{ABj}}}}{ABn{{ABl{AEd}}}}{{{b{CdABn}}}{{ABl{AE`}}}}{ADhADh}{{{b{AF`}}{Dn{ABn}}}{{ABl{ABn}}}}0{{{b{AEh}}{Dn{ABn}}}{{ABl{ABn}}}}{{{b{ADh}}ADh}B`}{ABnABn}{{ABnABn{Bl{n}}}ABn}{{}ABn}{{}ADn}{{}AEj}{{}AEn}{{}ADh}{In{{b{c}}}{}}000000000{In{{b{Cdc}}}{}}000000000{{{b{ABn}}}{{ABl{Mn}}}}000{{ADhADh}ADh}{Inf}{{{b{CdAEd}}}f}11{{ABne}ABn{{Aj{Ah}}}{{Ih{}{{If{c}}}}}}22222220{{ABn{Bl{{Dn{j}}}}}ABn}8{{{b{ABn}}B`}{{ABl{Mn}}}}{{ABne}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{{b{CdADh}}c}f{{Ih{}{{If{ADh}}}}}}{{{b{AEd}}}{{Bl{{ABl{ABj}}}}}}{{ABnIn}{{ABl{ABj}}}}{{{b{AEd}}}{{ABl{ABj}}}}{{ABnc}ABn{{Aj{j}}}}0{{ABnj}ABn}{ADjABn}{AF`{{ABl{ABn}}}}0{AEh{{ABl{ABn}}}}{AEl{{ABl{ABn}}}}210{ABnABn}{{{b{ADh}}{b{CdLb}}}{{Af{fLd}}}}0000{{ADjB`}ADj}{cc{}}00{K`ABn}{ADfABn}2222222{Lj{{Bl{ADh}}}}{LjADh}00{cADh{{Ih{}{{If{ADh}}}}}}{{{b{E`}}}{{Bl{ADh}}}}{{ABnABncc}ABn{{Aj{j}}}}{{{b{ABn}}}ADh}{{{b{AF`}}}B`}0{{{b{AEh}}}B`}`{{ABne}ADf{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{ABnjcAFf}ADf{{Bb{{A`{j}}}}}}1{{ADf{Bl{In}}}ABn}``{{ADjAFh}ADj}```{{}In}0000000008{{{b{CdADh}}ADh}f}{{ADhADh}ADh}{{{b{ADh}}ADh}B`}{{}c{}}000000000{ADh}{{{b{ADh}}}B`}0{{{b{ADh}}}{{AFj{ADh}}}}{{{b{ADh}}}{{AFl{ADh}}}}{{ABnABnccAFn}ABn{{Bb{{A`{j}}}}}}{ABnADj}{{ADjB`}ADj}{{ADj{Dn{j}}}ABn}{ABnABn}{AG`ABn}1{{ABnABncc}ABn{{Aj{j}}}}{{ADjc}ADj{{Bb{{A`{j}}}}}}{{ABnAEb}ABn}``{{AElB`}AEl}`{{ABncAGb{Bl{{Ab{Lf}}}}{Bl{{b{E`}}}}}ABn{{Bn{ABj}{{Bj{{ABl{ABj}}}}}}C`Cb}}{{ABnACdAGb{Bl{AE`}}B`}ABn}777{{ABnABnc}{{ABl{ABn}}}{{Aj{n}}}}8{{{b{AF`}}}{{Bl{In}}}}{{{b{AEh}}}{{Bl{In}}}}{{{b{AEl}}}{{Bl{In}}}}````>{cAEh{{Bb{AGd}}}}{cAEl{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}}AEh}{{{Ab{{A`{AGf}}}}}AEl}{AGhAEh}{AGhAEl}{ADhADh}{ABnABn}{{ADjc}ADj{{Bb{{A`{j}}}}}}{{ABn{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{ABl{ACn}}}}``{ABn{{ABl{{Ol{ABjABj}}}}}}{{ABnjOn}ABn}{{{b{AF`}}}B`}{{{b{AEh}}}B`}{{{b{AEl}}}B`}``{{{b{CdADh}}ADh}f}{{ABneiB`}ABn{{Bb{E`}}}{{Ih{}{{If{c}}}}}{{Bb{E`}}}{{Ih{}{{If{g}}}}}}98{{ABnjcA@b}ADf{{Bb{{A`{j}}}}}}{{{b{AF`}}}{{Bl{{b{AGj}}}}}}{{{b{AEh}}}{{Bl{{b{AGj}}}}}}{{{b{AEl}}}{{Bl{{b{AGj}}}}}}```{{AGlAGnB`}ABn}{{cAEj}{{ABl{ABn}}}{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}AEj}{{ABl{ABn}}}}{{AGhAEj}{{ABl{ABn}}}}{{cAEn}{{ABl{ABn}}}{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}AEn}{{ABl{ABn}}}}{{AGhAEn}{{ABl{ABn}}}}``{{}ADh}{{{b{CdABn}}{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{ABl{AE`}}}}{{ABnc}ABn{{Bb{{A`{j}}}}}}0{{ABnABncc}ABn{{Aj{j}}}}{{{b{CdADh}}ADhB`}f}{{{b{ABn}}{ADb{AD`}}{ADb{ADd}}}f}{{ABnc}ABn{{Aj{j}}}}{{ABnce}ABn{{Aj{j}}}{{Aj{j}}}}{{ABncAH`}{{ABl{f}}}{{Bb{AGd}}}}{{ABncAHb}{{ABl{f}}}{{Bb{AGd}}}}{{ABnMn{Bl{AFb}}AHb}{{ABl{f}}}}{{ABncAHd}{{ABl{f}}}{{Bb{AGd}}}}{{ABncAHf}{{ABl{f}}}{{Bb{AGd}}}}{{ABnMn{Bl{AFb}}AHf}{{ABl{f}}}}`{{ABnClAEb}ABn}{{ABncDb}ABn{{Jb{n}}}}{{ABncDb}ABn{{Bb{{A`{j}}}}}}{{{b{AF`}}}{{b{AGh}}}}{{{b{AEh}}}{{b{AGh}}}}{{{b{AEl}}}{{b{AGh}}}}{{ABnIj}ABn}{{ADhADh}ADh}{{{b{CdADh}}ADh}f}{{ADjc}ADj{{Aj{n}}}}{ABnABn}3{{ABnAEb}ABn}{{ADf{Bl{In}}}ABn}{ABn{{ABl{AHh}}}}0{{{b{ABn}}B`}{{ABl{Mn}}}}{bc{}}000000007{{ABnAEbcDb}ABn{{Bb{{A`{j}}}}}}{c{{Af{e}}}{}{}}000000000{{}{{Af{c}}}{}}000000000{bAAn}000000000<{{ABn{Bl{{Dn{Mn}}}}AHj}ABn}{{ABn{Bl{e}}AHj}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABn{Bl{{Dn{n}}}}AHj}ABn}1{{ABne}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABnId}ABn}`{{ADjAHl}ADj}{{ABnIj}ABn}{{}c{}}000000000{{ADjABn}ADj}{{AEl{Bl{AHn}}}AEl}{{AEhB`}AEh}{{AEh{Bl{AFb}}}AEh}{{AEl{Bl{AFb}}}AEl}{{ABnB`}ABn}0{{ABnj}ABn}{{ABnc}ABn{{Bb{{A`{j}}}}}}022{{AEh{Bl{n}}}AEh}{{ABnc}ABn{{Bb{{A`{ABn}}}}}}7{{AEh{Bl{AE`}}}AEh}{{AEhAI`}AEh}{{AEhIj}AEh}:::{{AElB`}AEl}5{{AEl{Bl{n}}}AEl}{{AEh{Bl{In}}}AEh}>=={{AF`c}AF`{{Aj{{Bl{In}}}}}}{{AEhc}AEh{{Aj{{Bl{In}}}}}}2{{AEl{Bl{In}}}AEl}{{AElc}AEl{{Aj{{Bl{In}}}}}}>{{AEh{Bl{AIb}}}AEh}{{ABnADh}ABn}{{AF`{Ab{{A`{AGf}}}}}AF`}0{{ABnB`}ABn}0{{AEh{Bl{Ij}}}AEh}{{AEhB`}AEh}{{AF`B`}AF`}1=3{{AF`c}AF`{{Aj{{Bl{AGj}}}}}}{{ABnc{Bl{AEb}}}ABn{{Aj{n}}}}{{AEhc}AEh{{Aj{{Bl{AGj}}}}}}{{AEh{Bl{AGj}}}AEh}{{AEl{Bl{AGj}}}AEl}{{AElc}AEl{{Aj{{Bl{AGj}}}}}}{{AEh{Bl{AE`}}}AEh}{{AEl{Bl{AE`}}}AEl}{{AEhc}{{ABl{AEh}}}{{Bn{AGl}{{Bj{{ABl{AGl}}}}}}}}1{{AEhIj}AEh}={{AEhIn}AEh}0>{{AF`AGh}AF`}{{AEhAGh}AEh}{{AElAGh}AEl}{{ABnB`}ABn}{{AEhB`}AEh}01{ABnABn}{{{b{ABj}}e{Bl{i}}{Bl{m}}B`{Bl{j}}{Bl{{b{E`}}}}}{{ABl{ABj}}}{{Aj{n}}}{{Ih{}{{If{c}}}}}{{Aj{n}}}{{Ih{}{{If{g}}}}}{{Aj{n}}}{{Ih{}{{If{k}}}}}}0```````````````````````````````````````````````````````````````````````````````````{{bd}f}000000000000000{{{b{Jd}}Cl{Bl{{b{AId}}}}}{{Af{ClAd}}}}00{{{b{ADl}}}B`}00{{{b{ADl}}}{{b{Dj}}}}`{b{{b{c}}}{}}00000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}00000000000000000{{{b{AFf}}}AFf}{{{b{A@b}}}A@b}{{{b{Jd}}}Jd}{{{b{AFn}}}AFn}{{{b{AFh}}}AFh}{{{b{AHl}}}AHl}{{{b{AH`}}}AH`}{{{b{AIf}}}AIf}{{{b{AHb}}}AHb}{{{b{A@`}}}A@`}{{{b{AHd}}}AHd}{{{b{AHf}}}AHf}{{{b{AIh}}}AIh}{{{b{AIj}}}AIj}{{{b{ACb}}}ACb}{{{b{K`}}}K`}{{b{b{Cdc}}}f{}}000000000000000{bf}000000000000000``{{{b{Jd}}{b{Jd}}}AIl}`{{b{b{c}}}AIl{}}``{{{b{K`}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}`{{{b{Jd}}}Cl}{{{b{Jd}}}B`}{{}AFf}{{}A@b}{{}AFn}{{}AHl}{{}AH`}{{}AHb}{{}A@`}{{}AHd}{{}AHf}{{}AIj}{{}ACb}{{}K`}{In{{b{c}}}{}}00000000000000000{In{{b{Cdc}}}{}}00000000000000000`{{{b{K`}}}{{Af{MnAd}}}}0{c{{Af{AFf}}}Jl}{c{{Af{A@b}}}Jl}{c{{Af{Jd}}}Jl}{c{{Af{AFn}}}Jl}{c{{Af{AFh}}}Jl}{c{{Af{AHl}}}Jl}{c{{Af{AH`}}}Jl}{c{{Af{AIf}}}Jl}{c{{Af{AHb}}}Jl}{c{{Af{A@`}}}Jl}{c{{Af{AHd}}}Jl}{c{{Af{AHf}}}Jl}{c{{Af{AIh}}}Jl}{c{{Af{AIj}}}Jl}{c{{Af{ACb}}}Jl}{c{{Af{K`}}}Jl}`{{{b{K`}}}{{Af{{`{Nl}}Ad}}}}{Inf}00000000000000000{{{b{AFf}}{b{AFf}}}B`}{{{b{A@b}}{b{A@b}}}B`}{{{b{Jd}}{b{Jd}}}B`}{{{b{AFn}}{b{AFn}}}B`}{{{b{AFh}}{b{AFh}}}B`}{{{b{AHl}}{b{AHl}}}B`}{{{b{AH`}}{b{AH`}}}B`}{{{b{AIf}}{b{AIf}}}B`}{{{b{AHb}}{b{AHb}}}B`}{{{b{A@`}}{b{A@`}}}B`}{{{b{AHd}}{b{AHd}}}B`}{{{b{AHf}}{b{AHf}}}B`}{{{b{AIh}}{b{AIh}}}B`}{{{b{AIj}}{b{AIj}}}B`}{{{b{ACb}}{b{ACb}}}B`}{{b{b{c}}}B`{}}00000000000000000000000000000000000`{{{b{AFf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{A@b}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Jd}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{ADl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AFn}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AFh}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{AHl}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{AH`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{A@`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHd}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIj}}{b{CdLb}}}{{Af{fLd}}}}{{{b{ACb}}{b{CdLb}}}{{Af{fLd}}}}`{cc{}}000{AFhAFn}11111111111{AInAIh}222`{{{b{AIh}}}Cn}{{{b{AJ`}}{Dn{Bh}}{b{AFf}}}{{Af{{Ol{Bh{Dn{Bh}}AJb}}Ad}}}}{{{b{AFf}}{b{Cdc}}}fNf}{{{b{A@b}}{b{Cdc}}}fNf}{{{b{Jd}}{b{Cdc}}}fNf}{{{b{AFn}}{b{Cdc}}}fNf}{{{b{AFh}}{b{Cdc}}}fNf}{{{b{AHl}}{b{Cdc}}}fNf}{{{b{AH`}}{b{Cdc}}}fNf}{{{b{AIf}}{b{Cdc}}}fNf}{{{b{AHb}}{b{Cdc}}}fNf}{{{b{A@`}}{b{Cdc}}}fNf}{{{b{AHd}}{b{Cdc}}}fNf}{{{b{AHf}}{b{Cdc}}}fNf}{{{b{AIh}}{b{Cdc}}}fNf}{{{b{AIj}}{b{Cdc}}}fNf}{{{b{ACb}}{b{Cdc}}}fNf}``````{{}In}00000000000000000{{}c{}}00000000000000000{{{b{K`}}}}{{{b{AFh}}}B`}{{{b{Jd}}{Bl{{b{E`}}}}}B`}{{{b{Jd}}}B`}2{{{b{AIh}}}B`}{{{b{AHl}}{b{AFh}}}{{Af{fAd}}}}2``{Obj}{Jdj}{AJdj}{AIhj}````{AIhAIh}`{{{b{Jd}}}Cl}8{{JdCl}Jd}`1{{{b{AHl}}}B`}{Jd};{ClJd}{AFhAFn}{{{b{ADl}}AJf}{{Af{{Bl{ABj}}Ad}}}}````{{{b{E`}}}Jd}`{{{b{Jd}}{b{Jd}}}{{Bl{AIl}}}}```{K`{{Af{{Dn{Ij}}Ad}}}}`{{{b{AJ`}}{Dn{Bh}}{b{A@b}}}{{Af{{Ol{Bh{Dn{Bh}}AJb}}Ad}}}}`{{{b{ADl}}AJf}{{Af{ABjAd}}}}{{{b{ADl}}{Bl{In}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}`{{{b{AFf}}c}AfAA`}{{{b{A@b}}c}AfAA`}{{{b{Jd}}c}AfAA`}{{{b{AFn}}c}AfAA`}{{{b{AFh}}c}AfAA`}{{{b{AHl}}c}AfAA`}{{{b{AH`}}c}AfAA`}{{{b{AIf}}c}AfAA`}{{{b{AHb}}c}AfAA`}{{{b{A@`}}c}AfAA`}{{{b{AHd}}c}AfAA`}{{{b{AHf}}c}AfAA`}{{{b{AIh}}c}AfAA`}{{{b{AIj}}c}AfAA`}{{{b{ACb}}c}AfAA`}{{{b{K`}}c}AfAA`}`{{{b{AFn}}}B`}````{{{b{AFn}}}{{b{n}}}}`{K`{{Af{AHhAd}}}}{{{b{AIh}}}{{Bl{AIn}}}}{bc{}}000000000000000{bMn}00`{{{b{AHb}}c}{{AJh{c}}}AJj}{{{b{AHf}}c}{{AJl{c}}}AJj}{{{b{Jd}}Cl{Bl{{b{AId}}}}ceg}{{Af{ClAd}}}{{Bn{Cl}{{Bj{Cl}}}}}{{Bn{Cl}{{Bj{AJn}}}}}{{Bn{AJn}{{Bj{Cl}}}}}}{{{b{Jd}}Cl{Bl{{b{AId}}}}}{{Af{ClAd}}}}00{c{{Af{e}}}{}{}}00000000000000000{{}{{Af{c}}}{}}00000000000000000{b{{Af{AAjAAl}}}}00{bAAn}00000000000000000`{{}c{}}00000000000000000{{{b{Jd}}}Cl}{{{b{Jd}}}B`}{{AFnAFd}AFn}`{{AFn{Bl{n}}}AFn}{{{b{AHb}}ABjc}{{Af{fAd}}}AJj}{{{b{AHf}}ABjc}{{Af{fAd}}}AJj}```````````````````````````````````````````````````````","D":"GLh","p":[[1,"reference"],[5,"Private",3710],[1,"unit"],[5,"MetaNameSpace",5,3711],[6,"Expr",5,3712],[5,"StructNameSpace",5,3713],[5,"PlSmallStr",3714],[1,"slice"],[5,"Arc",3715],[6,"PolarsError",3716],[6,"Result",3717],[6,"Selector",5,3718],[10,"Into",3719],[5,"ArrayNameSpace",5,3720],[5,"ListNameSpace",5,3721],[1,"bool"],[10,"AsRef",3719],[10,"FunctionOutputField",5,3722],[5,"SpecialEq",5,3722],[6,"Column",3723],[17,"Output"],[6,"Option",3724],[10,"Fn",3725],[10,"Send",3726],[10,"Sync",3726],[0,"mut"],[6,"VisitRecursion",3727],[10,"FnMut",3725],[6,"FunctionExpr",5,3728],[1,"i64"],[6,"DataType",3729],[5,"SortOptions",3730],[5,"SortMultipleOptions",3730],[5,"FieldsMapper",5,3731],[5,"Field",3732],[10,"ColumnsUdf",5,3722],[10,"Any",3733],[6,"AggExpr",5,3712],[5,"Vec",3734],[1,"str"],[1,"u64"],[5,"BinaryNameSpace",1837,3735],[6,"Operator",5,3712],[10,"Clone",3736],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3722],[5,"UserDefinedFunction",5,3737],[10,"ColumnBinaryUdf",5,3722],[6,"CastOptions",3738],[5,"CategoricalNameSpace",5,3739],[5,"When",5,3740],[5,"Then",5,3740],[5,"ChainedWhen",5,3740],[5,"ChainedThen",5,3740],[6,"LazySerde",5,3712],[6,"Excluded",5,3712],[6,"BitwiseFunction",5,3741],[6,"BitwiseAggFunction",5,3741],[6,"BooleanFunction",5,3742],[6,"CategoricalFunction",5,3743],[6,"TemporalFunction",5,3744],[6,"PowFunction",5,3745],[6,"StringFunction",5,3746],[6,"StructFunction",5,3747],[5,"DatetimeArgs",5,3748],[5,"DurationArgs",5,3748],[5,"RollingCovOptions",5,3749],[5,"StrptimeOptions",5,3749],[5,"JoinOptions",5,3749],[6,"WindowType",5,3749],[6,"WindowMapping",5,3749],[6,"NestedType",5,3749],[5,"UnpivotArgsDSL",5,3749],[17,"Item"],[10,"IntoIterator",3750],[1,"u8"],[10,"ExprEvalExtension",5,3751],[1,"usize"],[1,"f64"],[10,"IntoVec",3752],[5,"Duration",3031,3753],[6,"ClosedWindow",3754],[6,"TimeUnit",3755],[10,"BinaryUdfOutputField",5,3722],[10,"Deserializer",3756],[10,"Deserialize",3756],[6,"DslPlan",3031,3757],[5,"Series",3758],[6,"NullBehavior",3759],[5,"DateLikeNameSpace",1859,3760],[10,"PartialEq",3761],[10,"Sized",3726],[10,"ListNameSpaceExtension",5,3762],[5,"EWMOptions",3763],[6,"FillNullStrategy",3764],[5,"Formatter",3765],[5,"Error",3765],[10,"UdfSchema",5,3766],[1,"f32"],[1,"u32"],[1,"i8"],[1,"u16"],[1,"i16"],[6,"InequalityOperator",3767],[6,"BinaryFunction",3768],[6,"RangeFunction",3769],[6,"BusinessFunction",3770],[6,"ArrayFunction",3771],[6,"ListFunction",3772],[5,"String",3773],[5,"FunctionOptions",3774],[5,"Schema",3775],[6,"Context",3757],[10,"Hasher",3776],[6,"InterpolationMethod",3777],[10,"IntoListNameSpace",5,3762],[10,"Display",3765],[6,"ClosedInterval",3778],[5,"ExprNameNameSpace",5,3779],[10,"Literal",3031,3780],[10,"FnOnce",3725],[5,"SuperTypeOptions",3781],[5,"PythonUdfExpression",2408,3782],[5,"UnitVec",3783],[1,"tuple"],[6,"QuantileMethod",3784],[5,"RankOptions",3031,3785],[5,"RollingGroupOptions",3031,3786],[5,"RollingOptionsFixedWindow",3787],[5,"Float64Type",3788],[5,"ChunkedArray",3789],[10,"Copy",3726],[5,"RollingOptionsDynamicWindow",3790],[6,"SearchSortedSide",3791],[10,"Serializer",3792],[10,"Serialize",3792],[6,"IsSorted",3793],[5,"StringNameSpace",2473,3794],[6,"ListToStructWidthStrategy",3795],[5,"CompactString",3796],[6,"ToCompactStringError",3796],[5,"TypeId",3733],[6,"Roll",3797],[6,"NonExistent",3798],[6,"RollingFunction",2222,3799],[6,"RollingFunctionBy",2256,3800],[6,"TrigonometricFunction",2289,3801],[5,"DataFrame",3802],[8,"PolarsResult",3716],[5,"LazyFrame",2541],[10,"IntoParallelIterator",3803],[5,"UnionArgs",3031,3774],[5,"PythonFunction",2408,3804],[5,"PyAny",3805],[5,"Py",3806],[5,"PythonGetOutput",2408,3782],[1,"char"],[5,"Node",3807],[6,"IR",3808],[5,"Arena",3807],[6,"AExpr",3809],[5,"LazyGroupBy",2541],[5,"OptFlags",2541,3810],[5,"JoinBuilder",2541],[10,"AnonymousScan",3031,3811],[5,"ScanArgsAnonymous",2541,3812],[8,"SchemaRef",3813],[8,"IdxSize",3814],[5,"InProcessQuery",2541,3815],[8,"PlHashMap",3816],[5,"LazyCsvReader",2541,3817],[5,"ScanArgsIpc",2541,3818],[5,"LazyJsonLineReader",2541,3819],[5,"ScanArgsParquet",2541,3820],[10,"LazyFileListReader",2541,3821],[5,"CloudOptions",3822],[6,"JoinCoalesce",3823],[5,"DynamicGroupOptions",3031,3786],[6,"JoinType",3031,3823],[5,"Iter",3824],[5,"IterNames",3824],[5,"JoinArgs",3031,3823],[10,"IntoLazy",2541],[8,"AllowedOptimizations",2541,3810],[5,"Path",3825],[5,"PathBuf",3825],[6,"ScanSources",3826],[5,"RowIndex",3827],[8,"Schema",3813],[8,"PyObject",3806],[5,"CsvWriterOptions",3031,3828],[5,"IpcWriterOptions",3031,3829],[5,"JsonWriterOptions",3031,3830],[5,"ParquetWriteOptions",3031,3831],[5,"IRPlan",3808],[6,"UniqueKeepStrategy",3802],[6,"JoinValidation",3031,3823],[8,"NonZeroUsize",3832],[6,"CsvEncoding",3833],[6,"NullValues",3833],[6,"Tz",3834],[6,"RankMethod",3031,3785],[6,"LiteralValue",3031,3780],[5,"AnonymousScanOptions",3031,3774],[6,"Ordering",3761],[6,"AnyValue",3835],[10,"PolarsTemporalGroupby",3031,3786],[6,"GroupsProxy",3836],[5,"Null",3031,3780],[5,"AnonymousScanArgs",3031,3811],[5,"IpcWriter",3829],[10,"Write",3837],[5,"ParquetWriter",3838],[5,"NaiveDateTime",3839],[8,"OpaqueColumnUdf",5],[15,"Quantile",1725],[15,"Min",1725],[15,"Max",1725],[15,"IsBetween",2146],[15,"Any",2146],[15,"All",2146],[15,"SortBy",1735],[15,"Filter",1735],[15,"Cast",1735],[15,"Sort",1735],[15,"Gather",1735],[15,"RenameAlias",1735],[15,"Ternary",1735],[15,"Function",1735],[15,"Window",1735],[15,"AnonymousFunction",1735],[15,"Slice",1735],[15,"BinaryExpr",1735],[15,"QCut",2149],[15,"Entropy",2149],[15,"Log",2149],[15,"Hist",2149],[15,"Cut",2149],[15,"Correlation",2149],[15,"Round",2149],[15,"TopK",2149],[15,"TopKBy",2149],[15,"RoundSF",2149],[15,"EwmMeanBy",2149],[15,"Clip",2149],[15,"BackwardFill",2149],[15,"ForwardFill",2149],[15,"Random",2149],[15,"GatherEvery",2149],[15,"ValueCounts",2149],[15,"Rank",2149],[15,"EwmMean",2149],[15,"EwmStd",2149],[15,"EwmVar",2149],[15,"ReplaceStrict",2149],[15,"CumCount",2149],[15,"CumSum",2149],[15,"CumProd",2149],[15,"CumMin",2149],[15,"CumMax",2149],[15,"ConcatHorizontal",2194],[15,"ConcatVertical",2194],[15,"ExtractGroups",2194],[15,"JsonDecode",2194],[15,"PadStart",2194],[15,"PadEnd",2194],[15,"SplitExact",2194],[15,"Contains",2194],[15,"Find",2194],[15,"Replace",2194],[15,"DatetimeFunction",2214],[15,"GroupBy",3655],[15,"Union",3655],[15,"Sort",3655],[15,"Scan",3655],[15,"ExtContext",3655],[15,"DataFrameScan",3655],[15,"IR",3655],[15,"Select",3655],[15,"HStack",3655],[15,"MapFunction",3655],[15,"Cache",3655],[15,"Filter",3655],[15,"Distinct",3655],[15,"Slice",3655],[15,"Sink",3655],[15,"Join",3655],[15,"HConcat",3655],[15,"PythonScan",3655],[15,"Range",3707]],"r":[[8,3712],[23,3720],[32,3722],[35,3741],[36,3741],[38,3742],[45,3743],[46,3739],[50,3740],[51,3740],[55,3722],[57,3722],[78,3748],[90,3748],[101,3712],[106,3712],[107,3751],[108,3779],[116,3731],[117,3779],[127,3728],[128,3722],[134,3722],[149,3762],[165,3749],[172,3712],[179,3721],[180,3762],[195,3711],[214,3749],[221,3712],[222,3712],[234,3745],[246,3722],[258,3749],[267,3718],[279,3722],[287,3746],[294,3749],[296,3747],[297,3713],[305,3744],[307,3740],[329,3766],[332,3749],[335,3737],[340,3740],[343,3749],[344,3749],[392,3840],[396,3841],[403,3841],[406,3842],[410,3843],[412,3844],[427,3845],[429,3845],[435,3846],[436,3847],[438,3843],[440,3740],[528,3848],[535,3847],[538,3843],[635,3841],[636,3840],[637,3840],[638,3849],[639,3849],[640,3849],[649,3850],[651,3841],[655,3841],[660,3844],[661,3748],[662,3844],[663,3844],[825,3843],[827,3840],[828,3840],[829,3748],[933,3843],[979,3841],[982,3849],[1058,3843],[1105,3840],[1144,3844],[1145,3844],[1202,3847],[1204,3847],[1214,3843],[1217,3843],[1221,3780],[1231,3842],[1242,3843],[1245,3843],[1253,3847],[1257,3841],[1258,3847],[1261,3841],[1262,3847],[1270,3847],[1274,3841],[1301,3847],[1303,3843],[1316,3850],[1323,3843],[1326,3847],[1330,3841],[1334,3851],[1347,3850],[1348,3850],[1428,3850],[1436,3843],[1442,3847],[1446,3841],[1453,3740],[1456,3844],[1639,3843],[1694,3740],[1837,3735],[1858,3739],[1859,3760],[1933,3741],[1934,3741],[1936,3742],[1940,3743],[1990,3728],[2055,3745],[2095,3746],[2103,3747],[2108,3744],[2141,3728],[2142,3728],[2143,3728],[2144,3728],[2145,3728],[2216,3743],[2220,3745],[2226,3799],[2260,3800],[2304,3801],[2333,3748],[2334,3748],[2335,3840],[2336,3841],[2338,3841],[2339,3842],[2340,3844],[2341,3845],[2342,3845],[2343,3846],[2344,3847],[2345,3847],[2346,3841],[2347,3840],[2349,3840],[2351,3849],[2354,3849],[2355,3849],[2356,3850],[2357,3841],[2358,3841],[2359,3844],[2360,3844],[2361,3748],[2362,3844],[2363,3844],[2366,3840],[2367,3840],[2368,3748],[2369,3841],[2370,3849],[2373,3840],[2374,3844],[2375,3844],[2376,3847],[2377,3847],[2378,3842],[2379,3847],[2380,3847],[2381,3847],[2385,3847],[2390,3847],[2391,3850],[2392,3847],[2393,3841],[2394,3851],[2395,3850],[2396,3850],[2399,3850],[2400,3847],[2401,3844],[2402,3844],[2408,3782],[2409,3782],[2410,3852],[2412,3804],[2413,3782],[2414,3782],[2473,3794],[2535,3737],[2541,3810],[2549,3815],[2552,3817],[2553,3821],[2556,3819],[2558,3810],[2565,3812],[2566,3818],[2567,3820],[3031,3811],[3032,3811],[3033,3774],[3041,3828],[3048,3757],[3049,3753],[3051,3786],[3069,3829],[3071,3823],[3072,3823],[3073,3823],[3074,3830],[3076,3780],[3077,3780],[3083,3780],[3084,3780],[3090,3831],[3091,3786],[3094,3785],[3095,3785],[3097,3786],[3113,3774],[3513,3853]],"b":[[668,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[669,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[670,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[759,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[760,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[761,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[762,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[763,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[832,"impl-PartialEq-for-Expr"],[833,"impl-Expr"],[837,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[838,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[944,"impl-Display-for-Expr"],[945,"impl-Debug-for-Expr"],[948,"impl-Display-for-Operator"],[949,"impl-Debug-for-Operator"],[951,"impl-Display-for-BitwiseFunction"],[952,"impl-Debug-for-BitwiseFunction"],[954,"impl-Display-for-BooleanFunction"],[955,"impl-Debug-for-BooleanFunction"],[956,"impl-Debug-for-CategoricalFunction"],[957,"impl-Display-for-CategoricalFunction"],[958,"impl-Debug-for-TemporalFunction"],[959,"impl-Display-for-TemporalFunction"],[960,"impl-Display-for-PowFunction"],[961,"impl-Debug-for-PowFunction"],[962,"impl-Display-for-StringFunction"],[963,"impl-Debug-for-StringFunction"],[964,"impl-Debug-for-StructFunction"],[965,"impl-Display-for-StructFunction"],[966,"impl-Debug-for-FunctionExpr"],[967,"impl-Display-for-FunctionExpr"],[996,"impl-From%3Cf64%3E-for-Expr"],[997,"impl-From%3Cu8%3E-for-Expr"],[998,"impl-From%3Cf32%3E-for-Expr"],[1000,"impl-From%3Cbool%3E-for-Expr"],[1001,"impl-From%3Cu64%3E-for-Expr"],[1002,"impl-From%3Cu32%3E-for-Expr"],[1003,"impl-From%3Ci8%3E-for-Expr"],[1004,"impl-From%3Cu16%3E-for-Expr"],[1005,"impl-From%3Ci16%3E-for-Expr"],[1006,"impl-From%3Ci32%3E-for-Expr"],[1007,"impl-From%3Ci64%3E-for-Expr"],[1008,"impl-From%3CAggExpr%3E-for-Expr"],[1009,"impl-From%3C%26str%3E-for-Expr"],[1014,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1015,"impl-From%3CBitwiseFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1016,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1017,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1018,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1019,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1020,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1021,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1022,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1023,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1024,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1026,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1035,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[1036,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[1037,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[1038,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[1050,"impl-From%3CPlSmallStr%3E-for-Selector"],[1051,"impl-From%3C%26str%3E-for-Selector"],[1053,"impl-From%3CString%3E-for-Selector"],[1054,"impl-From%3CExpr%3E-for-Selector"],[1077,"impl-Expr"],[1078,"impl-Hash-for-Expr"],[1386,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1387,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1388,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1389,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[1390,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[2242,"impl-Display-for-RollingFunction"],[2243,"impl-Debug-for-RollingFunction"],[2275,"impl-Debug-for-RollingFunctionBy"],[2276,"impl-Display-for-RollingFunctionBy"],[2319,"impl-Debug-for-TrigonometricFunction"],[2320,"impl-Display-for-TrigonometricFunction"],[2591,"impl-OptFlags"],[2592,"impl-Flags-for-OptFlags"],[2729,"impl-Octal-for-OptFlags"],[2730,"impl-UpperHex-for-OptFlags"],[2731,"impl-Debug-for-OptFlags"],[2732,"impl-Binary-for-OptFlags"],[2733,"impl-LowerHex-for-OptFlags"],[2738,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2739,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2748,"impl-Flags-for-OptFlags"],[2749,"impl-OptFlags"],[2989,"impl-LazyFileListReader-for-LazyCsvReader"],[2990,"impl-LazyCsvReader"],[2991,"impl-LazyJsonLineReader"],[2992,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3008,"impl-LazyFileListReader-for-LazyCsvReader"],[3009,"impl-LazyCsvReader"],[3010,"impl-LazyJsonLineReader"],[3011,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3374,"impl-Display-for-Duration"],[3375,"impl-Debug-for-Duration"],[3378,"impl-Debug-for-JoinType"],[3379,"impl-Display-for-JoinType"],[3380,"impl-Debug-for-JoinValidation"],[3381,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJoKDwEEABMAGQAVADAAAgA1AAIAOQAAADsAEwBQAAoAXAAIAGYAAwBsAAAAbgAZAIkAGwCmAAMAqwAIALUADgDFABUA3AAGAOQAKAAOAQkAGQEQACsBBwA1ARoAUQEDAFYBAABYASsAhQEBAIsBAACOAQEAkgEAAJgBAACaAQAApQEAAKgBAACvAQEAsgEBALcBAAC6AQAAxAFKABECAAATAgAAFQIBABsCAAAiAlkAfwIAAJkCDQCoAmUAEAMAABIDJAA4AwAAOgMAAEADAQBDAxUAWgM4AJsDAACeAwEApAMAAKoDAACtAyYA1QMAAOUDAgDpAwkA9gMLAAMEAAAMBAMAFwQAABsEAQAeBAEAIQQAACMEAAAoBAEALQQEADUEAAA3BBMATgQBAFEEAABTBCQAogQCAKYEAQCqBAAAvAQAAMQEAADRBAAA1AQFAN0EAADgBAAA5QQAAPEEAAD0BAIA/AQCAAAFAwAJBQEADQUCABIFAAAUBQEAGgUAACEFAAAjBQEAKgUAACwFAAA0BQEAOgUAADwFAAA+BQAAQwUCAF0FBQBkBRwAigUAAJEFAACYBQAAnQUAAJ8FAQCiBQAAqAUBAK4FAACwBQAAsgUCALkFHgDZBQoA6AVJADQGAAA2BjIAdAYAAHYGAAB4BiYAogYBAKcGAAC0BgAAuAYBAL0GEwDTBgAA1QYAANcGAQDaBgEA3QYGAOUGSAAvBwMANAcCADkHAgA/BwMARwcBAFAHAgBWBwAAWAcAAGUHAAB0BwMAfAdIAcYIAQDJCBwA5wgBAOoIJwATCQEAFgkHACIJAAAwCQAAPQkBAEQJAQBPCQIAUwkDAFwJAwBkCQYAbAkBAG8JGwCNCQAAjwkDAJYJEwCrCQMAsgkCALYJAAC5CQAAvgkCAMMJAQDjCQMA9gkDAP0JAQAGCgIACgoJABcKAAAZCgAAIQoAACQKFAA6CgEAPwoaAF4KAQBiCgAAZwoAAGsKGACJCgMAjgoGAKUKAACnCgEAqgoEALMKAQC9CgAAxAoCAMwKAQDPCgwA6goAAPIKAAD0CgEA+QoBAPwKAAD+CgAAAgsAAAcLAwAMCwUAFQsBABsLAwAnCwMALAsBADELAwA2CwAAOQsAAEILAABHCwEAUQsBAFQLCABeCx4AfwsAAIELAACECwEAhwsJAJILAACUCwEAngsBAKcLAQCuCwAAsQsBAMELAADECwAAzwsBANYLBwDhCwAA5AsBAOcLAADpCwMA7wsAAPILAAD2CwMA/gsAAAAMBgAKDAIADgwAABEMCgAdDAIAIgwAACQMAAAqDBMAQQxaAKAMiwAtDRMARQ0AAFENAABVDQAAVw0RAGoNAABtDREAkQ0CAJUNAgCZDQAAnA0DAKMNBQCqDQEArg0AALENAgC1DQEAuQ0AALsNAQDADRUA1w10AE0OBABTDisA"}],["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNHHHHNNNNNNNNNNNNNNHNNHHHHHHHHHNHHNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","","contains_chunked","","ends_with","","ends_with_chunked","","list","scatter","size_bytes","","starts_with","","starts_with_chunked","","strings","AsList","ListNameSpaceImpl","as_list","join_literal","","join_many","","lst_arg_max","","lst_arg_min","","lst_concat","","lst_get","","lst_join","","lst_lengths","","lst_max","","lst_mean","","lst_median","","lst_min","","lst_n_unique","","lst_reverse","","lst_shift","","lst_slice","","lst_sort","","lst_std","","lst_sum","","lst_unique","","lst_unique_stable","","lst_var","","same_type","","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","","","","_coalesce_full_join","_create_left_df_from_slice","","_finish_join","_full_join_from_series","","_join_suffix_name","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","coalesce","","cross_join","","cross_join_dfs","","default","","","default_join_ids","deref","","","","deref_mut","","","","drop","","","","eq","","","","equivalent","","","","","","","","fmt","","","","","","from","","","","","full_join","hash","","","","hash_join_inner","","hash_join_outer","","how","init","","","","inner_join","into","","","","is_asof","is_ie","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","","to_owned","","","","to_string","","try_from","","","","try_into","","","","try_to_compact_string","","type_id","","","","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","coalesce_columns","convert_to_unsigned_index","count_ones","count_zeros","default","deref","deref_mut","drop","ensure_sorted_arg","","eq","equivalent","","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","","leading_ones","leading_zeros","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","trailing_ones","trailing_zeros","try_from","try_into","type_id","value_counts",""],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[25,"polars_ops::chunked_array::list"],[74,"polars_ops::chunked_array::strings"],[76,"polars_ops::frame"],[80,"polars_ops::frame::join"],[235,"polars_ops::prelude"],[237,"polars_ops::series"],[294,"polars_ops::chunked_array::binary"],[295,"polars_core::datatypes"],[296,"polars_ops::chunked_array::binary::namespace"],[297,"polars_ops::chunked_array::scatter"],[298,"polars_utils::index"],[299,"polars_core::series"],[300,"polars_error"],[301,"core::marker"],[302,"core::option"],[303,"core::iter::traits::collect"],[304,"polars_ops::chunked_array::list::namespace"],[305,"polars_core::datatypes::aliases"],[306,"polars_core::frame::column"],[307,"polars_core::chunked_array::ops::sort::options"],[308,"polars_core::frame"],[309,"dyn_clone::sealed"],[310,"polars_utils::pl_str"],[311,"polars_ops::frame::join::hash_join"],[312,"polars_ops::frame::join::args"],[313,"polars_ops::frame::join::cross_join"],[314,"core::fmt"],[315,"core::convert"],[316,"core::hash"],[317,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[318,"polars_arrow::array::primitive"],[319,"alloc::string"],[320,"core::result"],[321,"compact_str"],[322,"core::any"],[323,"polars_ops::series::ops::arg_min_max"],[324,"polars_ops::series::ops"],[325,"polars_core::chunked_array::ops::search_sorted"],[326,"polars_ops::series::ops::various"],[327,"polars_ops::frame::join::general"],[328,"polars_ops::series::ops::clip"],[329,"polars_ops::series::ops::horizontal"],[330,"polars_ops::series::ops::index"],[331,"polars_ops::series::ops::bitwise"],[332,"polars_ops::series::ops::negate"],[333,"polars_ops::series::ops::not"],[334,"polars_ops::series::ops::int_range"]],"i":"```````bh0000000`A`111111```BbBf000000000000000000000000000000000000000000000`Ch```Cj``DjDl``00````1``10`Dn0001`Df321`Dd0`00`1432143214321432143241E`000253`25432543254325432255443325443322543Ej3654F`000447651476566514154`444447656547654765654765444``Gf`00```0Gb0Gd22```222````2222Gh033333333`00`````````3``33300","f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}{{{d{h}}}B`}03322```{{{d{Bb}}}{{d{Bd}}}}{{{d{Bf}}{d{Bh}}Bj}{{Af{Bl}}}}0{{{d{Bf}}{d{Bl}}Bj}{{Af{Bl}}}}0{{{d{Bf}}}Bn}000{{{d{Bf}}{d{{l{C`}}}}}{{Af{Bd}}}}0{{{d{Bf}}CbBj}{{Af{Ad}}}}03322{{{d{Bf}}}{{Af{Ad}}}}0{{{d{Bf}}}Ad}00011{{{d{Bf}}}{{Af{Bn}}}}0{{{d{Bf}}}Bd}0{{{d{Bf}}{d{C`}}}{{Af{Bd}}}}0{{{d{Bf}}CbCd}Bd}0{{{d{Bf}}Cf}{{Af{Bd}}}}0{{{d{Bf}}j}Ad}077{{{d{Bf}}}{{Af{Bd}}}}00011{{{d{Bf}}Bd}Bd}0`{{{d{Ch}}}{{d{Bl}}}}```{{{d{Cj}}}{{d{Cl}}}}````````````````````````{{dCn}D`}000{{Cl{d{{l{Db}}}}{d{{l{Db}}}}{Al{Db}}{d{Cl}}}Cl}{{{d{Dd}}{d{{l{Ab}}}}BjBjBj}Cl}0`{{{d{Dd}}{d{Cl}}{d{Ad}}{d{Ad}}Df}{{Af{Cl}}}}0{{{d{Bh}}{d{Bh}}}Db}{d{{d{c}}}{}}000{{{d{Dh}}}{{d{Dhc}}}{}}000{{{d{Df}}}Df}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{Dn}}}Dn}{{d{d{Dhc}}}D`{}}000{dD`}000{{{d{Dj}}{d{Dl}}}Bj}`{{{d{E`}}{d{Cl}}{Al{Db}}{Al{{Eb{CbCd}}}}}{{Af{Cl}}}}0{{{d{E`}}{d{Cl}}{Al{{Eb{CbCd}}}}Bj}{{Af{{Eb{ClCl}}}}}}0{{}Df}{{}Dj}{{}Dn}{{}Ed}{Cd{{d{c}}}{}}000{Cd{{d{Dhc}}}{}}000{CdD`}000{{{d{Df}}{d{Df}}}Bj}{{{d{Dj}}{d{Dj}}}Bj}{{{d{Dl}}{d{Dl}}}Bj}{{{d{Dn}}{d{Dn}}}Bj}{{d{d{c}}}Bj{}}0000000{{{d{Df}}{d{DhEf}}}Eh}{{{d{Dj}}{d{DhEf}}}Eh}{{{d{Dl}}{d{DhEf}}}Eh}0{{{d{Dn}}{d{DhEf}}}Eh}0{DlDf}{cc{}}000{{{d{Ej}}{d{Cl}}ei}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}{{{d{Df}}{d{Dhc}}}D`En}{{{d{Dj}}{d{Dhc}}}D`En}{{{d{Dl}}{d{Dhc}}}D`En}{{{d{Dn}}{d{Dhc}}}D`En}{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{FbBj}}}}}}0{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{{Fd{Ab}}{Fd{Ab}}}}}}}}0`{{}Cd}0007{{}c{}}000{{{d{Dl}}}Bj}0{{{d{Dn}}{d{Dl}}}{{Af{D`}}}}{{{d{Ej}}{d{Cl}}eiDf}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}`;{{{d{Dn}}}Bj}>{{{d{Cl}}{d{Cl}}Bj}{{Af{Ff}}}}{{{d{Df}}}Bj}`{{{d{Df}}}{{d{Db}}}}`{dc{}}000{dFh}0{c{{Fj{e}}}{}{}}000{{}{{Fj{c}}}{}}000{d{{Fj{FlFn}}}}0{dG`}000`{{DfDj}Df}{{Df{Al{Db}}}Df}`````````{{dCn}D`}{{{d{Gb}}}{{Al{Cd}}}}0{{{d{Gd}}}{{d{Ad}}}}{d{{d{c}}}{}}{{{d{Dh}}}{{d{Dhc}}}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Gf}}}Gf}{{d{d{Dhc}}}D`{}}{dD`}{{{d{{l{C`}}}}}{{Af{C`}}}}{{{d{Ad}}Cd}{{Af{Bn}}}}{{{d{Ad}}}{{Af{Ad}}}}0{{}Gf}{Cd{{d{c}}}{}}{Cd{{d{Dhc}}}{}}{CdD`}{{{d{Gh}}{d{Bh}}}{{Af{D`}}}}0{{{d{Gf}}{d{Gf}}}Bj}{{d{d{c}}}Bj{}}0{{{d{Gf}}{d{DhEf}}}{{Fj{D`Gj}}}}{cc{}}{{{d{Gf}}{d{Dhc}}}D`En}{{}Cd}{{}c{}}{{{d{Ad}}}Bj}{{{d{Gh}}Cf}{{Af{Bj}}}}0>>{{{d{{l{C`}}}}}{{Af{{Al{C`}}}}}}00??{{CbDb}{{Af{Ad}}}}1{dc{}}{{{d{Ad}}}{{Af{Ad}}}}0{c{{Fj{e}}}{}{}}{{}{{Fj{c}}}{}}{dG`}{{{d{Gh}}BjBjDbBj}{{Af{Cl}}}}0","D":"El","p":[[10,"AsBinary",4,294],[1,"reference"],[8,"BinaryChunked",295],[10,"BinaryNameSpaceImpl",4,296],[1,"u8"],[1,"slice"],[8,"BooleanChunked",295],[10,"ChunkedSet",4,297],[8,"IdxSize",298],[5,"Series",299],[8,"PolarsResult",300],[10,"Copy",301],[17,"Item"],[6,"Option",302],[10,"IntoIterator",303],[8,"UInt32Chunked",295],[10,"AsList",25],[8,"ListChunked",295],[10,"ListNameSpaceImpl",25,304],[1,"str"],[1,"bool"],[8,"StringChunked",295],[8,"IdxCa",305],[6,"Column",306],[1,"i64"],[1,"usize"],[5,"SortOptions",307],[10,"AsString",74],[10,"IntoDf",76],[5,"DataFrame",308],[5,"Private",309],[1,"unit"],[5,"PlSmallStr",310],[10,"JoinDispatch",80,311],[5,"JoinArgs",80,312],[0,"mut"],[6,"JoinCoalesce",80,312],[6,"JoinType",80,312],[6,"JoinValidation",80,312],[10,"CrossJoin",80,313],[1,"tuple"],[8,"ChunkJoinOptIds",80,312],[5,"Formatter",314],[8,"Result",314],[10,"DataFrameJoinOps",80],[10,"Into",315],[10,"Hasher",316],[10,"SeriesJoin",80,317],[8,"InnerJoinIds",80,312],[5,"PrimitiveArray",318],[8,"LeftJoinIds",80,312],[5,"String",319],[6,"Result",320],[5,"CompactString",321],[6,"ToCompactStringError",321],[5,"TypeId",322],[10,"ArgAgg",237,323],[10,"SeriesSealed",237,324],[6,"SearchSortedSide",237,325],[10,"SeriesMethods",237,326],[5,"Error",314]],"r":[[4,294],[5,296],[6,297],[26,304],[80,312],[81,312],[84,313],[88,312],[89,312],[90,312],[91,311],[93,312],[94,312],[97,312],[103,317],[108,327],[111,327],[114,327],[144,311],[235,80],[236,76],[238,323],[241,325],[242,326],[243,324],[250,328],[251,328],[252,328],[256,329],[257,330],[258,331],[259,331],[274,330],[277,331],[278,331],[279,329],[280,329],[281,329],[282,332],[283,333],[284,334],[285,329],[287,331],[288,331]],"b":[[171,"impl-Debug-for-JoinType"],[172,"impl-Display-for-JoinType"],[173,"impl-Debug-for-JoinValidation"],[174,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPgAEQAAAAgACwABAA8AAgAXAA8AKwA3AGcABgBwABkAjAAkALYADADIAAIAzAAAAM4AIADwAAUA+AACAP4AEAAQAQEAFgEOAA=="}],["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNOMNNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNNMNNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","","borrow","","","borrow_mut","","","cast_to_supertypes","check_lengths","","clone","","clone_into","","clone_to_uninit","","collect_groups","contains","","default","deref","","","deref_mut","","","deserialize","drop","","","eq","equivalent","","","flags","fmt","","fmt_str","from","","","get_udf","","hash","init","","","into","","","is_elementwise","is_groups_sensitive","register","","serialize","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[108,"polars_sql::keywords"],[110,"dyn_clone::sealed"],[111,"polars_sql::context"],[112,"polars_lazy::frame"],[113,"polars_error"],[114,"alloc::string"],[115,"polars_utils::aliases"],[116,"alloc::vec"],[117,"alloc::sync"],[118,"polars_plan::dsl::expr"],[119,"core::convert"],[120,"core::result"],[121,"core::any"],[122,"polars_plan::plans::options"],[123,"polars_plan::plans"],[124,"serde::de"],[125,"core::fmt"],[126,"polars_plan::dsl::udf"],[127,"core::option"],[128,"core::hash"],[129,"serde::ser"],[130,"polars_sql::sql_expr"]],"i":"`j00000000000`0000`00000`0000000Bj`0```Bf1Bl120121111212121Aj121231232123222222321230121231232201223123123123123``","f":"`{{bd}f}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{j}}}j}{{b{b{hc}}}f{}}{bf}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{{}c{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}{{{b{hj}}{b{n}}}f}:{{j{Al{Aj}}}j}``````{{bd}f}0{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{b{b{hc}}}f{}}0{bf}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{c{{Bb{Bf}}}Bn}{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{b{b{c}}}Bh{}}00`{{{b{Bf}}{b{hC`}}}{{Bb{fCb}}}}{{{b{Bj}}{b{hC`}}}{{Bb{fCb}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cf{Cd}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cf{Cd}}}}}}{{{b{Bf}}{b{hc}}}fCh}{{}l}00{{}c{}}00{{{b{Bf}}}Bh}0{{{b{hAj}}{b{n}}Cd}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cd}{{Ab{f}}}}{{{b{Bf}}c}BbCj}{bc{}}0{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00888{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",110],[1,"unit"],[0,"mut"],[5,"SQLContext",0,111],[1,"usize"],[1,"str"],[5,"LazyFrame",112],[8,"PolarsResult",113],[5,"String",114],[8,"PlHashMap",115],[5,"Vec",116],[10,"FunctionRegistry",32],[5,"Arc",117],[6,"Expr",118],[10,"AsRef",119],[6,"Result",120],[5,"TypeId",121],[5,"FunctionOptions",32,122],[1,"bool"],[6,"Context",32,123],[5,"DefaultFunctionRegistry",32],[10,"Deserializer",124],[5,"Formatter",125],[5,"Error",125],[5,"UserDefinedFunction",126],[6,"Option",127],[10,"Hasher",128],[10,"Serializer",129]],"r":[[0,111],[24,130],[33,123],[36,122]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEwACwACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABAAOgATAFIABABaAAAAXQAPAA=="}],["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","","Duration","Friday","Label","Left","","Monday","None","Right","","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","","","","","","add_ms","add_ns","add_us","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","cmp","compare","days","days_only","default","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","ensure_duration_matches_dtype","ensure_is_constant_duration","eq","","","","equivalent","","","","","","","","fmt","","","","","","from","","","","","","","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","","","","init","","","","","","","into","","","","","","","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","","","","","","to_string","truncate_impl","truncate_ms","","truncate_ns","","truncate_us","","try_from","","","","","","","try_into","","","","","","","try_to_compact_string","type_id","","","","","","","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[56,"polars_time::chunkedarray::string::infer"],[82,"polars_time::prelude"],[283,"polars_time::series"],[304,"polars_utils::pl_str"],[305,"chrono::naive::datetime"],[306,"polars_time::windows::duration"],[307,"polars_time::windows::group_by"],[308,"polars_core::datatypes::time_unit"],[309,"polars_arrow::legacy::time_zone"],[310,"core::option"],[311,"polars_core::chunked_array::logical::datetime"],[312,"polars_error"],[313,"polars_time::round"],[314,"polars_core::datatypes"],[315,"chrono::naive::time"],[316,"polars_core::chunked_array::logical::time"],[317,"polars_time::truncate"],[318,"polars_time::upsample"],[319,"polars_core::frame"],[320,"polars_core::utils"],[321,"dyn_clone::sealed"],[322,"polars_time::chunkedarray::string::patterns"],[323,"core::fmt"],[324,"core::hash"],[325,"core::result"],[326,"core::any"],[327,"core::clone"],[328,"polars_time::windows::bounds"],[329,"polars_time::windows::window"],[330,"core::cmp"],[331,"polars_core::datatypes::dtype"],[332,"polars_core::frame::group_by::proxy"],[333,"alloc::vec"],[334,"alloc::string"],[335,"core::ops::function"],[336,"compact_str"],[337,"polars_core::series"],[338,"polars_time::date_range"]],"i":"h``00```0````Ehf`Ah``B`Bb0```Cb0000``0Bn11111111111111`1111111`Dn``D`000000000`0000Df111211:```EdEf`0`<10<<10`0`000`0Eb;=21<;;;En1<>32=01<>32=1<>32=1<>32=1<>32=<<<<201<>32=01<>32=01<>32=``<>32<<>>33221<<>3201<>32=====``<>3201<>32=01<>32=0<<<<<<<<<<=0=<<<===1<>32=<<<=<=<=01<>32=01<>32=<01<>32=2<<``GdGh00000000000000000","f":"```````````{{bddfhj{A`{{n{l}}}}}{{Ad{Ab}}}}{{{n{d}}}Af}```{{{n{Ah}}{n{Aj}}{A`{{n{l}}}}}{{Ad{Ah}}}}`{{bAlAlfh}{{Ad{An}}}}{{{n{B`}}{A`{{n{l}}}}{n{Aj}}}{{Ad{B`}}}}{{{n{Bb}}c{n{Bd}}f}{{Ad{Bf}}}{{Bh{b}}}}0``````````{{nBj}Bl}{{{n{Bn}}}{{n{Aj}}}}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{Cb}}}Cb}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{{{n{Cb}}{n{Cb}}}Af}{{n{n{c}}}Af{}}0{{{n{Cb}}{n{C`Cf}}}Ch}{cc{}}{{{n{Cb}}{n{C`c}}}BlCj}`{{}Cd}{{}c{}}{{{n{Cb}}{n{Bd}}}Af}{nc{}}{c{{Cl{e}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````{{nBj}Bl}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{{D`{c}}}}}{{D`{c}}}{DbDd}}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{cc{}}{{{n{Bd}}}{{A`{Cb}}}}{{}Cd}{{}c{}}`{{{n{C`{D`{c}}}}{n{Bd}}}A`Dd}{{{n{C`Df}}{n{{Dj{Dh}}}}{A`{j}}}{{A`{c}}}{}}`{nc{}}{c{{Cl{e}}}{}{}}{{c{A`{j}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````````````````````````{{nBj}Bl}00000{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{n{{n{c}}}{}}000000{{{n{C`}}}{{n{C`c}}}{}}000000{{{n{Eb}}}Eb}{{{n{f}}}f}{{{n{h}}}h}{{{n{Ed}}}Ed}{{{n{Ef}}}Ef}{{{n{Eh}}}Eh}{{n{n{C`c}}}Bl{}}00000{nBl}00000{{{n{f}}{n{f}}}Ej}{{n{n{c}}}Ej{}}{{{n{f}}}E`}{{{n{f}}}Af}{{}Ef}{Cd{{n{c}}}{}}000000{Cd{{n{C`c}}}{}}000000{CdBl}000000{{f{n{El}}{n{Bd}}}{{Ad{Bl}}}}{{f{A`{{n{Bd}}}}{n{Bd}}}{{Ad{Bl}}}}{{{n{f}}{n{f}}}Af}{{{n{h}}{n{h}}}Af}{{{n{Ed}}{n{Ed}}}Af}{{{n{Ef}}{n{Ef}}}Af}{{n{n{c}}}Af{}}0000000{{{n{Eb}}{n{C`Cf}}}Ch}{{{n{f}}{n{C`Cf}}}Ch}0{{{n{h}}{n{C`Cf}}}Ch}{{{n{Ed}}{n{C`Cf}}}Ch}{{{n{Ef}}{n{C`Cf}}}Ch}{cc{}}000000{{{n{Eh}}E`h{A`{{n{l}}}}}{{Ad{Eb}}}}00{{{n{Eh}}Ebhj{A`{{n{l}}}}Ef}{{Ad{En}}}}{{ff{n{{Dj{E`}}}}hj{A`{l}}}{{Ad{F`}}}}{{Eh{n{{Dj{E`}}}}hj{n{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{n{f}}{n{C`c}}}BlCj}{{{n{h}}{n{C`c}}}BlCj}{{{n{Ed}}{n{C`c}}}BlCj}{{{n{Ef}}{n{C`c}}}BlCj}{{}Cd}000000{{}c{}}0000000{{{n{f}}{A`{{n{Bd}}}}}Af}{{{n{f}}}Af}0{{{n{f}}}E`}1{{fE`}f}1{fc{}}3{E`f}{{fff}Eh}{{{n{C`En}}}{{A`{c}}}{}}`{{{n{Bd}}}f}`{{{n{f}}{n{f}}}{{A`{Ej}}}}{{{n{Eh}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{nc{}}00000{nFh}{{{n{f}}E`{A`{{n{l}}}}ceg}{{Ad{E`}}}{{Fl{E`}{{Fj{E`}}}}}{{Fl{E`}{{Fj{d}}}}}{{Fl{d}{{Fj{E`}}}}}}{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}000000{{}{{Cl{c}}}{}}000000{n{{Cl{FnG`}}}}{nCn}000000{{{n{Ef}}}{{A`{Gb}}}}{{{n{f}}}E`}{{{n{f}}}Af}``{{{n{Gd}}}{{n{Gf}}}}{{{n{Gh}}}{{Ad{Gj}}}}{{{n{Gh}}}{{Ad{Gl}}}}0{{{n{Gh}}}{{Ad{Gn}}}}22112{{{n{Gh}}}{{Ad{H`}}}}322{{{n{Gh}}{n{Bd}}}{{Ad{Gf}}}}0334","D":"Gd","p":[[5,"PlSmallStr",304],[5,"NaiveDateTime",305],[5,"Duration",82,306],[6,"ClosedWindow",82,307],[6,"TimeUnit",308],[6,"Tz",309],[1,"reference"],[6,"Option",310],[8,"DatetimeChunked",311],[8,"PolarsResult",312],[1,"bool"],[10,"PolarsRound",0,313],[8,"StringChunked",314],[5,"NaiveTime",315],[8,"TimeChunked",316],[10,"PolarsTruncate",0,317],[10,"PolarsUpsample",0,318],[1,"str"],[5,"DataFrame",319],[10,"IntoVec",320],[5,"Private",321],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,322],[1,"usize"],[5,"Formatter",323],[8,"Result",323],[10,"Hasher",324],[6,"Result",325],[5,"TypeId",326],[5,"DatetimeInfer",56],[10,"Clone",327],[10,"PolarsNumericType",314],[10,"StrpTimeParser",56],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",56],[1,"i64"],[5,"Bounds",82,328],[6,"Label",82,307],[6,"StartBy",82,307],[5,"Window",82,329],[6,"Ordering",330],[6,"DataType",331],[5,"BoundsIter",82,329],[8,"GroupsSlice",332],[8,"TimeZone",331],[5,"Vec",333],[1,"tuple"],[5,"String",334],[17,"Output"],[10,"Fn",335],[5,"CompactString",336],[6,"ToCompactStringError",336],[1,"u32"],[10,"AsSeries",283],[5,"Series",337],[10,"TemporalMethods",283],[8,"Int32Chunked",314],[8,"Int8Chunked",314],[8,"BooleanChunked",314],[8,"Int16Chunked",314]],"r":[[1,307],[2,306],[5,313],[6,317],[7,318],[9,329],[11,338],[12,338],[18,338],[22,24],[30,322],[83,328],[84,329],[85,307],[88,306],[90,307],[98,307],[100,283],[104,329],[173,306],[174,306],[204,307],[205,307]],"b":[[188,"impl-Debug-for-Duration"],[189,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPYAFwAAAAkADQAFABQAAAAXABcAMAACADQAEQBHAAEASgATAF8ACQBqAFcAyQAAAMsAAQDPAAoA4QABAOUAAgDpAAAA7AACAPAAAQD1AAgA/wAAAAEBAAADARsAIwEAAA=="}],["polars_utils",{"t":"EECCCCCCCCCCCCCCQQQQCCCCCCCQCCCQCCCCCCCCCCCQQCCRKMMRKIIIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNKMHHNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNNKMHHHHFKNNNNNNNMNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHHKNNCNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHKNNNNMMTFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNJSFFKNNNNNNNNNNNNNHNNNNNNNNNNNNNNNHNMNNNNNMNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMHMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_pl_smallstr","format_tuple","functions","hashing","idx_vec","index","io","itertools","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","pl_str","priority","python_function","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","PlRandomState","PlRandomStateQuality","new","","","","","with_capacity","","","","","Arena","Node","add","borrow","","borrow_mut","","clear","clone","","clone_into","","clone_to_uninit","","cmp","compare","default","","deref","","deref_mut","","deserialize","","drop","","duplicate","eq","equivalent","","fmt","","from","","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","","into","","is_empty","last_node","len","new","partial_cmp","pop","replace","replace_with","serialize","","swap","take","to_owned","","try_from","","try_into","","try_replace_with","type_id","","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","ExponentialSearch","exponential_search_by","find_first_ge_index","find_first_gt_index","partition_point_exponential","FastCachedFunc","FastFixedCache","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eval","from","","get","get_mut","get_or_insert_with","init","","insert","into","","new","","to_owned","try_from","","try_get_or_insert_with","try_into","","type_id","","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","","","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","portable_prefix_xorsum_inclusive","prefix_xorsum","prefix_xorsum_inclusive","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","nan_value","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","dirty_hash","","drop","eq","equivalent","","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clear","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","drop","","eq","equivalent","","extend","fmt","from","","","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","","borrow_mut","","check_bounds","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","equivalent","","extract","fmt","","from","","","get","get_unchecked","idx","init","","inner","inner_mut","into","","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","","null_count","store","to_idx","to_opt","to_owned","","try_from","","try_into","","type_id","","_limit_path_len_io_err","create_file","open_file","Itertools","all_equal","collect_vec","enumerate_idx","","enumerate_u32","eq_by_","partial_cmp_by_","try_collect","try_collect_vec","EnumerateIdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","count","deref","deref_mut","drop","fmt","from","init","into","into_iter","into_py_dict_bound","len","new","next","next_back","nth","nth_back","size_hint","to_owned","try_from","try_into","type_id","madvise_populate_read","madvise_sequential","madvise_willneed","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","EMPTY","MMapSemaphore","MemReader","MemSlice","Mmap","advise","advise_range","as_ptr","as_ref","","","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","","deref_mut","","","","drop","","","","","ensure_not_mapped","fmt","","","","from","","","","","","from_bytes","","from_file","from_mmap","from_reader","from_slice","from_static","from_vec","","init","","","","into","","","","lock","make_mut","map","new","new_from_file","new_from_file_with_options","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","to_owned","","to_vec","total_len","try_from","","","","try_into","","","","type_id","","","","unlock","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","EMPTY","EMPTY_REF","PlSmallStr","as_ref","","","","as_str","borrow","","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","default","deref","","deref_mut","deserialize","drop","eq","equivalent","","fmt","","from","","","","","from_iter","","","","","","","","from_static","from_str","from_string","hash","init","into","into_string","partial_cmp","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","write_char","write_fmt","write_str","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","PYTHON3_VERSION","PYTHON_SERDE_MAGIC_BYTE_MARK","PySerializeWrap","PythonFunction","TrySerializeToBytes","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","deref","","deref_mut","","deserialize","","deserialize_pyobject_bytes_maybe_cloudpickle","drop","","eq","equivalent","","fmt","from","","","init","","into","","serialize","","serialize_pyobject_with_cloudpickle_fallback","to_owned","try_deserialize_bytes","","try_from","","try_into","","try_serialize_to_bytes","","type_id","","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","eq","equivalent","","fmt","from","","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","inplace_zip_filtermap","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[47,"polars_utils::abs_diff"],[51,"polars_utils::aliases"],[69,"polars_utils::arena"],[136,"polars_utils::atomic"],[157,"polars_utils::binary_search"],[162,"polars_utils::cache"],[199,"polars_utils::cell"],[219,"polars_utils::clmul"],[225,"polars_utils::contention_pool"],[240,"polars_utils::cpuid"],[242,"polars_utils::fixedringbuffer"],[265,"polars_utils::float"],[272,"polars_utils::floor_divmod"],[274,"polars_utils::functions"],[278,"polars_utils::hashing"],[310,"polars_utils::idx_vec"],[354,"polars_utils::index"],[417,"polars_utils::io"],[420,"polars_utils::itertools"],[430,"polars_utils::itertools::enumerate_idx"],[457,"polars_utils::mem"],[462,"polars_utils::min_max"],[469,"polars_utils::mmap"],[569,"polars_utils::nulls"],[574,"polars_utils::ord"],[576,"polars_utils::partitioned"],[595,"polars_utils::pl_str"],[653,"polars_utils::priority"],[676,"polars_utils::python_function"],[722,"polars_utils::slice"],[736,"polars_utils::sort"],[738,"polars_utils::sync"],[765,"polars_utils::sys"],[779,"polars_utils::total_ord"],[829,"polars_utils::unwrap"],[831,"polars_utils::vec"],[845,"num_traits"],[846,"core::cmp"],[847,"core::marker"],[848,"core::fmt"],[849,"core::clone"],[850,"core::result"],[851,"serde::de"],[852,"core::option"],[853,"core::hash"],[854,"core::default"],[855,"core::ops::function"],[856,"serde::ser"],[857,"core::any"],[858,"core::borrow"],[859,"alloc::sync"],[860,"alloc::vec"],[861,"core::convert"],[862,"core::ops::range"],[863,"core::iter::traits::collect"],[864,"core::slice::iter"],[865,"polars_error"],[866,"std::path"],[867,"std::io::error"],[868,"std::fs"],[869,"core::iter::traits::iterator"],[870,"core::ops::arith"],[871,"num_traits::cast"],[872,"num_traits::identities"],[873,"pyo3::marker"],[874,"pyo3::types::dict"],[875,"pyo3::instance"],[876,"core::iter::traits::exact_size"],[877,"core::iter::traits::double_ended"],[878,"memmap2"],[879,"memmap2::advice"],[880,"polars_utils::mmap::private"],[881,"bytes::bytes"],[882,"std::io"],[883,"hashbrown::map"],[884,"hashbrown::raw_entry"],[885,"std::ffi::os_str"],[886,"compact_str"],[887,"alloc::string"],[888,"alloc::boxed"],[889,"alloc::borrow"],[890,"polars_utils::python_function::serde_wrap"],[891,"core::mem::maybe_uninit"],[892,"core::slice::index"],[893,"rayon_core::thread_pool"]],"i":"```````````````````````````````````````````````d`00ACf```````0AdAfAChACj43210``AjAn101101010100010101010110000101111110010111110111011101010110111`Dh0000000000000000000`Dj``0``EfE`100000101010110000100101001001010`El000000000000000000```````Fb0000000000000```Fd000000000000000000000`Fh00000`Fj``````Gd000000Gf11111111`1111111111111``Gj00000000000000000000000000000000000000000````Hn````HjHl10`101010101010111010110221101010Ib122021Id2If443434343````J`0`000000`Jb0000000000000000000000000``````Kj00000Lb````Kl0L`12012Ld123013030303223301230123011`2301233001303300330230123012220110300020330302301230123012I`0`00```Mj00000000000000000Nb0`0000000000000000000000000000000000000000000000000000000`Of000000000000000000000`````OjOh10000101010`100000100101010`0Ol121210121`````A@bA@f0A@j`A@l0A@n0```AAd0000000000000000000000000``AAf00000000000ABf````0`AAl0``00000000000000000000000101AA`AAn11AB`02213333`ABh```ABl``00ABn`AC`ACb1ACd","f":"`````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}````````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{{Al{An}}{Al{An}}}Bd}{{Al{Al{c}}}Bd{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{c{{Bf{An}}}Bh}{c{{Bf{{Aj{e}}}}}BhBj}{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bl}{{Al{Al{c}}}Bl{}}0{{{Al{An}}{Al{AhBn}}}C`}{{{Al{{Aj{c}}}}{Al{AhBn}}}C`l}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Cb{An}}}{{Cb{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Cd{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`Cf}{{}Ab}0{{}c{}}0{{{Al{{Aj{c}}}}}Bl{}}{{{Al{Ah{Aj{c}}}}}{{Cd{An}}}{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Cd{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Ch{{Cl{c}{{Cj{c}}}}}}{{{Al{An}}c}BfCn}{{{Al{{Aj{c}}}}e}BfD`Cn}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCh}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{{{Al{Ah{Aj{c}}}}Ane}{{Bf{B``}}}Ch{{Db{c}{{Cj{{Bf{c`}}}}}}}}{AlDd}0{{{Al{{Aj{c}}}}}Df{}}{Ab{{Aj{c}}}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Dh}}}Dh}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}Dh}{{{Al{Dh}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{AhDh}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{}c{}}{{{Al{AhDh}}}B`}{AbDh}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`{{{Al{Dj}}e}{{Bf{AbAb}}}{}{{Db{{Al{c}}}{{Cj{Bd}}}}}}{{{Al{{Dl{c}}}}c}AbDn}0{{{Al{Dj}}e}Ab{}{{Db{{Al{c}}}{{Cj{Bl}}}}}}``{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{E`{ce}}}}}{{E`{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{E`{ce}}}{EbEd}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Ef{ceg}}}}cBl}e{EbEdBb}j{{Db{c}{{Cj{e}}}}}}{cc{}}0{{{Al{{E`{eg}}}}{Al{c}}}{{Cd{{Al{g}}}}}{EbEdEh}{{Ej{c}}EbEd}{}}{{{Al{Ah{E`{eg}}}}{Al{c}}}{{Cd{{Al{Ahg}}}}}{EbEdEh}{{Ej{c}}EbEd}{}}{{{Al{Ah{E`{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{Ej{c}}EbEd}{}{{Cl{{Al{e}}}{{Cj{g}}}}}}{{}Ab}0{{{Al{Ah{E`{ce}}}}ce}{{Al{Ahe}}}{EbEd}{}}{{}c{}}0{{gAb}{{Ef{ceg}}}{EbEdBb}j{{Db{c}{{Cj{e}}}}}}{Ab{{E`{ce}}}{EbEd}{}}{Alc{}}{c{{Bf{e}}}{}{}}0{{{Al{Ah{E`{eg}}}}{Al{c}}k}{{Bf{{Al{Ahg}}i}}}{}{{Ej{c}}EbEd}{}{}{{Cl{{Al{e}}}{{Cj{{Bf{gi}}}}}}}}{{}{{Bf{c}}}{}}0{AlDd}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{}{{El{c}}}Ch}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{c{{El{c}}}{}}{cc{}}{Enc{}}{{{Al{{El{c}}}}}{}Eh}{{{Al{Ah{El{c}}}}}{{Al{Ahc}}}Eh}{{}Ab}{{}c{}}{{{El{c}}}c{}}7{{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{F`F`}F`}0{F`F`}000`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Fb{c}}}}}cCh}?>{Ab{{Fb{c}}}Ch}{{{Al{{Fb{c}}}}c}B`Ch}=<;{{}Bl}0`{{{Al{{Fd{c}}}}}{{Ff{{Al{{Dl{c}}}}{Al{{Dl{c}}}}}}}{}}:9{{{Al{{Fd{c}}}}}Ab{}}98{{{Al{Ah{Fd{c}}}}}B`{}}8{{{Al{Ah{Fd{c}}}}cAb}Abj}8{{}Ab}{{}c{}}{{{Al{{Fd{c}}}}}Bl{}}05{Ab{{Fd{c}}}{}}{{{Al{Ah{Fd{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Fd{c}}}}c}{{Cd{B`}}}{}}8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`=={{{Al{Fh}}}Bl}>0{{}Fh}`{{FjFj}{{Ff{FjFj}}}}{{{Fl{c}}e}{{Fl{c}}}Bb{{Db{c}{{Cj{c}}}}}}{{{Al{{Dl{e}}}}{Cd{Ab}}}{{Fn{c}}}Bb{{G`{{Dl{c}}}}}}{{AbAb{Gb{Ab}}}{{Gb{Ab}}}}{{{Fl{c}}g}{{Bf{{Fl{c}}e}}}Bb{}{{Db{c}{{Cj{{Bf{ce}}}}}}}}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Gd}}}Gd}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Gf}}}F`}{{{Al{Gd}}}F`}{AbB`}{{{Al{Gd}}{Al{Gd}}}Bl}{{Al{Al{c}}}Bl{}}0{{{Al{Gd}}{Al{AhBn}}}C`}{cc{}}{{{Al{Gd}}{Al{Ahc}}}B`Cf}{{F`Ab}Ab}{{}Ab}{{}c{}}{{{Al{Gd}}}Bl}{{{Cd{{Al{{Dl{Gh}}}}}}F`}Gd}{ce{}{}}{Alc{}}{{{Al{Gd}}}c{}}<8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Gdc{}}``{{{Al{Ah{Gj{c}}}}}{{Al{Ah{Dl{c}}}}}{}}0{{{Al{{Gj{c}}}}}{{Al{{Dl{c}}}}}{}}0{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{{Al{Ah{Gj{c}}}}}B`{}}{{{Al{{Gj{c}}}}}{{Gj{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{Gj{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{{Gj{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{Ahc}}}{}}7{AbB`}{{{Al{{Gj{c}}}}{Al{{Gj{c}}}}}BlGl}{{Al{Al{c}}}Bl{}}0{{{Al{Ah{Gj{c}}}}e}B`{}{{H`{}{{Gn{c}}}}}}{{{Al{{Gj{c}}}}{Al{AhBn}}}C`l}{cc{}}{{{Al{{Dl{c}}}}}{{Gj{c}}}Bb}{{{Fn{c}}}{{Gj{c}}}{}}{e{{Gj{c}}}{}{{H`{}{{Gn{c}}}}}}{{}Ab}{{}c{}}{{{Al{{Gj{c}}}}}Bl{}}{{{Al{{Gj{c}}}}}{{Hb{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Hd{c}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{}{{Gj{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Gj{c}}}}c}B`{}}0{{{Al{Ah{Gj{c}}}}Ab}B`{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Ab{{Gj{c}}}{}}`````````{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{Dl{Hf}}}}Hf}{{Hh{B`}}}}{{{Al{Hj}}}Hj}{{{Al{Hl}}}Hl}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hj}}{Al{Hj}}}Bl}{{Al{Al{c}}}Bl{}}0{Hl{{Ff{HfHf}}}}{{{Al{Hj}}{Al{AhBn}}}C`}{{{Al{Hl}}{Al{AhBn}}}C`}{cc{}}{HfHj}1{{{Al{{Hn{}{{Gn{c}}}}}}Ab}cI`}0{{{Al{Hj}}}Hf}{{}Ab}0`{{{Al{AhHl}}}{{Al{AhF`}}}}{{}c{}}0{{{Al{Ib}}}Bl}{{{Al{Hl}}}Bl}{{{Al{Hj}}}Bl}{{{Al{c}}}Bl{}}{{{Al{Ib}}}Ab}{{}Hj}{{}Hl}{{{Al{Id}}}Ab}{{HfHf}Hl}{{IfF`}Hf}{{{Al{Hj}}}{{Cd{Hf}}}}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{AlDd}0{{{Al{Ih}}Ij}Il}{{{Al{Ih}}}{{Hh{In}}}}0`{J`Bl}{J`{{Fn{c}}}{}}`{J`{{Jb{J`Hf}}}}{J`{{Jb{J`Df}}}}{{J`cg}BlH`{}{{Db{e}{{Cj{Bl}}}}}}{{J`cg}{{Cd{Bd}}}H`{}{{Db{e}{{Cj{{Cd{Bd}}}}}}}}{J`{{Bf{ce}}}{}{}}{J`{{Bf{{Fn{c}}e}}}{}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Jb{ce}}}}}{{Jb{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Jb{ce}}}AbJd{{Jf{}{{Cj{}}}}JhJjJlj}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Jb{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}0{Jn{{Kb{K`}}}}{{{Al{{Jb{ce}}}}}AbKd{{Jf{}{{Cj{}}}}JhJjJlj}}{c{{Jb{ce}}}{}Kf}{{{Al{Ah{Jb{ce}}}}}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}}{{Cd{{Ff{e}}}}}{KdKh}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{{Ff{e}}}}}{KdKh}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{{Jb{ce}}}}}{{Ff{Ab{Cd{Ab}}}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{Al{{Dl{Gh}}}}}B`}000{{{Al{{Dl{c}}}}}{{Al{Ah{Dl{c}}}}}j}`{{KjKj}Kj}000{{{Al{Kj}}{Al{Kj}}}Bl}0`````{{{Al{Kl}}Kn}{{Bf{B`Ij}}}}{{{Al{Kl}}KnAbAb}{{Bf{B`Ij}}}}{{{Al{L`}}}Gh}{{{Al{Kl}}}{{Al{{Dl{Gh}}}}}}{{{Al{Lb}}}{{Al{{Dl{Gh}}}}}}{{{Al{L`}}}{{Al{{Dl{Gh}}}}}}{Al{{Al{c}}}{}}000{{{Al{Ah}}}{{Al{Ahc}}}{}}000{{{Al{Lb}}}Lb}{{{Al{Ld}}}Ld}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{}Lb}9{Ab{{Al{c}}}{}}{{{Al{Lb}}}{{Al{c}}}{}}111{Ab{{Al{Ahc}}}{}}000{AbB`}000{{{Al{AhL`}}}B`}{{{Al{In}}}{{Hh{B`}}}}{{{Al{Kl}}{Al{AhBn}}}{{Bf{B`Lf}}}}{{{Al{Lb}}{Al{AhBn}}}C`}{{{Al{Ld}}{Al{AhBn}}}C`}{{{Al{L`}}{Al{AhBn}}}C`}{cc{}}{{{Fn{Gh}}}Lb}11{LbLd}2{LhLb}{LhLd}{{{Al{In}}}{{Hh{Lb}}}}{{{Fl{L`}}}Lb}{c{{Lj{Ld}}}Ll}{{{Al{{Dl{Gh}}}}}Ld}{{{Al{{Dl{Gh}}}}}Lb}8{{{Fn{Gh}}}Ld}{{}Ab}000{{}c{}}000{{{Al{Kl}}}{{Bf{B`Ij}}}}{Kl{{Bf{LnIj}}}}{c{{Bf{KlIj}}}M`}={{{Al{In}}}{{Hh{L`}}}}{{{Al{In}}Mb}{{Hh{L`}}}}{{{Al{Ld}}}Ab}{{{Al{Lb}}}B`}{{{Al{AhLd}}{Al{Ah{Dl{Gh}}}}}{{Lj{Ab}}}}{{{Al{AhLd}}Ab}Lb}3{{{Al{AhKl}}AbMd}{{Bf{B`Ij}}}}{{{Al{AhLd}}Mf}{{Lj{F`}}}}{{{Al{Lb}}{Gb{Ab}}}Lb}{Alc{}}0{Lb{{Fn{Gh}}}}8{c{{Bf{e}}}{}{}}000{{}{{Bf{c}}}{}}000{AlDd}000{{{Al{Kl}}}{{Bf{B`Ij}}}}```{{{Al{{I`{}{{Mh{c}}}}}}}Bl{}}{{{I`{}{{Mh{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hFh}}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Mj{ceg}}}}}{{Al{{Dl{{Ml{ceg}}}}}}}{}{}{}}{{{Al{Ah{Mj{ceg}}}}}{{Al{Ah{Fn{{Ml{ceg}}}}}}}{}{}{}}{{}c{}}{{{Fn{{Ml{ceg}}}}}{{Mj{ceg}}}{}{}{}}{{{Al{{Mj{ceg}}}}F`}{{Mn{ceg}}}{}{}{}}{{{Al{{Mj{ceg}}}}F`}{{Ff{{Mn{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Mj{ceg}}}}F`}{{Ff{{N`{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Mj{ceg}}}}F`}{{N`{ceg}}}{}{}{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}```{{{Al{Nb}}}{{Al{Nd}}}}{{{Al{Nb}}}{{Al{{Dl{Gh}}}}}}{{{Al{Nb}}}{{Al{Ih}}}}{{{Al{Nb}}}{{Al{Nf}}}}33{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Nb}}}Nb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{Nb}}{Al{Nb}}}Bd}{{Al{Al{c}}}Bd{}}{{}Nb}{{{Al{Nb}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{c{{Bf{Nb}}}Bh}{AbB`}{{{Al{Nb}}{Al{c}}}Bl{{G`{Nd}}Eh}}{{Al{Al{c}}}Bl{}}0{{{Al{Nb}}{Al{AhBn}}}C`}0{NhNb}{cc{}}{{{Al{Nj}}}Nb}{NjNb}{{{Al{Nd}}}Nb}{cNb{{H`{}{{Gn{Nb}}}}}}{cNb{{H`{}{{Gn{{Al{Nb}}}}}}}}{cNb{{H`{}{{Gn{Nl}}}}}}{cNb{{H`{}{{Gn{{Al{Nl}}}}}}}}{cNb{{H`{}{{Gn{{Al{Nd}}}}}}}}{cNb{{H`{}{{Gn{Nj}}}}}}{cNb{{H`{}{{Gn{{Nn{Nd}}}}}}}}{cNb{{H`{}{{Gn{{O`{Nd}}}}}}}}889{{{Al{Nb}}{Al{Ahc}}}B`Cf}{{}Ab}{{}c{}}{NbNj}{{{Al{Nb}}{Al{Nb}}}{{Cd{Bd}}}}{{{Al{Nb}}c}BfCn}{Alc{}}{AlNj}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{Al{{Bf{NhOb}}}}{AlDd}{{{Al{AhNb}}Nl}C`}{{{Al{AhNb}}Od}C`}{{{Al{AhNb}}{Al{Nd}}}C`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Of{ce}}}}}{{Of{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{Of{ce}}}}{Al{{Of{ce}}}}}Bd{DnEd}{}}{{Al{Al{c}}}Bd{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Of{ce}}}}{Al{{Of{ce}}}}}BlEd{}}{{Al{Al{c}}}Bl{}}0{{{Al{{Of{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}{{{Al{{Of{ce}}}}{Al{{Of{ce}}}}}{{Cd{Bd}}}{DnEd}{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`````{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{Oh}}}Oh}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{c{{Bf{{Oj{e}}}}}BhOl}{c{{Bf{Oh}}}Bh}{{{Al{{Dl{Gh}}}}}{{Hh{c}}}{{A@`{On}}}}{AbB`}0{{{Al{Oh}}{Al{Oh}}}Bl}{{Al{Al{c}}}Bl{}}0{{{Al{Oh}}{Al{AhBn}}}C`}{cc{}}{OnOh}1{{}Ab}0{{}c{}}0{{{Al{{Oj{{Al{c}}}}}}e}BfOlCn}{{{Al{Oh}}c}BfCn}{{{Al{On}}}{{Hh{{Fn{Gh}}}}}}{Alc{}}{{{Al{{Dl{Gh}}}}}{{Hh{Ol}}}}{{{Al{{Dl{Gh}}}}}{{Hh{Oh}}}}{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{{{Al{Ol}}}{{Hh{{Fn{Gh}}}}}}{{{Al{Oh}}}{{Hh{{Fn{Gh}}}}}}{AlDd}0`````{{{Al{A@b}}}{{Al{{Dl{{A@d{c}}}}}}}{}}{{{Al{A@f}}e}Al{}{{A@h{{Dl{c}}}}}}{{{Al{AhA@f}}e}{{Al{Ah}}}{}{{A@h{{Dl{c}}}}}}{{{Al{A@j}}}Bl}{{{Al{{Dl{Gh}}}}}F`}{{{Al{A@l}}}{{Cd{{Al{c}}}}}{}}0{{{Al{A@n}}{Gb{Ab}}}A@n}0{{e{Al{Ah{Fn{Gh}}}}Ab}{{Al{Ah{Dl{g}}}}}{AA`j}{{H`{}{{Gn{c}}}}}{Jhj}}{{{Al{AAb}}{Al{{Dl{{Ff{HfHf}}}}}}{Al{Ah{Fn{Hf}}}}}B`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{AAd{c}}}}}{{AAd{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{AAd{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{AAd{c}}}}{Al{{AAd{c}}}}}BlGl}{{Al{Al{c}}}Bl{}}0{{{Al{{AAd{c}}}}{Al{AhBn}}}C`l}{{}{{AAd{c}}}{}}{cc{}}1{{{Al{{AAd{c}}}}}{}{}}{{}Ab}{{}c{}}{{{Al{{AAd{c}}}}}Bl{}}55{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{AAf}}}F`}><;876```````54{AAhAAh}{AAjAAj}{{{Al{{AAl{c}}}}}{{AAl{c}}}Bb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{AAl{c}}}}{Al{{AAl{c}}}}}BdAA`}{{Al{Al{c}}}Bd{}}:9{{{Al{{AAl{c}}}}}F`Gf}9{{{Al{{AAl{c}}}}{Al{{AAl{c}}}}}BlAAn}{{Al{Al{c}}}Bl{}}0{cc{}}{{{Al{{AAl{c}}}}{Al{{AAl{c}}}}}BlAA`}0{{{Al{{AAl{c}}}}{Al{Ahe}}}B`AB`Cf}{{}Ab}{{}c{}}{{{Al{{AAl{c}}}}}BlI`}447{{{Al{{AAl{c}}}}{Al{{AAl{c}}}}}{{Cd{Bd}}}AA`}{ce{}{}}{Alc{}}{{{Al{{ABf{}{{ABb{c}}{ABd{e}}}}}}}c{EbEd}{}}{{{Al{AA`}}{Al{AA`}}}Bd}{{{Al{AAn}}{Al{AAn}}}Bl}{{{Al{AA`}}{Al{AA`}}}Bl}0{{{Al{AB`}}{Al{Ahc}}}B`Cf}{{{Al{{Dl{AB`}}}}{Al{Ahc}}}B`Cf}223{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{AAl{c}}}eI`{}}`{ABhc{}}``````{{{Al{{ABl{}{{ABj{c}}}}}}g}{{Fn{e}}}{}{}{{Db{{Al{c}}}{{Cj{e}}}}}}{{{ABl{}{{ABj{c}}}}g}{{Fn{e}}}{}{}{{Db{c}{{Cj{e}}}}}}{{{Al{AhABn}}Abc}B`j}{{{Al{Ah{Fn{c}}}}{Al{Ah{Fn{e}}}}g}B`{}{}{{Db{ce}{{Cj{{Cd{{Ff{ce}}}}}}}}}}{AC`{{Ff{AbAb}}}}{{{Al{AhACb}}c}B`{}}{{{Al{AC`}}}{{Ff{AbAb}}}}{{AbAAj}ACd}","D":"A@h","p":[[17,"Abs"],[10,"AbsDiff",47],[10,"Num",845],[10,"PartialOrd",846],[10,"Copy",847],[10,"Debug",848],[10,"Send",847],[10,"Sync",847],[1,"usize"],[8,"PlHashMap",51],[8,"PlHashSet",51],[0,"mut"],[5,"Arena",69],[1,"reference"],[5,"Node",69],[1,"unit"],[10,"Clone",849],[6,"Ordering",846],[6,"Result",850],[10,"Deserializer",851],[10,"Deserialize",851],[1,"bool"],[5,"Formatter",848],[8,"Result",848],[1,"array"],[6,"Option",852],[10,"Hasher",853],[10,"Default",854],[17,"Output"],[10,"FnOnce",855],[10,"Serializer",856],[10,"Serialize",856],[10,"FnMut",855],[5,"TypeId",857],[1,"u32"],[5,"SyncCounter",136],[10,"ExponentialSearch",157],[1,"slice"],[10,"Ord",846],[5,"FastFixedCache",162],[10,"Hash",853],[10,"Eq",846],[5,"FastCachedFunc",162],[10,"Sized",847],[10,"Borrow",858],[5,"SyncUnsafeCell",199],[1,"never"],[1,"u64"],[5,"LowContentionPool",225],[5,"FixedRingBuffer",242],[1,"tuple"],[10,"IsFloat",265],[10,"FloorDivMod",272],[5,"Arc",859],[5,"Vec",860],[10,"AsRef",861],[5,"Range",862],[5,"BytesHash",278],[10,"DirtyHash",278],[1,"u8"],[5,"UnitVec",310],[10,"PartialEq",846],[17,"Item"],[10,"IntoIterator",863],[5,"Iter",864],[5,"IterMut",864],[8,"IdxSize",354],[8,"PolarsResult",865],[5,"NullableIdxSize",354],[5,"ChunkId",354],[10,"Indexable",354],[10,"IsNull",569],[10,"Bounded",354],[10,"NullCount",354],[10,"ToIdx",354],[5,"Path",866],[5,"Error",867],[6,"PolarsError",865],[5,"File",868],[10,"Itertools",420],[5,"EnumerateIdx",430],[10,"Iterator",869],[10,"Add",870],[10,"FromPrimitive",871],[10,"AddAssign",870],[10,"One",872],[5,"Python",873],[5,"PyDict",874],[5,"Bound",875],[10,"ExactSizeIterator",876],[10,"Zero",872],[10,"DoubleEndedIterator",877],[10,"MinMax",462],[5,"Mmap",469,878],[6,"Advice",879],[5,"MMapSemaphore",469],[5,"MemSlice",469,880],[5,"MemReader",469],[5,"Error",848],[5,"Bytes",881],[8,"Result",867],[10,"Read",882],[5,"MmapMut",878],[10,"MmapAsRawDesc",878],[5,"MmapOptions",878],[5,"RemapOptions",878],[6,"SeekFrom",882],[17,"Inner"],[5,"PartitionedHashMap",576],[5,"HashMap",883],[5,"RawEntryBuilder",884],[5,"RawEntryBuilderMut",884],[5,"PlSmallStr",595],[1,"str"],[5,"OsStr",885],[5,"CompactString",886],[5,"String",887],[1,"char"],[5,"Box",888],[6,"Cow",889],[6,"ToCompactStringError",886],[5,"Arguments",848],[5,"Priority",653],[5,"PythonFunction",676],[5,"PySerializeWrap",676,890],[10,"TrySerializeToBytes",676,890],[8,"PyObject",875],[10,"From",861],[10,"Slice2Uninit",722],[20,"MaybeUninit",891],[10,"GetSaferUnchecked",722],[10,"SliceIndex",892],[10,"SortedSlice",722],[10,"Extrema",722],[10,"SliceAble",722],[10,"TotalOrd",779],[5,"ThreadPool",893],[5,"SyncPtr",738],[5,"MemInfo",765],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",779],[10,"TotalEq",779],[10,"TotalHash",779],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",779],[10,"UnwrapUncheckedRelease",829],[17,"ItemIn"],[10,"ConvertVec",831],[10,"ResizeFaster",831],[10,"IntoRawParts",831],[10,"PushUnchecked",831],[10,"CapacityByFactor",831],[10,"InitHashMaps",51],[8,"PlIndexMap",51],[8,"PlIndexSet",51]],"r":[[0,354],[1,354],[472,880],[473,878],[676,890],[678,890],[680,890]],"b":[[335,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[336,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[598,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[599,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[600,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[601,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[620,"impl-Display-for-PlSmallStr"],[621,"impl-Debug-for-PlSmallStr"],[622,"impl-From%3CCompactString%3E-for-PlSmallStr"],[624,"impl-From%3C%26String%3E-for-PlSmallStr"],[625,"impl-From%3CString%3E-for-PlSmallStr"],[626,"impl-From%3C%26str%3E-for-PlSmallStr"],[627,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[628,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[629,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[630,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[631,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[632,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[633,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[634,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMkCVwAAAAgACgBbAGgAAABqAAEAbQACAHIAFgCKAAoAlgAAAJkABgCiAAAApAAPALYABQC+AAkAyQABAMwAAgDRAAAA1AAAANkADgDpAAEA7AAGAPUABgD+AAAAAAEDAAYBAwALAQsAGAEOACgBAgAsAQsAOQEVAFABAwBVAQYAXQElAIQBAACGAQAAiAEEAI8BFQCmAQAAqAEEALABCQC7AQAAvQEDAMIBBwDPAQgA3QEmAAUCAAAIAgAADAICABMCAwAeAgMAIwICACcCAAApAgEALAIMADoCBABBAgUASAICAEwCCQBXAhgAcQIPAIICCwCPAg0AngIAAKACBACmAgAAqAIAAKoCEwC/AgAAwQIBAMUCEwDbAgQA4QIAAOQCBgDsAgUA8wICAPcCAAD5AgUAAAMEAAcDAAAJAwMAEQMDABcDCwAkAwMAKQMVAEADBABGAwIASgMAAEwDAQA="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[426776,200023,54422,83843,9482,3520,8539,28062]}